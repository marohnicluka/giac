# domain
1 Renvoie le domaine de définition d'une expression.
2 Returns the definition domain of an expression.
0 Expr
domain(log(x+1))
domain(log(x)+asin(x))

# smith
1 Calcule la forme normale de Smith d'une matrice a coefficients polynomiaux :renvoie U,D,V tels que tels que U et V inversibles, D  diagonale et U*A*V=D.
2 Smith normal form of a matrix with  polynomial coefficients : returns U,D,V such that U and V invertible, D diagonal, and U*A*V=D.
3 Calcula la forma normal de Smith de una matriz a coeficientes polominos: devuelve U,B,V tales que U y V invertibles, D diagonal, y D=U*A*V.
4 Υπολογίζει την κανονική μορφή Smith ενός πίνακα με συντελεστές πολυώνυμα : επιστρέφει U, D, V, τέτοια ώστε U και V αντιστρέψιμα, D διαγώνιος, και D=U*A*V.
5 Gibt die Smith-Normalform der Koeffizientenmatrix eines Polynoms an (U,D,V wobei U*A*V=D)
0 Mtrx(A)
-1 hermite
-2 ismith
-3 ihermite
 n:=10; A:=ranm(n,n) % 17; U,D,V:=smith(x*idn(n)-A);normal(U*(x*idn(n)-A)*V-D); diag(D);
 GF(3,5,g); n:=3; A:=ranm(n,n,g); U,D,V:=smith(x*idn(n)-A);normal(U*(x*idn(n)-A)*V-D); diag(D);

# wz_certificate
1 Certificat de Wilf-Zeilberger pour une identite sum(U,k)=res
2 Wilf-Zeilberger certificate for an identity sum(U,k)=res
5 Wilf-Zeilberger Zertifikat
0 Expr(U),[Expr(res)],[Var(n),Var(k)]
-1 sum
wz_certificate((-1)^k*comb(n,k)*comb(2k,k)*4^(n-k),comb(2n,n),n,k);
wz_certificate((-1)^k*comb(n,k)/comb(k+a,k),a/(n+a),n,k);
wz_certificate((-1)^(n-k)*comb(2n,k)^2,comb(2n,n),n,k);
wz_certificate((a+k)!*(b+k)!*(c+n-k-a-b-1)!/(k+1)!/(n-k)!/(c+k)!,(a-1)!*(b-1)!*(c-a-b-1)!*(c+n-a)!*(c+n-b)!/(c-a-1)!/(c-b-1)!/(n+1)!/(c+n)!,n,k);

# keep_algext
1 Laisse les extensions algébriques telles quelles (keep_algext:=1) ou tente de les réécrire (keep_algext:=0).
2 Pseudo-variable to keep algebraic extensions (keep_algext:=1) or try to rewrite them (keep_algext:=0).
5 Pseudevariable, die benutzt werden kann um algebraische Erweiterungen zu behalten (keep_algext:=1) oder um sie zu überschreiben (keep_algext:=0)
0 :=Intg(0 or 1)
 keep_algext:=1

# jacobi_linsolve
1 Résolution d'un système linéaire de matrice A et de second membre b, par la méthode itérative de Jacobi avec une tolérance de eps et un nombre maximal d'itérations de maxiter. 
2 Resolution of a linear system  A*X=b  by the iterative Jacobi method with eps as error margin  and a number of iterations inferior to maxiter.
5 Loesung eines linearen Gleichungssystems A*X=b mit dem Jacobi-Verfahren. Die Groesse des Fehlers wird mit eps festgelegt und die die maximale Anzahl der Iterationen mit maxiter
0 Mtrx(A),Vect(b),Real(eps),[Int(maxiter)]
-1 gauss_seidel_linsolve
-2 linsolve
 a:=[[100,2],[2,100]];jacobi_linsolve(a,[0,1],1e-12);
 a:=[[100,2],[2,100]];jacobi_linsolve(table(a),[0,1],1e-12); 

# gauss_seidel_linsolve
1 Résolution d'un système linéaire de matrice A et de second membre b, par la méthode itérative de Gauss-Seidel (par défaut omega=1) ou de relaxation avec une tolérance de eps et un nombre maximal d'itérations de maxiter. 
2 Resolution of a linear system A*X=b  by the iterative Gauss-Seidel method (by defaut omega=1) or by relaxation method, with eps as error margin and a number of iterations inferior to maxiter.
5 Loesung eines linearen Gleichungssystems A*X=b mit dem Gauss-Seidel-Verfahren (ohne Spezifikition omega=1) oder dem Relaxationsverfahren, wobei die Groesse des Fehlers mit eps und die die maximale Anzahl der Iterationen mit maxiter festgelegt wird
0 [Real(omega)],Mtrx(A),Vect(b),Real(eps),[Int(maxiter)]
-1 jacobi_linsolve
-2 linsolve
 a:=[[100,2],[2,100]];gauss_seidel_linsolve(a,[0,1],1e-12);
 a:=[[100,2],[2,100]];gauss_seidel_linsolve(table(a),[0,1],1e-12); 
 a:=[[100,2],[2,100]];gauss_seidel_linsolve(1.5,a,[0,1],1e-12);
 a:=[[100,2],[2,100]];gauss_seidel_linsolve(1.5,table(a),[0,1],1e-12); 

# linspace
1 linspace(a,b,n) génère une liste de n éléments régulièrement espacés entre a et b, par défaut n=100 (commande compatible scilab).
2 linspace(a,b,n) creates a list of n elements at regular intervals between a and b, by defaut n=100 (compatibility with scilab).
5 linspace(a,b,n) generiert eine Liste aus n aequidistanten Elementen zwischen a und b, ohne Spezifikation n=100 (kompatibel mit scilab)
0 Real(a),Real(b),[Int(n)]
linspace(0,1,11)

# besselY
1 besselY(x,p) renvoie la fonction de Bessel de deuxième espèce Yp(x).
2 besselY(x,p) returns the Bessel function of second kind Yp(x).
0 Real(x),Int(p)
-1 BesselY
-2 BesselJ
-3 besselJ
besselY(sqrt(2),2)
besselY(sqrt(2),-2)

# BesselY
1 BesselY(p,x) renvoie la fonction de Bessel de deuxième espèce Yp(x).
2 BesselY(p,x) returns the Bessel function of second kind Yp(x).
0 Int(p),Real(x)
-1 besselY
-2 BesselJ
-3 besselJ
BesselJ(2,sqrt(2))
BesselJ(-2,sqrt(2))

# besselJ
1 besselJ(x,p) renvoie la fonction de Bessel de première espèce Jp(x).
2 besselJ(x,p) returns the Bessel function of first kind Jp(x).
0 Real(x),Int(p)
-1 BesselJ
-2 BesselY
-3 besselY
besselJ(sqrt(2),2)
besselJ(sqrt(2),-2)

# BesselJ
1 BesselJ(p,x) renvoie la fonction de Bessel de première espèce Jp(x).
2 BesselJ(p,x) returns the Bessel function of first kind Jp(x).
0 Int(p),Real(x)
-1 besselJ
-2 BesselY
-3 besselY
BesselJ(2,sqrt(2))
BesselJ(-2,sqrt(2))

# batons
1 Dessine pour k=0..nrows, les segments (xk,0)-(xk,yk) où xk=élément ligne k colonne 0 et yk=élément ligne k colonne j (j=1..ncols).
2 Draws for k=0..nrows, the segments (xk,0)-(xk,yk) where xk=element row k column 0 and yk=element row k column j (j=1..ncols).
0 Mtrx
-1 polygonplot
-2 scatterplot
-3 listplot
batons([1,3],[2,5],[3,2])
batons([[1,3],[2,5],[3,2]])
batons([1,2,3],[3,5,2])

# ()
1 () renvoie la valeur d'une fonction ou permet de substituer des valeurs dans une expression.
2 () returns the value of a function or substitutes values in an expression
0 
-1 subst
-2 ->
-3 :=
 f(x,y,z):=x+2y+3z;f(1,2,z)
 f:=(x,y,z)->x+2y+3z;f(1,2,z)
 g:=x+2y+3z;g(x=1,y=2)

# REDIM redim
1 Redimensionne selon n1,n2 une matrice (resp vecteur) soit en la raccourcissant, soit en l'augmentant avec des 0.
2 Shrink or enlarge with 0 a matrix (or vector) according to the new n1 and n2 dimensions.
0 Mtrx||Vect,Intg(n1),Intg(n2)
-1 replace
redim([[1,2,3],[3,-9,6],[4,5,6]],1,2)
redim([[1,2,3],[3,-9,6],[4,5,6]],4,4)

# REPLACE replace
1 La matrice B est mise en remplacement dans A à partir des 2 indices n1,n2.
2 Replace part of matrix A from indices n1,n2 with the values of matrix B.
0 Mtrx(A),Lst(n1,n2),Mtrx(B)
-1 redim
replace([[1,2,3],[3,-9,6],[4,5,6]],[1,0],[[7,8],[9,0]])

# linfnorm
1 Triple norme d'une matrice subordonnée à la norme linfini.
2 Matrix norm induced by linfinity norm.
0 Mtrx
-1 l1norm
-2 l2norm
-3 matrix_norm
-4 frobenius_norm
linfnorm([[1,2,3],[3,-9,6],[4,5,6]])

# frobenius_norm
1 Norme de Frobenius d'une matrice A (=sqrt(sum |aij|^2)).
2 Frobenius norm of a matrix A (=sqrt(sum |aij|^2)).
0 Mtrx
-1 l1norm
-2 l2 norm
-3 linfnorm
-4 matrix_norm
frobenius_norm([[1,2,3],[3,-9,6],[4,5,6]])

# matrix_norm
1 Triple norme d'une matrice subordonnée soit à la norme l1, soit à la norme l2, soit à la norme linfini.
2 Matrix norm   induced by l1norm or by l2norm or by linfinty norm.
0 Mtrx,[2]||[inf]
-1 l1norm
-2 l2 norm
-3 linfnorm
-4 frobenius_norm
matrix_norm([[1,2,3],[3,-9,6],[4,5,6]])
matrix_norm([[1,2,3],[3,-9,6],[4,5,6]],1)
matrix_norm([[1,2,3],[3,-9,6],[4,5,6]],2)
matrix_norm([[1,2,3],[3,-9,6],[4,5,6]],inf)

# fadeev
1 Option de la commande pcar ou charpoly pour spécifier l'algorithme utilisé.
2 Option of the pcar or charpoly command to specify the algorithm.
3 Opción del comando pcar o charpoly para especificar el algoritmo.
4 Επιλογή της εντολής pcar ή charpoly για καθορισμό τον αλγόριθμο.
0 Opt
-1 pcar
 pcar([[4,1,-2],[1,2,-1],[2,1,0]],fadeev)

# COND cond
1 Nombre de condition d'une matrice, utiliser COND(.,1) pour la norme l1, COND(.,2) pour l2 et COND(.,inf) pour linfini (1 est mis par défaut).
2 Condition number of a matrix, use COND(.,1) for l1, COND(.,2) for l2 norm and COND(.,inf) for linf (1 by default).
0 Mtrx,[2]||[inf]
-1 SVL
COND([[1,2],[1,4]])
COND([[1,2],[1,4]],1)
COND([[1,2],[1,4]],2)
COND([[1,2],[1,4]],inf)

# bezier
1 Courbe de Bezier définie par des points de contrôle.
2 Bezier curve defined by control points.
0 Lst,[plot]
-1 parameq
bezier(1,1+i,2+i,3-i,plot)
bezier(point([0,0,0]),point([1,1,0]),point([0,1,1]),plot)
 parameq(bezier(1,1+i,2+i,3-i))
 parameq(bezier(point([0,0,0]),point([1,1,0]),point([0,1,1])))

# flatten
1 Aplatit récursivement une liste contenant des listes.
2 Recursively flatten a list containing lists.
0 Lst
-1 mat2list
flatten([[1,[2,3],4],[5,6]])

# chisquaret
1 Test du Chi^2 d'adéquation entre 2 (or n) échantillons ou entre 1 échantillon et une loi de distribution (multinomiale ou donnée par une fonction).
2 Chi^2 test : adequation between 2 (or n) samples or between 1 sample and a distribution law (multinomial or given by a law).
0 Data,[Func],[FuncParams]
-1 normalt
-2 studentt
-3 kolmogorovt
chisquaret([57,54])
chisquaret([1,1,1,1,1,0,0,1,0,0,1,1,1,0,1,1,0,1,1,0,0,0,0],[.4,.6])
chisquaret([57,30],[.6,.4])
chisquaret([17,15,12,15],[15,13,13,14])
chisquaret(ranv(1000,binomial,10,.5),binomial)
chisquaret(ranv(1000,binomial,10,.5),binomial,11,.5)
chisquaret(ranv(1000,normald,0,.2),normald)
chisquaret([11,16,17,22,14,10],[1/6,1/6,1/6,1/6,1/6,1/6])
chisquaret([11,16,17,22,14,10],[(1/6)$6])

# plotcdf
1 Representation graphique d'une distribution cumulée pour une loi de probabilité.
2 Graphic representation of a cumulated distribution function.
0 Func,FuncParams
-1 icdf
-2 binomial_cdf
-3 normald_cdf
-4 cdf
plotcdf(binomial,10,0.5)
plotcdf(normald,0.0,1.0)
plotcdf([1,3,4,3,5,6])

# back
1 Désigne le dernier élément d'un vecteur ou d'une suite d'éléments ou d'une chaîne.
2 Returns the last element of a vector or a sequence or a string.
0 Vect or Seq or Str
-1 inter
-2 head
-3 mid
-4 left
-5 right
back(1,2,3)
back([1,2,3])
back("bonjour")

# find
1 Liste des positions d'un objet dans une liste, une chaîne ou un ensemble.
2 List of positions of an object in a list, a string or a set.
0 Expr,Vect
-1 index
-2 member
find(1,[3,x,1,2,1,3])
find(2,[0,1,3,2,4,2,5])[0]
find("a","abracadabrant")
find("ab","abracadabrant")
find(1,%{4,3,1,2%})

# index
1 Indice de la première position d'un objet dans une liste une chaîne ou un ensemble ou renvoie un message d'erreur.
2 Index of the first position of an object in a list, a string or a set or return an error message.
0 Vect,Expr
-1 find
-2 member
index([3,x,1,2,1,3],1)
index([0,1,3,2,4,2,5],2)
index(%{4,3,1,2%},1)
index("abracadabrant","c")

# count
1 Renvoie f(l[0])+f(l[1])+...+f(l[size(l)-1]) ou compte le nombre d'occurrences si l'argument est une liste d'entiers en renvoyant une matrice de 1ère col les éléments de la liste triée et 2ème col l'effectif de cet élément dans la liste.
2 Returns f(l[0])+f(l[1])+...+f(l[size(l)-1]) or count number of occurrences if the argument is a vector of integers.
3 Devuelve f(l[0])+f(l[1])+..+f(l[size(l)-1]).
4 Επιστρέφει f(l[0])+f(l[1])+...+f(l[size(l)-1]).
0 Fnc(f)||LstIntg,(Lst||Mtrx)(l),[Opt(row||col)]
-1 count_eq
-2 count_inf
-3 count_sup
count(id,[-2/5,-1,0,1,2,3/5])
count(1,[-2,-1,0,1,2,3])
count([1,3,1,1,2,10,3])
count((x)->x>2,[3/2,5/2,8/3])
count((x)->x==1,[-2,1,0,1,2,3])
count((x)->x>2,[[3,5/2],[4,1]])
count((x)->x>2,[[3,5/2],[4,1]],row)
count((x)->x>2,[[3,5/2],[4,1]],col)
count((x)->x>2 && x<4,[[3,9/2],[4,1]])
count((x)->x<2 || x>4,[[3,9/2],[4,1]])

# uniform uniformd
1 Renvoie la densité de probabilité en x de la loi uniforme sur [a,b].
2 Returns the density of probability at x of the uniform law on [a,b].
3 Devuelve la densidad de probabilidad de la ley de uniform.
4 Επιστρέφει την πυκνότητα της πιθανότητας της κατανομής uniform.
8 uniform（或 uniform）概率密度函数。 
0 Real(a),Real(b),Real(x)
-1 uniform_cdf
-2 uniform_icdf
-3 randvector
-4 ranm
uniform(2,5,4)
uniform(1.2,3.5,3)
 randvector(3,uniform,1.2,3.5)
 ranm(4,3,uniform,1.2,3.5)

# uniform_cdf uniformd_cdf
1 Renvoie la probabilité qu'une variable aléatoire uniforme sur [a,b] soit inférieure à x0 (ou entre x0 et y0).
2 Returns the probability that a uniform random variable on [a,b] is lower than x0 (or between x0 and y0).
3 Devuelve la probabilidad que una variable aleatoria según ley uniform sea menor que x0.
4 Επιστρέφει την πιθανότητα μια τυχαίας μεταβλητής uniform να είναι μικρότερη του x0.
8 累积 uniform 分布函数。  返回 uniform 概率密度函数在 x0 点的下限尾部概率。
0 Real(a),Real(b),Real(x0),[Real(y0)]
-1 uniformd
-2 uniform_icdf
uniform_cdf(3.2,5.7,4.4)
uniform_cdf(3.2,5.7,4.4,5.4)

# uniform_icdf uniformd_icdf
1 Renvoie la valeur h telle que, la probabilité qu'une variable aléatoire uniforme sur [a,b] soit inférieure à h soit p (0<=p<=1).
2 Returns h such that the probability that a uniform random variable on [a,b] is lower than h is p (0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria según ley uniform sea menor que h es p (0<=p<=1).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια τυχαία μεταβλητή uniform να είναι μικρότερη του h είναι p (0<=p<=1).
8 累积 uniform 分布函数的反函数。
0 Real(a),Real(b),Real(p)
-1 uniform_cdf
-2 uniformd
uniform_icdf(4.2,10.3,0.95)
uniform_icdf(3.2,5.7,0.48)

# exponential exponentiald
1 Renvoie la densité de probabilité en x de la loi exponentielle de paramètre lambda.
2 Returns the density of probability at x of the exponential law of parameter lambda.
3 Devuelve la densidad de probabilidad de la ley de exponential.
4 Επιστρέφει την πυκνότητα της πιθανότητας της κατανομής exponential.
8 exponential（或 exponential）概率密度函数。
0 Real(lambda),Real(x)
-1 exponential_cdf
-2 exponential_icdf
-3 randvector
-4 ranm
exponential(2.1,3.5)
exponential(2.1,0.5)
 randvector(3,exponential,1.2)
 ranm(4,3,exponential,1.2)

# exponential_cdf exponentiald_cdf
1 Renvoie la probabilité qu'une variable aléatoire exponentielle de paramètre lambda soit inférieure à x0 (ou entre x0 et y0). 
2 Returns the probability that a exponential random variable of parameter lambda is lower than x0 (or between x0 and y0).
3 Devuelve la probabilidad que una variable aleatoria según ley exponential sea menor que x0.
4 Επιστρέφει την πιθανότητα μια τυχαίας μεταβλητής exponential να είναι μικρότερη του x0.
8 累积 exponential 分布函数。  返回 exponential 概率密度函数在 x0 点的下限尾部概率。
0 Real(lambda),Real(x0),[Real(y0)]
-1 exponentiald
-2 exponential_icdf
exponential_cdf(4.2,2.1)
exponential_cdf(4.2,2.1,3.2)

# exponential_icdf exponentiald_icdf
1 Renvoie la valeur h telle que, la probabilité qu'une variable aléatoire exponentielle de paramètre lambda soit inférieure à h soit p (0<=p<=1).
2 Returns h such that the probability that a exponential random variable of parameter lambda is lower than h is p (0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria según ley exponential sea menor que h es p (0<=p<=1).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια τυχαία μεταβλητή exponential να είναι μικρότερη του h είναι p (0<=p<=1).
8 累积 exponential 分布函数的反函数。
0 Real(lambda),Real(x0),Real(p)
-1 exponential_cdf
-2 exponentiald
exponential_icdf(4.2,0.95)
exponential_icdf(4.2,0.6)

# geometric
1 Renvoie la valeur en k de la loi géométrique de paramètre p (0<p<1).
2 Returns the value at k of the geometric law of parameter p (0<p<1).
3 Devuelve la densidad de probabilidad de la ley de geometric (0<p<1).
4 Επιστρέφει την πυκνότητα της πιθανότητας της κατανομής geometric (0<p<1).
8 geometric（或 geometric）概率密度函数 (0<p<1)。
0 Real(p),Intg(k)
-1 geometric_cdf
-2 geometric_icdf
-3 randvector
-4 ranm
geometric(0.3,4)
geometric(0.5,5)
 randvector(3,geometric,0.3)
 ranm(4,3,geometric,0.3)

# geometric_cdf
1 Renvoie la probabilité qu'une variable aléatoire géométrique de paramètre p (0<p<1) soit inférieure à k (ou entre k et m). 
2 Returns the probability that a geometric random variable of parameter p (0<p<1) is lower than k (or between k and m).
3 Devuelve la probabilidad que una variable aleatoria según ley geometric sea menor que k.
4 Επιστρέφει την πιθανότητα μια τυχαίας μεταβλητής geometric να είναι μικρότερη του k.
8 累积 geometric 分布函数。  返回 geometric 概率密度函数在 k 点的下限尾部概率。
0 Real(p),Intg(k),[Intg(m)]
-1 geometric
-2 geometric_icdf
geometric_cdf(0.3,4)
geometric_cdf(0.3,4,5)

# geometric_icdf
1 Renvoie la valeur h telle que, la probabilité qu'une variable aléatoire géométrique de paramètre p (0<p<1) soit inférieure à h soit x (0<=x<=1).
2 Returns h such that the probability that a geometric random variable of parameter p (0<p<1) is lower than h is x (0<=x<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria según ley geometric sea menor que h es x (0<=x<=1).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια τυχαία μεταβλητή geometric να είναι μικρότερη του h είναι x (0<=x<=1).
8 累积 geometric 分布函数的反函数。
0 Real(p),Real(x)
-1 geometric_cdf
-2 geometric
geometric_icdf(0.3,0.95)

# weibull weibulld
1 Renvoie la densité de probabilité en x de la loi de Weibull de paramètres k, lambda, theta (par défaut theta=0).
2 Returns the density of probability at x of the Weibull law of parameters k, lambda, theta (by default theta=0).
3 Devuelve la densidad de probabilidad de la ley de Weibull.
4 Επιστρέφει την πυκνότητα της πιθανότητας της κατανομής Weibull.
8 Weibull（或 Weibull）概率密度函数。
0 Real(k),Real(lambda),Real(theta),Real(x)
-1 weibull_cdf
-2 weibull_icdf
weibull(2.1,1.2,1.3)
weibull(2.1,1.2,0.0,1.3)
weibull(2.1,1.2,0.5,1.8)

# weibull_cdf weibulld_cdf
1 Renvoie la probabilité qu'une variable aléatoire de Weibull de paramètres k, lambda, theta soit inférieure à x0. 
2 Returns the probability that a Weibull random variable of parameters k, lambda, theta is lower than x0.
3 Devuelve la probabilidad que una variable aleatoria según ley Weibull sea menor que x0.
4 Επιστρέφει την πιθανότητα μια τυχαίας μεταβλητής Weibull να είναι μικρότερη του x0.
8 累积 Weibull 分布函数。  返回 Weibull 概率密度函数在。
0 Real(k),Real(lambda),Real(theta),Real(x0)
-1 weibulld
-2 weibull_icdf
weibull_cdf(2.1,1.2,1.9)
weibull_cdf(2.1,1.2,0.0,1.9)
weibull_cdf(2.2,1.5,0.4,1.9)
weibull_cdf(2.2,1.5,0.4,1.2)
weibull_cdf(2.2,1.5,0.4,1.2,1.9)

# weibull_icdf weibulld_icdf
1 Renvoie la valeur h telle que, la probabilité qu'une variable aléatoire de Weibull de paramètres k, lambda, theta soit inférieure à h soit p (0<=p<=1).
2 Returns h such that the probability that a Weibull random variable of parameters k, lambda, theta is lower than h is p (0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria según ley Weibull sea menor que h es p (0<=p<=1).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια τυχαία μεταβλητή Weibull να είναι μικρότερη του h είναι p (0<=p<=1).
8 累积 Weibull 分布函数的反函数。
0 Real(k),Real(lambda),Real(theta),Real(p)
-1 weibull_cdf
-2 weibull
weibull_icdf(4.2,1.3,0.0,0.95)
weibull_icdf(2.2,1.5,0.4,0.632)

# cauchy cauchyd
1 Renvoie la densité de probabilité en x de la loi de Cauchy de paramètres x0 (position) et a>0 (par défaut x0=0 et a=1).
2 Returns the density of probability at x of the Cauchy law of parameters x0 and a (by default  x0=0 and a=1).
3 Devuelve la densidad de probabilidad de la ley de Cauchy.
4 Επιστρέφει την πυκνότητα της πιθανότητας της κατανομής Cauchy.
8 Cauchy（或 Cauchy）概率密度函数。
0 Real(x0),Real(a),Real(x)
-1 cauchy_cdf
-2 cauchy_icdf
cauchy(0.0,2.0,1.0)

# cauchy_cdf cauchyd_cdf
1 Renvoie la probabilité qu'une variable aléatoire de Cauchy soit inférieure à x.
2 Returns the probability that a Cauchy random variable is lower than x.
3 Devuelve la probabilidad que una variable aleatoria según ley Cauchy sea menor que x.
4 Επιστρέφει την πιθανότητα μια τυχαίας μεταβλητής Cauchy να είναι μικρότερη του x.
8 累积 Cauchy 分布函数。  返回 Cauchy 概率密度函数在 x 点的下限尾部概率。
0 Real(x0),Real(a),Real(x),[Real(y)]
-1 cauchyd
-2 cauchy_icdf
cauchy_cdf(0.0,2.0,2.1)
cauchy_cdf(2,3,-1.9,1.4)

# cauchy_icdf cauchyd_icdf
1 Renvoie la valeur h telle que, la probabilité qu'une variable aléatoire de Cauchy soit inférieure à h soit p (0<=p<=1).
2 Returns h such that the probability that a Cauchy random variable is lower than h is p (0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria según ley Cauchy sea menor que h es p (y 0<=p<=1).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια τυχαία μεταβλητή Cauchy να είναι μικρότερη του h είναι p (0<=p<=1).
8 累积 Cauchy 分布函数的反函数。
0 Real(x0),Real(a),Real(p)
-1 cauchy_cdf
-2 cauchy
cauchy_icdf(0.0,2.0,0.95)

# cdf
1 Distribution cumulée pour une loi de probabilité.
2 Cumulated distribution function.
0 Func,FuncParams
-1 icdf
-2 binomial_cdf
-3 normald_cdf
-4 plotcdf
cdf(binomial,10,0.5,4)
cdf(normald,0.0,1.0,2.0)
cdf([1,3,4,3,5,6],4)
cdf([1,3,4,3,5,6],plot)

# icdf
1 Distribution cumulée inverse pour une loi de probabilité.
2 Inverse cumulated distribution function.
0 Func,FuncParams
-1 cdf
-2 binomial_icdf
-3 normald_icdf
icdf(binomial,10,0.5,0.6)
icdf(normald,0.0,1.0,0.975)

# markov
1 Calcul des éléments propres d'une matrice de transition d'une chaîne de Markov M, renvoie la liste des suites d'états récurrents positifs, la liste des probabilités stationnaires correspondants, la liste des autres composantes fortement connexes, la liste des probabilités de finir sur les états récurrents positifs.
2 Computation of the proper elements of a Markov chain transition matrix M, returns the list of sequence of positive recurrent states, the list of corresponding invariant probabilities, the list of other strong connected components, the list of probability to end up in the sequence of recurrent states.
0 Mtrx(M),[Real(eps)]
-1 randmarkov
-2 plotproba
markov([[0,0,1/2,0,1/2],[0,0,1,0,0],[1/4,1/4,0,1/4,1/4],[0,0,1/2,0,1/2],[0,0,0,0,1]])

# randmarkov
1 Génère une suite de n états (chaîne de Markov) partant de i0 dont les probabilités de transitions sont données par M (matrice stochastique) ou génère une matrice stochastique ayant p boucles récurrentes v=[n1,...,np] et i0 états transients.
2 Returns a random sequence of n states (Markov chain) starting from i0, with probability transition matrix M, or returns a stochastic matrix with p recurrent loops v=[n1,..,np] and i0 transient states.
0 Mtrx(M) || Vctr(v),Intg(i0),[Intg(n)]
-1 markov
-2 plotproba
randmarkov([[0,0,1/2,0,1/2],[0,0,1,0,0],[1/4,1/4,0,1/4,1/4],[0,0,1/2,0,1/2],[0,0,0,0,1]],2,20)
randmarkov([1,2,1,3],4)

# conjugate_gradient
1 Algorithme du gradient conjugué pour résoudre A*x=y à eps près où A est une matrice symétrique définie positive, x0 solution initiale approchée optionnelle.
2 Conjuagte gradient algorithm to solve A*x=y approximately (precision eps) where A is a symmetric positive definite matrix, x0 an optional initial guess.
0 Mtrx(A),Vect(y),[Vect(x0),Real(eps)]
-1 linsolve
conjugate_gradient([[2,1],[1,5]],[1,0])
conjugate_gradient([[4,1+i],[1-i,5]],[1,0])
conjugate_gradient([[2,1],[1,5]],[1,0],[0.55,-0.11],1e-2)
conjugate_gradient([[2,1],[1,5]],[1,0],[0.55,-0.11],1e-10)

# mgf
1 Renvoie la fonction génératrice des moments d'une loi de probabilité parmi les lois normales, binomiales, Poisson, beta, gamma
2 Returns the moment generating function of a probability distribution from normal, binomial, Poisson, beta, gamma distribution
0 Func,[Real(Param_1),Real(Param_2)]
mgf(normald,1,0)
mgf(poisson,5)
mgf(binomial,n,p)

# kolmogorovd
1 Distribution de Kolmogorov-Smirnov, 1-2*sum((-1)^(k-1)*exp(-k^2*x^2),k,1,inf)
2 Kolmogorov-Smirnov distribution, 1-2*sum((-1)^(k-1)*exp(-k^2*x^2),k,1,inf)
0 Real(x)
kolmogorovd(1.36)

# kolmogorovt
1 Test de Kolmogorov-Smirnov d'adéquation à une loi de distribution continue, entre 2 échantillons l1 l2 (loi inconnue) ou entre 1 échantillon l1 et une loi s.
2 Kolmogorov-Smirnov adequation test to a continuous distribution law, between 2 samples l1 l2 (unknown law) or between a sample l1 and a distribution law s.
0 Lst(l1),Lst(l2) || DistribLaw(s)
-1 chisquaret
-2 normalt
-3 studentt
kolmogorovt(randvector(100,normald,0,1),randvector(100,normald,0,1))
kolmogorovt(randvector(100,normald,0,1),randvector(100,normald,3,1))
kolmogorovt(randvector(100,normald,0,1),normald(0,1))
kolmogorovt(randvector(100,normald,0,1),student(2))


# gammad
1 Renvoie la densité de probabilité de la loi Gamma (=x^(a-1)*exp(-b*x)*b^a/Gamma(a)).
2 Returns the density of probability of the Gamma law (=x^(a-1)*exp(-b*x)*b^a/Gamma(a)).
3 Devuelve la densidad de probabilidad de la ley Gamma (=x^(a-1)*exp(-b*x)*b^a/Gamma(a)).
4 Επιστρέφει την πυκνότητα πιθανότητας της Gamma κατανομής (=x^(a-1)*exp(-b*x)*b^a/Gamma(a)).
8 =x^(a-1)*exp(-b*x)*b^a/Gamma(a) 
0 Real(a>0),Real(b>0),Real(x>=0)
-1 gammad_cdf;
-2 gammad_icdf
gammad(2.2,1.5,0.8)

# gammad_cdf
1 Renvoie la probabilité qu'une variable aléatoire de loi Gamma ayant a et b comme paramètres soit inférieure à x0 ou comprise entre x0 et y0.
2 Returns the probability that a Gamma random variable (with a and b as parameters) is lower than x0 or between x0 and y0.
3 Devuelve la probabilidad que una variable aleatoria según la ley Gamma sea menor que x0 o entre x0 y y0.
4 Επιστρέφει την πιθανότητα μιας τυχαίας μεταβλητής Gamma κατανομής να είναι μικρότερη από x0.
0 Real(a>0),Real(b>0),Real(x0>=0),[Real(y0>=0)]
-1 gammad
-2 gammad_icdf
gammad_cdf(2,1,2.96)
gammad_cdf(2,1,1.4,2.96)

# gammad_icdf
1 Renvoie la valeur h telle que la probabilité qu'une variable aléatoire de loi Gamma ayant a et b comme paramètres soit inférieure à h, soit égale à p (0<=p<=1).
2 Returns h such that the probability that a Gamma random variable is lower than h is p (0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria Gamma sea menor que h es p (0<=p<=1).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια Gamma τυχαία μεταβλητή να είναι μικρότερη του h είναι p (0<=p<=1).
0 Real(a>0),Real(b>0),Real(0<=p<=1)
-1 gammad_cdf
-2 gammad
gammad_icdf(2,1,0.95)
gammad_icdf(2,1,0.5)

# betad
1 Renvoie la densité de probabilité de la loi Beta (=Gamma(a+b)*x^(a-1)*(1-x)^(b-1)/(Gamma(a)*Gamma(b))).
2 Returns the density of probability of the Beta law (=Gamma(a+b)*x^(a-1)*(1-x)^(b-1)/(Gamma(a)*Gamma(b))).
3 Devuelve la densidad de probabilidad de la ley Beta (=Gamma(a+b)*x^(a-1)*(1-x)^(b-1)/(Gamma(a)*Gamma(b))).
4 Επιστρέφει την πυκνότητα πιθανότητας της Beta κατανομής (=Gamma(a+b)*x^(a-1)*(1-x)^(b-1)/(Gamma(a)*Gamma(b))).
8 =Gamma(a+b)*x^(a-1)*(1-x)^(b-1)/(Gamma(a)*Gamma(b))
0 Real(a>0),Real(b>0),Real(0<=x<=1)
-1 betad_cdf
-2 betad_icdf
betad(2.2,1.5,0.8)

# betad_cdf
1 Renvoie la probabilité qu'une variable aléatoire de type Beta ayant a et b comme paramètres soit inférieure à x0 ou comprise entre x0 et y0.
2 Returns the probability that a Beta random variable (with a and b as parameters) is lower than x0 or between x0 and y0.
3 Devuelve la probabilidad que una variable aleatoria según la ley Beta sea menor que x0 o entre x0 y y0.
4 Επιστρέφει την πιθανότητα μιας τυχαίας μεταβλητής Beta κατανομής να είναι μικρότερη από x0.
0 Real(a>0),Real(b>0),Real(0<=x0<=1),[Real(0<=y0<=1)]
-1 betad
-2 betad_icdf
betad_cdf(2,1,0.2)
betad_cdf(2,1,0.1,0.3)

# betad_icdf
1 Renvoie la valeur h telle que la probabilité qu'une variable aléatoire de type Beta ayant a et b comme paramètres soit inférieure à h soit égale à p( 0<=p<=1).
2 Returns h such that the probability that a Beta random variable is lower than h is p (0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria Beta sea menor que h es p (0<=p<=1).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια Beta τυχαία μεταβλητή να είναι μικρότερη του h είναι p (0<=p<=1).
0 Real(a>0),Real(b>0),Real(0<=p<=1)
-1 betad_cdf
-2 betad
betad_icdf(2,1,0.95)
betad_icdf(2,1,0.5)

# taux_accroissement
1 Renvoie le taux d'accroissement d'une expression lorsque la variable va de Val1 à Val2 (par défaut Var=x).
2 Returns the rate of increment of an expression when the variable go from Val1 to Val2 (by default Var=x).
3 
4 
0 Expr,Var,Val1,(Val1+Var or Val2)
-1 diff
-2 limit
taux_accroissement(x^2,1,1+h)
taux_accroissement(x^2,1,2)
taux_accroissement(a^2,a,1,1+h)

# shift_phase
1 shift_phase d'une expression renvoie l'expression dans laquelle les expressions trigonométriques, une fois évaluées, ont une phase augmentée de pi/2.
2 shift_phase returns the expressions where the phase of the evaluated trigonometric expressions is increased by pi/2.
3 shift_phase devuelve la expresión en donde las expresiones trigonométricas, una vez evaluadas, tienen fase aumentada de pi/2.
4 shift_phase επιστρέφει την παράσταση όπου η φάση των αποτιμημένων τριγωνομετρικών παραστάσεων έχει αυξηθεί κατά pi/2.
0 Expr
-1 series
shift_phase(sin(x))
shift_phase('sin(x+pi/2)')
shift_phase(x+sin(x))
shift_phase(x+sin(x))
shift_phase(cos(t))
shift_phase(tan(u))

# revert
1 Renvoie le développement réciproque d'un développement en séries en 0.
2 Returns the revert expansion of a series expansion at 0.
3 Devuelve el desarrollo recíproco de un desarrollo en serie en 0.
4 Επιστρέφει το αντίστροφο ανάπτυγμα ενός αναπτύγματος σε σειρές γύρω από το 0.
0 Expr
-1 series
revert(x+x^2+x^4)

# Heaviside
1 Fonction qui vaut 0 si x<0 et 1 si x>=0.
2 Function equal to 0 if x<0 and 1 if x>=0.
3 Función igual a 0 si x<0 y 1 si x>=0.
4 Συνάρτηση που είναι 0 εάν x<0 και 1 εάν x>=0.
0 Real
-1 Dirac
-2 laplace
Heaviside(1)
Heaviside(-1)
Heaviside(0)

# Dirac
1 Distribution de Dirac (dérivée de Heaviside).
2 Function derivative of Heaviside.
3 Función derivada de Heaviside.
4 Συνάρτηση παράγωγος της συνάρτησης Heaviside.
0 Real
-1 Heaviside
Dirac(1)
Dirac(-1)
 int(Dirac(x)*(x-1)^2,x,-1,2)

# polar_coordinates
1 Renvoie la liste du module et de l'argument de l'affixe d'un point (en 2D) ou d'un nombre complexe ou de la liste des coordonnées rectangulaires.
2 Returns the list of the norm and of the argument of the affix of a point (for 2D) or of a complex number or of the the list of rectangular coordinates.
3 Devuelve la lista de la norma y de el argumento del afijo de un punto (2D) o de un número complejo o de la lista de coordenadas rectangulares.
4 Επιστρέφει την λίστα του μέτρου και του ορίσματος της προσθήκης ενός σημείου (2-Δ) ή ενός μιγαδικού αριθμού ή μιας λίστας καρτεσιανών συντεταγμένων.
0 Pnt or Cplx or LstRectCoord
-1 abscissapoint
-2 ordinate
-3 rectangular_coordinates
-4 polar_point
polar_coordinates(point(1+2*i))
polar_coordinates(-1-i)
polar_coordinates([-1,2])
polar_coordinates(point(1+2*i)-point(-1+i))

# rectangular_coordinates
1 Renvoie la liste de l'abscisse et de l'ordonnée d'un point donné par la liste de ses coordonnées polaires.
2 Returns the list of the abscissa and of the ordinate of a point given by the list of its polar coordinates.
3 Devuelve la lista de la abscisa y de la ordenada de un punto dado por la lista de sus coordenadas polares.
4 Επιστρέφει την λίστα της τετμημένης και της συντεταγμένης ενός σημείου που δίνεται από την λίστα των πολικών συντεταγμένων.
0 LstPolCoord
-1 abscissa
-2 ordinate
-3 rectangular_coordinates
-4 polar_point
rectangular_coordinates([1,pi/4])
rectangular_coordinates(polar_point(1,pi/4))

# polar_point
1 Renvoie le point (en 2D) de coordonnées polaires les arguments r et t i.e. d'affixe r*exp(i*t).
2 Returns the point (for 2D) with the arguments r and t as polar coordinates (i.e. with  r*exp(i*t) as affix).
3 Devuelve un punto (2D) de afijo r*exp(i*t).
4 Επιστρέφει το σημείο (2-Δ) με πολικές συντεταγμένες r και t (προσθήκης r*exp(i*t)).
0 Real(r),Real(t)
-1 abscissa
-2 ordinate
-3 polar_coordinates
-4 rectangular_coordinates
-5 point
polar_point(1,pi/4)
polar_point(2,-pi/3)

# vector
1 Définit et trace un vecteur (origine 0 si 1 arg) par deux points ou par un couple de coordonnées ou par un couple d'affixe (en 2D) ou par un point et un vecteur ou par un point (son extrémité et son origine étant [0,0,0]). Il faut utiliser des listes pour les composantes d'un vecteur de R^n.
2 Defines a vector (origin is 0 if 1 arg) with two points or two components or two affix (for 2D) or with a point and a vector or with a point (its extremity and its origin is [0,0,0]). You have to use lists for de components of an R^n vector.
3 Define un vector por dos puntos o por un par de coordenadas o por un par de afijos (en 2D) o con un punto y un vector o con un punto A (con origen [0,0,0]).
4 Ορισμός διανύσματος με δύο σημεία ή με ένα ζευγάρι συντεταγμένων ή δύο προσθήκες (για 2D) ή με ένα σημείο και ένα διάνυσμα ή με ένα σημείο (το άκρο του και την αρχική του θέση να είναι [0,0,0]).
8 向量。
0 Pnt,Pnt || Pnt,Vect
-1 coordinates
-2 segment
vecteur(1+i)
vector(point(1,2),point(2,3))
vector(1+2*i,vecteur(1+i))
vector([1,2],[2,3])
vector([1,2,0],[2,3,4])

# residue
1 Retourne le résidu en a de l'expression dépendant de la variable v.
2 Returns the residue in a of the expression with v as variable.
3 Devuelve el residuo en a de la expresión dependiente de la variable v.
4 Επιστρέφει το ολοκληρωτικό υπόλοιπο ως προς a μιας παράστασης με μεταβλητή v.
0 Expr,Var(v),Cplx(a)
-1 series
residue(1/z,z,0)
residue(5/z,z=0)
residue(cos(z)/(z*(z-b)),z,0)
residue(c/(z*(z-b)),z=b)

# even
1 Retourne 1 si l'entier est pair, sinon retourne 0.
2 Returns 1 if the integer is even, else returns 0.
3 Devuelve 1 si el entero es par, devuelve 0 si no.
4 Επιστρέφει 1 αν ο ακέραιος είναι ζυγός, αλλιώς επιστρέφει 0.
0 Intg(n)
-1 odd
even(6)
even(1251)

# odd
1 Retourne 1 si l'entier est impair, sinon retourne 0.
2 Returns 1 if the integer is odd, else returns 0.
3 Devuelve 1 si el entero es impar, devuelve 0 si no.
4 Επιστρέφει 1 αν ο ακέραιος είναι μονός, αλλιώς επιστρέφει 0.
0 Intg(n)
-1 even
odd(6)
odd(1251)

# tdeg
1 Option de la commande gbasis ou greduce pour spécifier un ordre sur les monômes (degré total puis ordre lexicographique).
2 Option of the gbasis or greduce command to specify an order for monomials (complete degree then lexicographic order).
3 Opción del comando gbasis o greduce para especificar un orden sobre los monomios (grado total, luego orden lexicográfico).
4 Επιλογή της εντολής gbasis ή greduce για καθορισμό μιας διάταξης για μονώνυμα (συνολικού βαθμού και μετά λεξικογραφικής διάταξης).
0 Opt
-1 gbasis
-2 greduce

# plex
1 Option de la commande gbasis ou greduce pour spécifier un ordre sur les monômes (=ordre par défaut=lexicographique pur).
2 Option of the gbasis or greduce command to specify an order for monomials (=default order=pure lexicographic).
3 Opción del comando gbasis o greduce para especificar un orden sobre los monomios (=orden por defecto=lexicográfico puro).
4 Επιλογή της εντολής gbasis ή greduce για καθορισμό μιας διάταξης για μονώνυμα (προεπιλεγμένη διάταξη = λεξικογραφική διάταξη).
0 Opt
-1 gbasis
-2 greduce

# revlex
1 Option de la commande gbasis ou greduce pour spécifier un ordre sur les monômes (degré total puis ordre lexicographique inverse).
2 Option of the gbasis or greduce command to specify an order for monomials (complete degree then inverse lexicographic order).
3 Opción de gbasis o greduce para especificar un orden sobre los monomios (grado total, luego orden antilexicográfico).
4 Επιλογή της εντολής gbasis ή greduce για καθορισμό μιας διάταξης για μονώνυμα (συνολικού βαθμού και μετά αντίστροφης λεξικογραφικής διάταξης).
0 Opt
-1 gbasis
-2 greduce

# unfactored sans_factoriser
1 Option de la commande plotimplicit.
2 Option of the plotimplicit command.
3 Opción del comando plotimplicit.
4 Επιλογή της εντολής plotimplicit.
0 Opt.
-1 plotimplicit
 plotimplicit(x^2+y^2-1,x,y,unfactored)
 plotimplicit(x^2+y^2-1,[x,y],unfactored)
 plotimplicit(x^2+y^2+z^2-1,x,y,z,xstep=0.2,ystep=0.2,zstep=0.2,unfactored)
 plotimplicit(x^2+y^2+z^2-1,[x,y,z],xstep=0.2,ystep=0.2,zstep=0.2,unfactored)
 plotimplicit(x^2+y^2+z^2-1,x=0..1,y=0..1,z=0..1,xstep=0.2,ystep=0.2,zstep=0.2,unfactored)

# DOM_FLOAT float double
1 DOM_FLOAT ou float est un entier qui représente le type d'une variable flottante, valeur de la commande type. C'est aussi une option de assume.
2 DOM_FLOAT or float is an integer representing the type of a floating point variable, returned by the type command. It is also an option of the assume command.
3 DOM_FLOAT o float es un entero que representa el tipo de una variable flotante, valor del comando type o es una opción del comando assume.
4 DOM_FLOAT ή float είναι ένας ακέραιος αριθμός που εκφράζει τον τύπο μιας μεταβλητής κινητής υποδιαστολής, είναι η τιμή της εντολής type ή Επιλογή της εντολής assume.
0 Opt
-1 type
-2 assume
-3 DOM_INT
-4 DOM_SYMBOLIC
 type(2.3)
 DOM_FLOAT+0
 assume(a,DOM_FLOAT)
 assume(a,real)
 type(1.2)

# DOM_INT integer DOM_int
1 DOM_INT ou integer ou DOM_int est un entier qui représente le type d'une variable entière, valeur de la commande type. DOM_INT est utilisé si l'entier est < 2^31. C'est aussi une option de assume.
2 DOM_INT or integer or DOM_int is an integer which is the type of an integer variable, it is the value of the type command. DOM_INT is used for integers < 2^31. It is also an option of the assume command.
3 DOM_INT o integer o DOM_int es un entero que representa el tipo de una variable entera, valor del comando type. DOM_INT está utilizado si el entero es < 2^31 o es una opción del comando assume.
4 DOM_INT ή integer ή DOM_int είναι ένας ακέραιος αριθμός που εκφράζει τον τύπο μιας ακέραιας μεταβλητής, είναι η τιμή της εντολής type. DOM_INT χρησιμοποιείται για ακέραιους < 2^31 ή Επιλογή της εντολής assume.
0 Opt
-1 type
-2 assume
-3 DOM_FLOAT
-4 DOM_SYMBOLIC
 type(2^31)
 DOM_INT+0
 assume(a,DOM_INT)
 assume(a,integer)
 a:=2;type(a)

# DOM_SYMBOLIC symbol expression
1 DOM_SYMBOLIC ou symbol représente le type d'une variable symbolique, valeur de la commande type. C'est aussi une option de assume.
2 DOM_SYMBOLIC or symbol is the type of a symbolic variable, as returned by the type command. It is also an option of the assume command.
3 DOM_SYMBOLIC o symbol representa el tipo de una variable simbólica, valor del comando type o es una opción del comando assume.
4 DOM_SYMBOLIC ή symbol είναι ένας ακέραιος αριθμός που εκφράζει τον τύπο μιας συμβολικής μεταβλητής, είναι η τιμή της εντολής type ή Επιλογή της εντολής assume.
0 Opt
-1 type
-2 assume
-3 DOM_INT
-4 DOM_FLOAT
 assume(a,symbol)
 assume(a,DOM_SYMBOLIC)
 a:=sqrt(2);type(a)
 type(2x+1)

# DOM_IDENT identifier
1 DOM_IDENT ou identifier représente le type d'un identificateur, valeur de la commande type. C'est aussi une option de assume.
2 DOM_IDENT or identifier is the type of an identifier, as returned by the type command. It is also an option of the assume command.
3 DOM_IDENT o identifier representa el tipo de un identificador, valor del comando type o es una opción del comando assume.
4 DOM_IDENT ή identifier είναι ένας ακέραιος αριθμός που εκφράζει τον τύπο μιας ????? μεταβλητής, είναι η τιμή της εντολής type ή Επιλογή της εντολής assume.
0 Opt
-1 type
-2 assume
-3 DOM_INT
-4 DOM_FLOAT
 purge(a);type(a)

# DOM_LIST vector
1 DOM_LIST ou vector représente le type d'une liste ou d'une séquence, valeur de la commande type. C'est aussi une option de assume.
2 DOM_LIST or vector is the type of a list or of a sequence, as returned by the type command. It is also an option of the assume command.
3 DOM_LIST o vector representa el tipo de una lista o de una secuencia, valor del comando type o es una opción del comando assume.
4 DOM_LIST ή vector είναι ένας ακέραιος αριθμός που εκφράζει τον τύπο μιας ?????? μεταβλητής, είναι η τιμή της εντολής type ή Επιλογή της εντολής assume.
0 Opt
-1 type
-2 assume
-3 DOM_INT
-4 DOM_FLOAT
 assume(a,DOM_LIST)
 a:=[1,2,3];type(a)
 a:=1,2,3;type(a)

# DOM_STRING string
1 DOM_STRING ou string représente le type d'une chaîne de caractères, valeur de la commande type. C'est aussi une option de assume.
2 DOM_STRING or string is the type of a string, as returned by the type command. It is also an option of the assume command.
3 DOM_STRING o string representa el tipo de una cadena de caracteres, valor del comando type o es una opción del comando assume.
4 DOM_STRING ή string είναι ένας ακέραιος αριθμός που εκφράζει τον τύπο μιας ?????? μεταβλητής, είναι η τιμή της εντολής type ή Επιλογή της εντολής assume.
0 Opt
-1 type
-2 assume
-3 DOM_INT
-4 DOM_FLOAT
 a:="123";type(a)
 assume(a,DOM_STRING)

# DOM_COMPLEX complex
1 DOM_COMPLEX ou complex représente le type d'un complexe ou d'une variable complexe, valeur de la commande type. C'est aussi une option de assume.
2 DOM_COMPLEX or complex is the type of a complex or of a complex variable, as returned by the type command. It is also an option of the assume command.
3 DOM_COMPLEX o complex representa el tipo de un complejo ou de una variable compleja, valor del comando type o es una opción del comando assume.
4 DOM_COMPLEX ή complex είναι ένας ακέραιος αριθμός που εκφράζει τον τύπο μιας ????? μεταβλητής, είναι η τιμή της εντολής type ή Επιλογή της εντολής assume.
0 Opt
-1 type
-2 assume
-3 DOM_INT
-4 DOM_FLOAT
 assume(a,complex)
 assume(a,DOM_COMPLEX)
 a:=1+i;type(a)

# DOM_FUNC func
1 DOM_FUNC ou func représente le type d'une fonction, valeur de la commande type. C'est aussi une option de assume.
2 DOM_FUNC or func is the type of a function, as returned by the type command. It is also an option of the assume command.
3 DOM_FUNC o func representa el tipo de una función, valor del comando type o es una opción del comando assume.
4 DOM_FUNC ή func είναι ένας ακέραιος αριθμός που εκφράζει τον τύπο μιας???????? μεταβλητής, είναι η τιμή της εντολής type ή Επιλογή της εντολής assume.
0 Opt
-1 type
-2 assume
-3 DOM_INT
-4 DOM_FLOAT
 assume(a,DOM_FUNC)
 a(x):=1+x;type(a)
 type(sin)
 type(factor)

# DOM_RAT rational
1 DOM_RAT ou rational représente le type d'un rationnel, valeur de la commande type. C'est aussi une option de assume.
2 DOM_RAT or rational is the type of a rational, as returned by the type command. It is also an option of the assume command.
3 DOM_RAT o rational reprasenta el tipo de un racional, valor del comando type o es una opción del comando assume.
4 DOM_RAT ή rational είναι ένας ακέραιος αριθμός που εκφράζει τον τύπο μιας ?????? μεταβλητής, είναι η τιμή της εντολής type.
0 Opt
-1 type
-2 assume
-3 DOM_INT
-4 DOM_FLOAT
 assume(a,rational)
 assume(a,DOM_RAT)
 a:=1/2;type(a)

# set[] %{%}
1 set[] ou %{%} est utilisé pour définir un ensemble.
2 set[] or %{%} is used to define a set.
3 set[] o %{%} definido uno conjunto.
4 set[] ή %{%} χρησιμοποιείται για τον ορισμό ενός συνόλου.
0 Seq
-1 in
-2 op
 set[1,2,3]
 %{1,2,3%}
 L:=[1,2,2,3];S:=set[op(L)]
 set[1,2]*set[2,3]

# i[] [..]
1 i[] est utilisé pour définir un intervalle réel(i[a,b]=[a..b]).
2 i[] is used to define a real interval(i[a,b]=[a..b]).
3 i[] definido uno intervalo real(i[a,b]=[a..b]).
4 i[] χρησιμοποιείται για τον ορισμό ενός πραγματικό διαστήματος(i[a,b]=[a..b]).
0 Seq(a,b)
-1 op
i[1,3]
 i[1,3]+i[2,4]*i

# complexroot
1 Renvoie la liste d'intervalles complexes de taille <=l où se trouvent les racines de P (par ex i[1.1,1.2]+i[2,2.4]*i pour [1.1,1.2]x[2,2.4] avec en option a=1+2*i,b=2+3*i) avec leur multiplicité.
2 Returns the list of complex intervals of size<=l containing roots of P (for example i[1.1,1.2]+i[2,2.4]*i pour [1.1,1.2]x[2,2.4] with optionally a=1+2*i,b=2+3*i) with multiplicities.
3 Devuelve la lista de intervalos complejos (lado<=l) que contienen las raíces de P (por ejemplo i[1.1,1.2]+i*i[2,2.4] para [1.1,1.2]x[2,2.4] con en opción a=1+2*i,b=2+3*i) con su multiplicidad.
4 Επιστρέφει τη λίστα των κορυφών των τετραγώνων (με πλευρά <= l) που περιέχουν τις ρίζες του Ρ (μέσα στο τετράγωνο με αντίθετες κορυφές a και b) μαζί με την πολλαπλότητά τους.
0 Poly(P),Real(l),[Cplx(a)],[Cplx(b)]
-1 proot
-2 froot
-3 realroot
-4 rationalroot
-5 crationalroot
complexroot(x^4+1,1e-50,0.7+i*0.7,0.8+i*0.8)
complexroot(x^5-2*x^4+x^3+i,0.1)
complexroot(x^3+8,1e-5,0,2+2*i)
complexroot(x^5-2*x^4+x^3+i,0.1,1+0.5*i,1.1+0.7*i)

# posubLMQ
1 Renvoie une borne supérieure pour les racines positives de P par l'algorithme Akritas-Strzebonski-Vigklas' Local Max Quadratic (LMQ).
2 Returns an upper bound on the values of the positive roots of P. Akritas-Strzebonski-Vigklas' Local Max Quadratic (LMQ) method is used.
3 Devuelve una upper bound para las raíces reales positivas de P con el algoritmo Vincent-Akritas-Strzebonski' Local Max Quadratic (LMQ).
4 Επιστρέφει ένα πάνω φράγμα στις τιμές των θετικών ριζών του P. Χρησιμοποιείται η μέθοδος Local Max Quadratic (LMQ) των Akritas-Strzebonski-Vigklas.
0 Poly(P)
posubLMQ(x^3-7*x+7)
-1 poslbdLMQ
-2 VAS_positive
-3 realroot

# poslbdLMQ
1 Renvoie une borne inférieure pour les racines positives de P par l'algorithme Akritas-Strzebonski-Vigklas' Local Max Quadratic (LMQ).
2 Returns a lower bound on the values of the positive roots of P. Akritas-Strzebonski-Vigklas' Local Max Quadratic (LMQ) method is used.
3 Devuelve una lower bound  para las raíces reales positivas de P con el algoritmo Vincent-Akritas-Strzebonski' Local Max Quadratic (LMQ).
4 Επιστρέφει ένα κάτω φράγμα στις τιμές των θετικών ριζών του P. Χρησιμοποιείται η μέθοδος Local Max Quadratic (LMQ) των Akritas-Strzebonski-Vigklas.
0 Poly(P)
poslbdLMQ(x^3-7*x+7)
-1 posubLMQ
-2 VAS_positive
-3 realroot

# VAS_positive
1 Renvoie une liste d'intervalles d'isolation des racines réelles positives de P par l'algorithme de Vincent-Akritas-Strzebonski.
2 Returns a list of intervals containing the positive roots of P. Vincent-Akritas-Strzebonski's method (VAS) is used.
3 Devuelve la lista de intervalos donde están las raíces reales positivas de P, con el algoritmo Vincent-Akritas-Strzebonski.
4 Επιστρέφει μια λίστα διαστημάτων που περιέχουν τις θετικές ρίζες του P. Χρησιμοποιείται η μέθοδος VAS των Vincent-Akritas-Strzebonski.
0 Poly(P)
VAS_positive(x^3-7*x+7)
-1 poslbdLMQ
-2 posubLMQ
-3 VAS
-4 realroot

# VAS
1 Renvoie une liste d'intervalles d'isolation des racines réelles de P par l'algorithme de Vincent-Akritas-Strzebonski.
2 Returns a list of intervals containing the real roots of P. Vincent-Akritas-Strzebonski's method (VAS) is used.
3 Devuelve la lista de intervalos donde están las raíces reales de P, con el algoritmo Vincent-Akritas-Strzebonski.
4 Επιστρέφει μια λίστα διαστημάτων που περιέχουν τις πραγματικές ρίζες του P. Χρησιμοποιείται η μέθοδος VAS των Vincent-Akritas-Strzebonski.
0 Poly(P)
VAS(x^3-7*x+7)
-1 VAS_positive
-2 sturmab
-3 realroot

# realroot
1 Renvoie la liste des intervalles de longueur <=l où se trouvent les racines réelles de P situées dans a..b avec leur multiplicité. Utilise l'algorithme de Vincent-Akritas-Strzebonski (VAS) ou les suites de Sturm pour realroot(sturm,P).
2 Returns the list of intervals of length <=l containing the real roots of P inside a..b with their multiplicity. By default the Vincent-Akritas-Strzebonski (VAS) method is used. realroot(sturm,P) uses Sturm's method.
3 Devuelve la lista de intervalos de largo <=l donde están las raíces reales de P en a..b, con su multiplicidad. Con el algoritmo Vincent-Akritas-Strzebonski (VAS) o  en opción el método de Sturm (realroot(sturm,P)).
4 Επιστρέφει μια λίστα διαστημάτων μήκους <= l που περιέχουν τις πραγματικές ρίζες του P μέσα στο διάστημα a..b μαζί με την πολλαπλότητά τους. Προεπιλεγμένη μέθοδος είναι η VAS των Vincent-Akritas-Strzebonski. realroot(sturm,P) χρησιμοποιεί την μέθοδο Sturm.
0 [sturm],Poly(P),[Real(l)],[Cplx(a)],[Cplx(b)]
-1 proot
-2 froot
-3 complexroot
-4 rationalroot
-5 crationalroot
-6 sturmab
-7 VAS
realroot(x^3+7,0.1)
realroot(x^3-7*x+7)
realroot(sturm,x^3-7*x+7)
realroot(x^5-2*x^4+x^3+1)
realroot(x^5-2*x^4+x^3+1,0.1)
realroot(x^3+x+8,1e-5,-4,4)


# rationalroot
1 Renvoie la liste des racines rationnelles de P sans indiquer la multiplicité.
2 Returns the list of rational roots of P without indicating the multiplicity.
3 Devuelve la lista de raíces racionales de P sin indicar la multiplicidad.
4 Επιστρέφει μια λίστα με τις ρητές ρίζες του Ρ χωρίς την πολλαπλότητά τους.
0 Poly(P)
-1 proot
-2 froot
-3 complexroot
-4 realroot
-5 crationalroot
rationalroot(2*x^3-9*x^2+13*x-6)

# crationalroot
1 Renvoie la liste des racines complexes rationnelles de P sans indiquer la multiplicité.
2 Returns the list of complex rational roots of P without indicating the multiplicity.
3 Devuelve la lista de raíces racionales complejas de P sin indicar la multiplicidad.
4 Επιστρέφει μια λίστα με τις μιγαδικές ρητές ρίζες του Ρ χωρίς την πολλαπλότητά τους.
0 Poly(P)
-1 proot
-2 froot
-3 complexroot
-4 rationalroot
-5 realroot
crationalroot(2*x^3+(-5-7*i)*x^2+(-4+14*i)*x+8-4*i)

# trapezoid middle_point left_rectangle right_rectangle trapeze point_milieu rectangle_droit rectangle_gauche
1 Option de la commande plotarea et de la commande area.
2 Option of the plotarea command and of the area command.
3 Opción del comando plotarea y del comando area.
4 Επιλογή της εντολής plotarea και της εντολής area.
0 Opt
-1 plotarea
-2 area
 plotarea(x^2,x=0..1,5,trapezoid)
 plotarea(x^2,x=0..1,5,middle_point)
 plotarea(x^2,x=0..1,5,right_rectangle)
 plotarea(x^2,x=0..1,5,left_rectangle)
 area(x^2,x=0..1,5,middle_point)
 area(x^2,x=0..1,5,trapezoid)

# simpson rombergt rombergm gauss15
1 Option de la commande area
2 Option of the area command
3 Opción del comando area
4 Επιλογή της εντολής area
0 Opt
-1 area
 area(x^2,x=0..1,5,simpson)
 area(x^2,x=0..1,5,rombergt)
 area(x^2,x=0..1,5,rombergm)
area(x^2,x=0..1,5,gauss15)

# pow2exp
1 Convertit les puissances en exponentielles.
2 Converts powers to exponentials.
3 Transforma las potencias en exponenciales.
4 Μετατρέπει δυνάμεις σε εκθετικά.
0 Expr
-1 exp2pow
pow2exp(a^b)

# expexpand
1 Développe les exponentielles.
2 Expands exponentials.
3 Desarrolla las expresiones exponenciales.
4 Αναπτύσει τα εκθετικά.
0 Expr
-1 texpand
-2 lnexpand
-3 trigexpand
expexpand(exp(3*x))

# lnexpand
1 Développe les logarithmes.
2 Expands logarithms.
3 Desarrolla las expresiones logarítmicas.
4 Αναπτύσει τους λογαρίθμους.
0 Expr
-1 texpand
-2 expexpand
-3 trigexpand
lnexpand(ln(3*x))

# trigexpand
1 Développe les fonctions trigonométriques.
2 Expands trigonometric functions.
3 Desarrolla las funciones trigonométricas.
4 Αναπτύσει τις τριγωνομετρικές συναρτήσεις.
0 Expr
-1 texpand
-2 lnexpand
-3 expexpand
trigexpand(sin(3*x))

# combine
1 Rassemble des termes de Xpr selon une [classe de] fonction f passée en 2ème argument.
2 Combines terms in Xpr according to a [class of] function f (2nd argument).
3 Agrupa términos de Xpr de acuerdo a una [clase de] función f [en segundo argumento].
4 Συνδυάζει τους όρους της Xpr σύμφωνα με την [τάξη της] συνάρτηση f (που δίνεται ως 2ο όρισμα).
0 Expr(Xpr),Fnc(f).
-1 lncollect
-2 lin
-3 tlin
-4 tcollect
combine(exp(x)*exp(y),exp)
combine(sin(x)*cos(x),trig)
combine(ln(x)+ln(y),ln)

# plotarea areaplot
1 Affiche l'aire sous une courbe, en option la méthode de quadrature (trapeze,rectangle_gauche,rectangle_droit,point_milieu).
2 Displays the area below a curve, optionally with a quadrature method (trapezoid,left_rectangle,right_rectangle,middle_point).
3 Muestra el area bajo una curva, en opción el método de cuadratura.
4 Σχεδιάζει την περιοχή κάτω από μια καμπύλη, δυνητικά μέσω μιας μεθόδου αριθμητικής ολοκληρώσεως.
0 Expr,x=a..b,[n],[Method]
-1 integrate
-2 plot
-3 area
-4 areaat
-5 areaatraw
plotarea(sin(x),x=0..pi)
plotarea(x^2,x=0..1,5,trapezoid)
plotarea(x^2,x=0..1,5,middle_point)

# plotinequation inequationplot
1 Affiche le graphe de la solution d'inéquations de 2 variables.
2 Shows the graph of the solution of inequations with 2 variables.
3 Muestra el gráfico de la solución de inecuaciones en 2 variables.
4 Εμφανίζει το γράφημα επίλυσης ανισοτήτων με 2 μεταβλητές.
0 Expr,[x=xrange,y=yrange],[xstep],[ystep]
-1 plotfunc
-2 plotcontour
-3 plotdensity
-4 plotimplicit
plotinequation(x^2-y^2<3)
plotinequation(x^2-y^2<3,[x=-2..2,y=-2..2],xstep=0.1,ystep=0.1)
plotinequation(3-(x^2-y^2),[x=-2..2,y=-2..2],xstep=0.1,ystep=0.1)
plotinequation([x+y>3,x^2<y],[x,y],xstep=0.2,ystep=0.2)

# plotdensity densityplot
1 Affiche en couleur le graphe d'une expression de 2 variables dans le plan.
2 Shows in the plan with colors the graph of a expression of 2 variables.
3 Muestra en color el gráfico de una expresión de 2 variables en el plano.
4 Εμφανίζει χρωματικά το γράφημα μιας παράστασης 2 μεταβλητών.
0 Expr,[x=xrange,y=yrange],[z],[xstep],[ystep]
-1 plotfunc
-2 plotcontour
plotdensity(x^2-y^2,[x=-2..2,y=-2..2],xstep=0.1,ystep=0.1)
plotdensity(x^2-y^2,[x=-2..2,y=-2..2],z=-2..2,xstep=0.1,ystep=0.1)

# frames trames
1 Option des commandes animate et animate3d pour donner le nombre d'images.
2 Option of animate and animate3d commands to give the number of pictures.
3 Opción de animate y animate3d para dar la cantidad de imágenes.
4 Επιλογή των εντολών animate και animate3d που δίνει τον αριθμό των εικόνων.
0 Opt
-1 animate
-2 animate3d
 animate(sin(x*t),x=-pi..pi,t=-3..3,frames=30)
 animate3d(x^2+t*y^2,[x=-2..2,y=-2..2],t=-3..3,frames=10)

# animate
1 Anime le graphe de Xpr, dépendant de x, paramètre t en appelant plot.
2 Animates a plot of Xpr, depending of x, parameter t by calling plot.
3 Anima el gráfico de Xpr, dependiendo de x, parámetro t llamando plot.
4 Εφέ κίνησης γραφήματος της Xpr, συναρτήσει x, με παράμετρο t μέσω κλήσης της plot.
0 Expr(Xpr),x=xmin..xmax,t=tmin..tmax,frames=nframes
-1 plot
-2 animate3d
-3 animation
animate(sin(x*t),x=-pi..pi,t=-3..3,frames=30)

# animate3d
1 Anime le graphe de Xpr, dépendant de [x,y], paramètre t en appelant plotfunc.
2 Animate a plot of Xpr, depending of [x,y], parameter t by calling plotfunc.
3 Anima el gráfico de Xpr, dependiendo de [x,y], parámetro t llamando plotfunc.
4 Εφέ κίνησης γραφήματος της Xpr, συναρτήσει [x,y], με παράμετρο t μέσω κλήσης της plotfunc.
0 Expr(Xpr),[x=xmin..xmax,y=ymin..ymax],t=tmin..tmax,frames=nframes
-1 plotfunc
-2 animate
-3 animation
animate3d(x^2+t*y^2,[x=-2..2,y=-2..2],t=-3..3,frames=10)

# animation
1 Trace en boucle chaque objet d'une suite d'objets graphiques.
2 Draws in a loop each object of a geometric object sequence.
3 Dibuja en bucle cada objeto de una secuencia de objetos geométricos.
4 Σχεδιάζει επαναληπτικά κάθε αντικείμενο μιας ακολουθίας γραφικών αντικειμένων.
0 Mtrx
-1 animate
-2 animate3d
animation(seq(plotfunc([cos(a*t),sin(a*t)],t=0..2*pi/a),a,1,12,0.3))
animation(seq(plotparam([sin(t),sin(a*t)],t,0,2*pi,tstep=0.01),a,1,10,0.2))
animation(seq(line([0,0,0],[1,1,a]),a,-5,5,0.5))
animation(seq(plotfunc(x^2-y^a,[x,y]),a=1..3))
animation(seq(plotfunc((x+i*y)^a,[x,y],display=filled),a=1..10))
 plotfunc(x^2);animation([point(1),segment(1,1+i),point(1+i)],droite(y=2*x-1))

# camembert
1 Trace un ou des diagramme(s) en camembert d'une série statistique à 1 variable.
2 Draws pie chart of a one variable statistical serie.
3 Muestra uno o varios gráfico(s) de torta de una serie estadística en una variable.
4 Σχεδιάζει το διάγραμμα πίττας μιας στατιστικής σειράς με 1 μεταβλητή.
0 Mtrx
-1 bar_plot
camembert([["France",6],["Allemagne",12],["Suisse",5]])
camembert([3/2,2/3,5/4,4/5,7/6,6/7,9/8,8/9,11/10])
camembert([[2,"xyz","abc"],["A",2,5],["B",5,6],["C",7,7]])

# bar_plot
1 Trace un ou des diagrammes en bâtons d'une série statistique à 1 variable.
2 Draws barplot of a one variable statistical serie.
3 Muestra el gráfico de barras de una serie estadística en una variable.
4 Σχεδιάζει το διάγραμμα ράβδων μιας στατιστικής σειράς με 1 μεταβλητή.
0 Mtrx
-1 camembert
-2 histogram
-3 frequencies
bar_plot([["France",6],["Allemagne",12],["Suisse",5]])
bar_plot([3/2,2/3,5/4,4/5,7/6,6/7,9/8,8/9,11/10])
bar_plot([[2,"xyz","abc"],["A",2,5],["B",5,6],["C",7,7]])

# listplot plotlist
1 Trace la ligne polygonale reliant les points d'abscisse 0,...,n et d'ordonnée l=[y0,...,yn] ou la ligne reliant les points d'abscisse la première colonne de M et d'ordonnée sa deuxième colonne.
2 Draws the polygonal line through the points of abscissa 0,...,n and ordinate l=[y0,...,yn] or the line through the points of abscissa the first M column and ordinate the second column.
3 Traza la linea polígonal vinculando los puntos de abscisa 0,...,n y de ordenada l=[y0,...,yn] o la linea vinculando los puntos de abscisa la primera columna de M y de ordenadas la segundo columna.
4 Σχεδιάζει την γραμμή που διέρχεται από τα σημεία με τετμημένη 0,...,n και τεταγμένη l=[y0,...,yn].
0 Lst(l)||Mtrx(M)
-1 polygonplot
-2 scatterplot
-3 polygonscatterplot
listplot([13,10,15,16])
listplot([1,13],[2,10],[3,15],[4,16])
listplot([[0,13],[2,10],[4,15]])

# pari
1 Exécute une commande de PARI/GP ou exporte les commandes de PARI/GP.
2 Execute a PARI/GP command or exports all PARI/GP commands.
3 Ejecuta un comando de PARI/GP o exporta los comandos de PARI/GP.
4 Εκτελεί την εντολή στο PARI/GP ή εξάγει όλες τις εντολές του PARI/GP.
0 Str,arguments
-1 gcd
-2 lgcd
-3 is_prime
pari()
pari("gcd",15,50)
pari("gcd",5/7,50/9)
pari("gcd", 3,[25,15,50,75])
pari("gcd", [2,3],[25,15,50,75])
pari("content",[25,15,50,75])
pari("isprime",9856989898997789789,1)
pari("isprime",9856989898997789789,2)

# bitor
1 Ou logique inclusif bit à bit.
2 Inclusive logical bit or.
3 "O" lógico inclusivo bit a bit (disyunción).
4 Λογική πράξη Η (bit προς bit).
0 Intg,Intg
-1 bitxor
-2 bitand
bitor(0x12,0x38)

# bitand
1 Et logique bit à bit.
2 Logical bit and.
3 "Y" lógico bit a bit (conjunción).
4 Λογική πράξη ΚΑΙ (bit προς bit).
0 Intg,Intg
-1 bitxor
-2 bitor
bitand(0x12,0x38)

# bitxor
1 Ou logique exclusif bit à bit.
2 Exclusive logical bit or.
3 "O" lógico exclusivo bit a bit (disyunción).
4 Λογική πράξη Αποκλειστικό Η (bit προς bit).
0 Intg,Intg
-1 bitor
-2 bitand
bitxor(0x12,0x38)

# hamdist
1 Distance de Hamming bit à bit.
2 Bit Hamming distance.
3 Distancia de Hamming bit a bit.
4 Απόσταση Hamming των bit.
0 Intg,Intg
hamdist(0x12,0x38)

# simplex_reduce
1 Réduction par le simplexe pour trouver max(c.x) avec A.x<=b et x>=0, b>=0. Renvoie le max, la solution augmentée x et la matrice réduite. Accepte aussi en argument [[A|I|b],[-c|*|0]].
2 Reduction by simplex algorithm to find max(c.x) under A.x<=b and x>=0, b>=0. Returns the maximum, the augmented solution x and the reduced matrix. Accepts also [[A|I|b],[-c|*|0]] as argument.
3 Reducción por el simplex para encontrar max(c.x) con A.x<=b y x>=0, b>=0. Devuelve el máximo,la solución aumentada x y la matriz reducida. Acepta también en argumento [[A|I|b],[-c|*|0]].
4 Αναγωγή σύμφωνα με τον αλγόριθμο simplex για την εύρεση του max(c.x) με συνθήκες A.x<=b και x>=0, b>=0. Επιστρέφει το μέγιστο, την επαυξημένη λύση x και τον ανηγμένο πίνακα. Δέχεται επίσης ως όρισμα το [[A|I|b],[-c|*|0]].
0 Mtrx(A), Vect(b), Vect(c)
simplex_reduce([[3,2,2],[1,1,1]],[3,4],[1,2,3])
simplex_reduce([[3,2,2,1,0,3],[1,1,1,0,1,4],[-1,-2,-3,0,0,0]])
simplex_reduce([[-3,2],[1,1]],[3,4],[1,2])
simplex_reduce([[-3,2,1,0,3],[1,1,0,1,4],[-1,-2,0,0,0]])
simplex_reduce([[2,1,1,1,0,0,2],[1,2,3,0,1,0,5],[2,2,1,0,0,1,6],[-3,-1,-3,1,-1,2,0]])

# spline
1 Spline naturelle passant par les points donnés par les listes lx et ly, variable x, de degré d.
2 Natural spline through the points given by the lx and ly lists, variable x, degree d.
3 Spline natural pasando por los puntos dados por las listas lx y ly, variable x, de grado d.
4 Φυσικό spline μεταξύ των σημείων που δίνονται από τις λίστες lx, ly, την μεταβλητή x και τον βαθμό d.
0 Lst(lx),Lst(ly),Var(x),Intg(d)
-1 lagrange
spline([0,1,2],[1,3,0],x,3)

# convexhull
1 Enveloppe convexe d'un ensemble de points du plan.
2 Convex hull of a list of 2-d points.
3 Envoltura convexa de un conjunto de puntos del plano.
4 Κυρτό περίβλημα ενός συνόλου 2-Δ σημείων.
0 Lst
-1 polygon
convexhull(0,1,1+i,1+2i,-1-i,1-3i,-2+i)
convexhull([0,1,1+i,1+2i,-1-i,1-3i,-2+i])
 polygon(convexhull(0,1,1+i,1+2i,-1-i,1-3i,-2+i))

# as_function_of
1 Renvoie un élément défini comme fonction d'un élément défini précédemment.
2 Returns an element defined as a function of an element previously defined.
3 Devuelve un elemento definido como función de un elemento definido previamente.
4 Επιστρέφει ένα στοιχείο που ορίζεται ως συνάρτηση ενός στοιχείου που έχει ορισθεί προηγουμένως.
0 VarResult,VarArg
-1 locus
as_function_of(b,a)

# save_history
1 Sauve l'historique des commandes dans un fichier de nom str.
2 Save the historic in a file with name str.
3 Guarda el histórico de comandos en un archivo con nombre str.
4 Αποθήκευση του ιστορικού σε ένα αρχείο με όνομα str.
0 Str(str)
-1 
save_history("toto.cas")

# DispG
1 Affiche la fenêtre DispG (DispG sans ()).
2 Shows DispG windows (DispG without ()).
3 Abre la ventana DispG (DispG sin ()).
4 Εμφανίζει το παράθυρο γραφικών DispG (DispG χωρίς ()).
0 
-1 DispHome
-2 ClrGraph
 DispG;

# DispHome
1 Ferme la fenêtre DispG.
2 Closes DispG windows.
3 Cierra la ventana DispG.
4 Κλείνει το παράθυρο DispG.
0 
-1 DispG
 DispHome;

# ans
1 Renvoie la (n+1)-ième réponse de l'historique des commandes si n>=0 ou, la (-n)-ième réponse précédente si n<0 (par défaut n=-1 pour la réponse précédente).
2 Returns the n+1-th answer of the command history if n>=0 or, the (-n)th previous answer if n<0 (by defaults n=-1 for the previous answer).
3 Devuelve la n+1-ésima respuesta del histórico de comandos si n>=0 o, la (-n)-ésima respuesta previa si n<0 (por defecto n=-1 para la respuesta anterior).
4 Επιστρέφει τη (n+1)-στή απάντηση του ιστορικού εντολών αν n>=0 ή, την n-στή προηγούμενη απάντηση, αν n<0 (προεπιλογή n=- 1 για την προηγούμενη απάντηση).
0 Intg(n)
-1 quest
ans()
ans(2)
ans(-2)

# quest entry
1 Renvoie la (n+1)-ième question de l'historique des commandes si n>=0 ou, la (-n)-ième question précédente si n<0 (par défaut n=-1 pour la question précédente).
2 Returns the n+1-th question of the command history if n>=0 or, the (-n)th previous question if n<0 (by defaults n=-1 for the previous question).
3 Devuelve la n+1-ésima cuestión del histórico de comandos si n>=0, o la (-n)-ésima cuestión anterior si n<0 (por defecto n=-1 para la última expresión).
4 Επιστρέφει τη (n+1)-στή ερώτηση του ιστορικού εντολών αν n>=0 ή, τη n-στή προηγούμενη ερώτηση, αν n<0 (προεπιλογή n=- 1 για την προηγούμενη ερώτηση).
0 Intg(n)
-1 ans
quest()
quest(2)
quest(-2)

# ClrIO
1 Efface l'écran des sorties.
2 Clear the output screen.
3 Borra la pantalla de salidas.
4 Καθαρίζει την γραμμή απαντήσεων.
0 NULL
-1 ClrGraph
-2 ClrDraw
ClrIO()

# ithprime
1 Renvoie le n-ième nombre premier (inférieur à 2.10^8).
2 Returns the n-th prime number less than 2.10^8.
3 Devuelve el n-ésimo número primo menor que 2.10^810000 (por ahora).
4 Επιστρέφει τον i-στό πρώτο αριθμό <2.10^8.
8 第 i 个素数。第 n 个素数。  对于整数 n，返回小于 2.10^8 。
0 Intg(n)
-1 nextprime
-2 prevprime
ithprime(1229)
ithprime(1000)

# nprimes
1 Nombre de nombres premiers inférieurs ou égaux à n.
2 Count the number of primes less than n.
3 Devuelve el número de número primo menor que n.
4 Επιστρέφει τον αριθμό των πρώτο αριθμό <=n.
0 Intg(n)
-1 ithprime
-2 prevprime
-3 nextprime
-4 isprime
nprimes(20)

# assign
1 Stocke le deuxième argument (de l'égalité) dans la variable donnée comme premier argument (de l'égalité) (compatibilité Maple).
2 Store the second argument (of the equality) in the variable given as first argument (of the equality) (Maple compatibility).
3 Guarda el segundo argumento (de la igualdad) en la variable dada como primer argumento (de la igualdad) (compatibilidad con Maple).
4 Αποθηκεύει το δεύτερο όρισμα (της ισότητας) στη μεταβλητή που δίνεται ως πρώτο όρισμα (της ισότητας) (συμβατότητα με Maple).
0 (Var,value) or Equal or LstEq.
-1 sto
-2 :=
assign(a,2)
assign(a=2)
assign([a1=1,a2=2,a3=3])

# ismith
1 Calcule la forme normale de Smith d'une matrice A à coefficients entiers : renvoie U,B,V tels que U et V inversibles dans ℤ, B diagonale, B[j,j] divise B[j+1,j+1] et B=U*A*V.
2 Smith normal form of a matrix with coefficients in ℤ : returns U,B,V such that U and V invertible in ℤ, B diagonal, B[j,j] divide B[j+1,j+1] and B=U*A*V.
3 Calcula la forma normal de Smith de una matriz a coeficientes enteros: devuelve U,B,V tales que U y V invertibles en ℤ, B diagonal, B[j,j] divide a B[j+1,j+1] y B=U*A*V.
4 Υπολογίζει την κανονική μορφή Smith ενός πίνακα με συντελεστές στο ℤ: επιστρέφει U, B, V, τέτοια ώστε U και V αντιστρέψιμα στο ℤ, B διαγώνιος, το B[j,j] διαιρεί το B[j+1,j+1] και Β=U*A*V.
0 Mtrx(A)
-1 ihermite
-2 smith
ismith([[9,-36,30],[-36,192,-180],[30,-180,180]])
ismith([[1,2,3],[4,5,6],[7,8,9]])

# ihermite
1 Calcule la forme normale de Hermite pour une matrice A à coefficients entiers : renvoie L,U tels que L inversible dans ℤ, U triangulaire supérieure et U=L*A.
2 Hermite normal form of a matrix with coefficients in ℤ : returns L,U such that L is invertible in ℤ, U upper triangular and U=L*A.
3 Calcula la forma normal de Hermite para una matriz A con coeficientes enteros : devuelve L,U tales que L sea invertible en ℤ, U triang sup y U=L*A.
4 Υπολογίζει την κανονική μορφή Hermite ενός πίνακα με συντελεστές στο ℤ: επιστρέφει L,U   τέτοια ώστε L αντιστρέψιμο στο ℤ, U άνω τριγωνικός και U=L*A.
0 Mtrx(A)
-1 ismith
ihermite([[9,-36,30], [-36,192,-180], [30,-180,180]])
ihermite([[1,2,3],[4,5,6],[7,8,9]])

# GF
1 Crée un corps de Galois (Galois Field) de caractéristique p ayant p^n éléments. Le polynome minimal est primitif sauf s'il est donné ou si on passe 0 en dernier argument.
2 Create a Galois Field of characteristic p with p^n elements. The minimal polynomial is primitive except if given or if 0 is passed as last argument.
3 Crea un campo de Galois de característica p con p^n elementos.
4 Δημιουργία Σώματος Galois με χαρακτηριστική p και p^n στοιχεία.
0 Intg(p), Intg(n)|Minpoly,[Variable],[0|undef|Poly]
GF(2,8)
GF(5,9,a)
GF(2,128,0)
GF(2,w^8+w^7+w^5+w+1)
GF(2,8,['a','G'])
 G:=GF(2,a^8+a^6+a^3+a^2+1,['a','G'],undef)

# droite_tangente
1 Trace la tangente au graphe de y=f(x) en x=a.
2 Draws the tangent to y=f(x) at x=a.
3 Traza la tangente de y=f(x) en x=a.
4 Σχεδιάζει την εφαπτομένη της y=f(x) στο x=α.
0 Expr(f(x)),[Var],Expr(a)
-1 tangent
-2 LineTan
droite_tangente(sin(x),pi/4)
droite_tangente(sin(t),t=pi/4)
droite_tangente(sin(t),t,pi/4)
droite_tangente(x^2-x,1)

# LineTan
1 Trace la tangente au graphe de y=f(x) en x=a. Ne pas mettre de parenthèses ou les mettre à l'extérieur.
2 Draws the tangent to y=f(x) at x=a. Do not put parenthesis or put the parenthesis around.
3 Traza la tangente de y=f(x) en x=a.
4 Σχεδιάζει την εφαπτομένη της y=f(x) στο x=a.
0 Expr(f(x)),[Var],Expr(a)
-1 tangent
-2 droite_tangente
 LineTan sin(x),pi/4
 LineTan sin(t),t=pi/4)
 LineTan sin(t),t,pi/4
 LineTan x^2-x,1
 (LineTan sin(t),t,pi/4)

# xor
1 Ou exclusif (opérateur infixé).
2 Exclusive or (infix operator).
3 O exclusivo (operador no fijado).
4 Αποκλειστικό Η (προθεματικός τελεστής).
8 异或。 如果 value1 或 value2 只有一个为非零值，则返回 1； 否则，返回 0。
0 Expr, Expr
-1 or
-2 and
-3 not
 1 xor 1
 0 xor 1
 0 xor 0

# reverse_rsolve
1 Si v=[v_0 ... v_(2n-1)], renvoie [b_n,...,b_0] tel que b_n*v_{n+k}+...+b_0*v_k=0 pour k=0..n-1.
2 If v=[v_0 ... v_(2n-1)], return [b_n,...,b_0] such that b_n*v_{n+k}+...+b_0*v_k=0 for k=0..n-1.
3 Si v=[v_0 ... v_(2n-1)], devuelve [b_n,...,b_0] tal que b_n*v_{n+k}+...+b_0*v_k=0 para k=0..n-1.
4 Αν v=[v_0 ... v_(2n-1)], επιστρέφει [b_n,...,b_0] τέτοιο ώστε b_n*v_{n+k}+...+b_0*v_k=0 για k=0..n-1.
0 Vect(v)
-1 rsolve
reverse_rsolve([1,-1,3,3])

# revlist reverse
1 Renvoie la liste L inversée; L:=revlist(L) ou L.revlist().
2 Returns the list L in reverse order; L:=revlist(L) or L.revlist().
3 Devuelve la lista L al revés; L:=revlist(L) o L.revlist().
4 Επιστρέφει την λίστα L με αντίστροφη διάταξη; L:=revlist(L) ή L.revlist().
8 反转数据列。  反转数据列中元素的顺序，并返回为一个新数据列。
0 Lst(L)
revlist([1,2,3,4])
 L:=[1,2,3,4];L:=revlist(L)
 L:=[1,2,3,4];L.revlist()
 L:=[1,2,3,4];L.reverse()

# ratnormal
1 Réécriture sous forme de fraction irréductible.
2 Rewrite as an irreducible rational fraction.
3 Reescritura bajo forma de fracción irreducible.
4 Επανεγγραφή σε μορφή ανάγωγης ρητής συνάρτησης.
0 Expr
-1 normal
-2 simplify
-3 factor
-4 expand
ratnormal((x^2-1)/(x^3-1))
ratnormal(c/d+b/d+a/d)
ratnormal((x^2-1)/(x^3-1)+(x-1)/(x^3-1)+1)

# pade
1 Approximant de Padé P/Q=Xpr mod x^(n+1) ou mod N avec degré(P)<p.
2 Pade approximation P/Q=Xpr mod x^(n+1) or mod N with degree(P)<p.
3 Approximación de Padé P/Q=Xpr mod x^(n+1) o mod N con grado(P)<p.
4 Προσέγγιση Pade P/Q=Xpr mod x^(n+1) ή mod N με βαθμό(P)<p.
0 Expr(Xpr), Var(x), (Intg(n) || Poly(N)), Intg(p)
-1 taylor
-2 series
pade(exp(x),x,10,6)

# is_coplanar
1 Teste si 4 points sont coplanaires.
2 Test if 4 points are in the same plan.
3 Verifica si 4 puntos son coplanares.
4 Ελέγχει, εάν 4 σημεία είναι στο ίδιο επίπεδο.
0 Pnt,Pnt,Pnt,Pnt
is_coplanar([0,0,0],[1,2,-3],[1,1,-2],[2,1,-3])

# is_cospherical
1 Teste si 5 points sont cosphériques.
2 Test if 5 points are on the same sphere.
3 Verifica si 5 puntos son coesferares.
4 Ελέγχει, εάν 5 σημεία είναι στο ίδιο σφαίρα.
0 Pnt,Pnt,Pnt,Pnt
is_cospherical([-1,0,0],[1,0,0],[0,1,0],[0,-1,0],[0,0,1])

# is_included
1 Teste l'inclusion de 2 ensembles ou de 2 listes.
2 Test if a set or a list is included in another set or list.
3 Verifica si una lista o conjunto es en una lista o conjunto.
4 
0 Lst||Ens,Lst||Ens
is_included([1,2,-3],[-1,-2,2,1,-3])
is_included(%{1,2,-3%},%{-1,3,-2,2,1,-3%})

# gnuplot
1 Exécute une instruction dans le processus gnuplot (fenêtre 3-d).
2 Run a gnuplot command (in the 3-d screen).
3 Ejecuta una instrucción en el proceso gnuplot (ventana 3-d).
4 Εκτελεί την εντολή gnuplot (σε 3-Δ παράθυρο).
0 Str
gnuplot("splot u,v,u+v")

# current_sheet
1 Contenu de l'éditeur de matrice/du tableur.
2 Content of the matrix editor or spreadsheet.
3 Contenido del editor de matriz/de la hoja de balance.
4 Δίνει το περιεχόμενο του επεξεργαστή πινάκων ή υπολογιστικού φύλλου.
0 [Intg||Inter],[Intg||Letter],[Letter]
current_sheet(1,2)
current_sheet(A1..A5,B,G)

# lll
1 (S,A,L,O):=lll(M), base courte du réseau engendré (L*O=A*M=S).
2 (S,A,L,O):=lll(M), short basis of a lattice (L*O=A*M=S).
3 (S,A,L,O):=lll(M), base corta de la red generada (L*O=A*M=S).
4 (S,A,L,O):=lll(M), μικρή βάση ενός πλέγματος (L*O=A*M=S).
0 Mtrx
lll([[1234,3452,4521],[3425,2241,1543],[5643,3425,8721]])

# fft
1 Fast Fourier Transform dans ℝ, ou dans le corps fini ℤ/pℤ, avec a comme racine n-ième primitive de l'unité (n=size(L)).
2 Fast Fourier Transform in ℝ or in the field ℤ/pℤ, with a as primitive n-th root of 1 (n=size(L)).
3 Fast Fourier Transform en ℝ, o en el campo finito ℤ/pℤ, con a como raíz n-ésima primitiva de la unidad (n=size(L)).
4 Ταχύς Μετασχηματισμός Fourier στο ℝ ή στο πεπερασμένο σώμα ℤ/pℤ, με το a πρωταρχική ρίζα του 1 τάξης n (n=size(L)).
0 Vect or (Vect(L),Intg(a),Intg(p)
-1 ifft
fft([1,2,3,4,0,0,0,0])
fft(ranm(128),22798,35969)

# ifft
1 Inverse Fast Fourier Transform.
2 Inverse Fast Fourier Transform.
3 Inverse Fast Fourier Transform.
4 Αντίστροφος Ταχύς Μετασχηματισμός Fourier.
0 Vect
-1 fft
ifft([100.0,-52.2842712475+6*i,-8.0*i,4.28427124746-6*i,4.0,4.28427124746+6*i,8*i,-52.2842712475-6*i])

# hessenberg
1 Réduction matricielle sous forme de Hessenberg. Renvoie [P,B] tel que B=inv(P)*A*P, par défaut n=0 les calculs sont exacts, sinon ils sont numériques et pour n=-1 B est triangulaire sup, pour n=-2 P est orthogonale et B a ses coefficients sous-sous-diagonaux nuls et pour n premier les calculs sont modulo n.
2 Matrix reduction to Hessenberg form. Returns [P,B] such that B=inv(P)*A*P, by default n=0 the result is exact else the result is numeric. For n=-1 B is triangular, n=-2 P is orthogonal and if n is prime the result is mod n.
3 Reducción matricial bajo forma de Hessenberg.
4 Αναγωγή πίνακα σε μορφή Hessenberg.
8 Hessenberg (Schur) 分解。 将矩形矩阵分解成两个矩阵。 如果矩阵为实矩阵，则结果为 {[[正交矩阵]]、[[准上三角矩阵]]}。 如果启用了复数模式，并且矩阵为复矩阵，则结果为 {[[酉矩阵]]、[[上三角矩阵]]}。
0 Mtrx(A),[Intg(n)]
-1 SCHUR
hessenberg([[1,2,3],[4,5,6],[7,8,1]])
hessenberg([[1,2,3,4],[4,5,6,7],[7,8,9,0],[0,1,2,3]])
hessenberg([[1,2,3],[4,5,6],[7,8,1]],-1)
hessenberg([[1,2,3],[4,5,6],[7,8,1]],-2)
hessenberg([[1,2,3],[4,5,6],[7,8,1]],3)

# SCHUR schur
1 Réduction matricielle sous forme de Hessenberg. Renvoie les matrices numériques [P,B] tel que B=inv(P)*A*P avec B triangulaire : SCHUR(A)=hessenberg(A,-1) 
2 Matrix reduction to Hessenberg form. Returns [P,B] such that B=inv(P)*A*P:SCHUR(A)=hessenberg(A,-1).
3 Reducción matricial bajo forma de Hessenberg : SCHUR(A)=hessenberg(A,-1).
4 Αναγωγή πίνακα σε μορφή Hessenberg : SCHUR(A)=hessenberg(A,-1).
8 Schur 分解。 将矩形矩阵分解成两个矩阵。 如果矩阵为实矩阵，则结果为 {[[正交矩阵]]、[[准上三角矩阵]]}。 如果启用了复数模式，并且矩阵为复矩阵，则结果为 {[[酉矩阵]]、[[上三角矩阵]]}。 SCHUR(A)=hessenberg(A,-1)。 
0 Mtrx(A)
-1 hessenberg
SCHUR([[1,2,3],[4,5,6],[7,8,1]])
SCHUR([[1,2,3,4],[4,5,6,7],[7,8,9,0],[0,1,2,3]])

# companion
1 Matrice compagnon d'un polynôme unitaire (an=1).
2 Companion matrix of a polynomial (an=1).
3 Matriz compañera de un polinomio unitario (an=1).
4 Συνοδευτικός πίνακας ενός πολυωνύμου (an=1).
0 Poly,Var
-1 pcar
-2 rat_jordan
companion(x^2+5x-7,x)
companion(-pcar([[1,0,1],[0,2,-1],[1,-1,1]],x),x)

# cote
1 Troisième coordonnée (z) d'un point 3-d.
2 Third coordinate (z) of a 3-d point.
3 Tercera coordinada (z) de un punto 3-d.
4 Η τρίτη συντεταγμένη (z) ενός 3-Δ σημείου.
0 Vect
-1 abscissa
-2 ordinate
-3 coordinates
cote(point[1,2,3])
cote(point(1,2,3))

# chrem
1 Restes chinois pour des entiers ou pour des polynômes écrits sous forme 
symbolique.
2 Chinese remainders for integers or for polynomials.
3 Restos chinos para entero S o para polinomios.
4 Κινεζικός αλγόριθμος υπολοίπων για ακεραίους ή υπόλοιπο για πολυώνυμα.
8 整数的中国余数  或 多项式的中国余数
0 LstIntg(a,b,c....),LstIntg(p,q,r,....)
-1 gcd
-2 fracmod
-3 chinrem
-4 ichinrem
chrem([2,3],[7,5])
chrem([2,4,6],[3,5,7])
chrem([2,4,6,7],[3,5,7,11])
chrem([2*x+1,4*x+2,6*x-1,x+1],[3,5,7,11])

# ecris
1 Écris la chaîne s avec la fonte n (par défaut n=14) au point [x,y] (par défaut à la place de la tortue).
2 Write the string s with the fount n (by default n=14) at the point [x,y] (by default at the point where the turtle is).
3 Escribe la cadena s con la fuente n (por defecto n=14) en el punto [x,y] (por defecto en el lugar de la tortuga).
4 Γράφει την συμβολοσειρά s με μέγεθος γραμματοσειράς n (προεπιλογή n=14) στο σημείο [x,y] (προεπιλογή είναι το σημείο όπου βρίσκεται η χελώνα).
0 Str(s),[Intg(n)],[Real(x)],[Real(y)]
-1 signe
ecris("bonjour")
ecris("bonjour",20)
ecris("bonjour",20,30,10)
ecris(bonjour,20,30,10)

# signe
1 Écris la chaîne s avec la fonte 20 au point [10,10].
2 Write the string s with the fount 20 at the point [10,10].
3 Escribe la cadena s con la fuente 20 en el punto [10,10].
4 Γράφει την συμβολοσειρά s με μέγεθος γραμματοσειράς 20 στο σημείο [10,10].
0 Str(s)
-1 ecris
signe("Thomas")
signe(Thomas)

# prism
1 Dessine un prisme de base plane ABCD...et d'arêtes parallèles à AA1 (les faces sont des parallélogrammes).
2 Draws a prism with plane base ABCD...and with edges parallel to AA1 (the faces are parallelograms).
3 Traza un prisma con base plana ABCD...y lados paralelos a AA1 (las caras son paralelogramos).
4 Σχεδιάζει ένα πρίσμα με επίπεδο βάσης το ABCD...και με τις άκρες παράλληλες στο ΑΑ1 (οι έδρες είναι παραλληλόγραμμες).
0 LstPnt([A,B,C,D]),Pnt(A1)
-1 cube
-2 polyhedron
prism([[0,0,0],[5,0,0],[0,5,0],[-5,5,0]],[0,0,5])

# common_perpendicular
1 Dessine la perpendiculaire commune aux droites D1 et D2.
2 Draws the common perpendicular of the lines D1 and D2.
3 Traza la perpendicular común a las rectas D1 y D2.
4 Σχεδιάζει την κοινή κάθετο στις ευθείες D1 και D2.
0 Line(D1),Line(D2)
-1 altitude
-2 perpendicular
common_perpendicular(line([0,0,0],[0,5,5]),line([5,0,0],[0,0,5]))

# point2d
1 Définit au hasard, les coordonnées entières (entre -5 et +5) des points 2d donnés en argument.
2 Defines at random, the coordinates (between -5 and +5) of the 2d points given as argument.
3 Define al azar, las coordenadas enteras (entre -5 y 5) de puntos 2d dados en argumento.
4 Ορίζει τυχαία τις συντεταγμένες (μεταξύ -5 και 5) 2-Δ σημείων που δίνονται ως όρισμα.
0 SeqVar(A,B,C...)
-1 point3d
-2 point
point2d(A,B,C,D)

# point3d
1 Définit au hasard les coordonnées entières (entre -5 et +5) des points 3d donnés en argument.
2 Defines at random, the coordinates (between -5 and +5) of the 3d points given as argument.
3 Define al azar las coordenadas enteras (entre -5 y 5) de puntos 3d dados en argumento.
4 Ορίζει τυχαία τις συντεταγμένες (μεταξύ -5 και 5) 3-Δ σημείων που δίνονται ως όρισμα.
0 SeqVar(A,B,C...)
-1 point2d
-2 point
point3d(A,B,C,D)

# octahedron
1 Dessine un octaèdre de centre A, de sommet B où le plan ABC contient 4 sommets.
2 Draws an octahedron with center A, vertex B and such that the plane ABC contains 4 vertices.
3 Traza un octaedro de centro A, vértice B donde el plano ABC contiene 4 vértices.
4 Σχεδιάζει ένα οκτάεδρο με κέντρο Α, κορυφή Β και κατά τέτοιο τρόπο ώστε το επίπεδο ABC να περιέχει 4 κορυφές.
0 Pnt(A),Pnt(B),Pnt(C)
-1 icosahedron
-2 dodecahedron
-3 cube
-4 tetrahedron
octahedron([0,0,0],[0,0,5],[0,5,0])
octahedron(evalf([0,0,0],[3,2,4],[1,1,0]))

# icosahedron
1 Dessine un icosaèdre de centre A, de sommet B où le plan ABC contient le sommet le plus proche (parmi les 5) de B.
2 Draws an icosahedron with center A, vertex B and such that the plane ABC contains one vertex among the 5 nearest vertices from B.
3 Traza un icosaedro de centro A, vértice B donde el plano ABC contiene el vértice más cercano (dentro de los 5) de B.
4 Σχεδιάζει ένα εικοσάεδρο με κέντρο Α, κορυφή Β και κατά τέτοιο τρόπο ώστε το επίπεδο ABC να περιέχει την πλησιέστερη κορυφή (από τις 5) προς το Β.
0 Pnt(A),Pnt(B),Pnt(C)
-1 octahedron
-2 dodecahedron
-3 cube
-4 tetrahedron
icosahedron([0,0,0],[sqrt(5),0,0],[1,2,0])
icosahedron(evalf([0,0,0],[3,2,4],[1,1,0]))

# dodecahedron
1 Dessine un dodécaèdre de centre A, de sommet B où le plan ABC contient un axe de symétrie du dodécaèdre.
2 Draws a dodecahedron with center A, vertex B and such that the plane ABC contains a symmetry axis of the dodecahedron.
3 Traza un dodecaedro de centro A, vértice B donde el plano ABC contiene un eje de simetría del dodecaedro.
4 Σχεδιάζει ένα δωδεκάεδρο με κέντρο Α, κορυφή Β και κατά τέτοιο τρόπο ώστε το επίπεδο ABC να περιέχει έναν άξονα συμμετρίας του δωδεκάεδρου.
0 Pnt(A),Pnt(B),Pnt(C)
-1 icosahedron
-2 octahedron
-3 cube
-4 tetrahedron
dodecahedron([0,0,0],[0,2,sqrt(5)/2+3/2],[0,0,1])
dodecahedron(evalf([0,0,0],[3,2,4],[1,1,0]))

# parallelepiped
1 Dessine un parallélépipède de côtés AB,AC,AD (les faces sont des parallélogrammes).
2 Draws a parallelepiped with sides AB,AC,AD (the faces are parallelograms).
3 Traza un paralelepípedo con lados AB,AC,AD (las caras son paralelogramos).
4 Σχεδιάζει ένα παραλληλεπίπεδο με πλευρές AB, AC, AD (οι έδρες είναι παραλληλόγραμμα).
0 Pnt(A),Pnt(B),Pnt(C),Pnt(D)
-1 cube
-2 polyhedron
parallelepiped([0,0,0],[2,0,0],[0,1,0],[0,0,3])
 p:=parallelepiped([0,0,0],[5,0,0],[0,3,0],[0,0,2]);c1,c2,c3,c4,c5,c6,c7,c8:=sommets(p);

# polyhedron
1 Dessine un polyèdre convexe dont les sommets sont parmi les arguments.
2 Draws a convex polyhedron with vertices among the arguments.
3 Traza un poliedro convexo cuyos vértices están dentro de los argumentos.
4 Σχεδιάζει ένα κυρτό πολύεδρο με κορυφές από τα ορίσματα.
0 SeqPnt(A,B,C...)
-1 cube
-2 parallelepiped
polyhedron([0,0,0],[0,5,0],[0,0,5],[1,2,6])

# pyramid tetrahedron
1 Dessine le tétraèdre régulier direct de coté AB dont une face est dans le plan (A,B,C) quand il y a 3 arguments et la pyramide ABCD quand il y a 4 arguments.
2 Draws the regular direct pyramid ABCD with vertices A,B and a face in the plan (A,B,C) when there is 3 arguments et the pyramid ABCD when there is 4 arguments.
3 Traza un tetraedro regular directo de lado AB con una cara en el plan (A,B,C) cuando hay 3 argumentos y el pirámide ABCD cuando hay 4 argumentos.
4 Σχεδιάζει μια κανονική πυραμίδα ABCD με κορυφές Α,Β και μία έδρα στο επίπεδο (Α,Β,C), όταν υπάρχουν 3 ορίσματα και την πυραμίδα ABCD όταν υπάρχουν 4 ορίσματα.
0 Pnt(A),Pnt(B),Pnt(C),[Pnt(D)]
-1 cube
-2 cylinder
-3 icosahedron
-4 dodecahedron
-5 octahedron
pyramid([0,0,0],[3,0,0],[0,1,0])
pyramid([0,0,0],[3,0,0],[0,3,0],[0,0,4])

# cube
1 Dessine le cube direct de coté AB dont une face est dans le plan (A,B,C).
2 Draws the direct cube with vertices A,B with a face in the plan (A,B,C).
3 Traza el cubo directo de lado AB con una casa en el plano (A,B,C).
4 Σχεδιάζει ένα κύβο με κορυφές Α,Β με μία έδρα στο επίπεδο (A,B,C).
0 Pnt(A),Pnt(B),Pnt(C)
-1 parallelepiped
-2 cylinder
-3 icosahedron
-4 dodecahedron
-5 octahedron
-6 tetrahedron
-7 centered_cube
cube([0,0,0],[3,0,0],[0,0,1]) 
 A,B,C:=point(1,0,0),point(1,1,0),point(0,1,0);c:=cube(A,B,C);A,B,C,D,E,F,G,H:=sommets(c); 
 A,B,K:=point(1,0,0),point(1,1,0),point(0,2,0);c:=cube(A,B,C);A,B,C,D,E,F,G,H:=sommets(c); 
 c:=cube([0,0,0],[1,0,0],[0,1,0]);c1,c2,c4,c3,c5,c6,c7,c8:=sommets(c); 
 c:=cube([0,0,0],[0,2,0],[0,0,1]);c1,c2,c4,c3,c5,c6,c7,c8:=sommets(c); 

# centered_tetrahedron
1 Dessine le tétraèdre régulier direct de centre A de sommet B dont un sommet est dans le plan (A,B,C).
2 Draws the regular direct pyramid with center A, vertex B and a vertex in the plan (A,B,C).
3 Traza el tetraedro regular directo de centro A, vértice B con un vértice en el plano (A,B,C).
4 Σχεδιάζει ένα κανονικό τετράεδρο με κέντρο Α, κορυφή Β και μία κορυφή στο επίπεδο (Α,Β,C).
0 Pnt(A),Pnt(B),Pnt(C)
-1 cube
-2 tetrahedron
-3 icosahedron
-4 dodecahedron
-5 octahedron
centered_tetrahedron([0,0,0],[3,0,0],[0,1,0])
centered_tetrahedron(evalf([0,0,0],[3,2,4],[1,1,0]))

# centered_cube
1 Dessine le cube direct de centre A de sommet B tel que le plan ABC contient un axe de symétrie du cube.
2 Draws the direct cube with center A, vertex B and such that the plane ABC contains a symmetry axis of the cube.
3 Traza el cubo directo de centro A, vértice B, tal que el plano ABC contiene un eje de simetría del cubo.
4 Σχεδιάζει έναν κύβο με κέντρο Α, κορυφή Β τέτοιο ώστε το επίπεδο ABC να περιέχει ένα άξονα συμμετρίας του κύβου.
0 Pnt(A),Pnt(B),Pnt(C)
-1 parallelepiped
-2 cube
-3 icosahedron
-4 dodecahedron
-5 octahedron
-6 centered_tetrahedron
centered_cube([0,0,0],[3,0,0],[0,0,1])
centered_cube(evalf([0,0,0],[3,2,4],[1,1,0]))

# cone
1 Dessine un cône de sommet A, direction v, de demi_angle au sommet t, [et de hauteur h et -h].
2 Draws a cone with vertex A, direction v, and with half_angle t [and with altitude h and -h].
3 Traza un cono con cumbre A, dirección v, y con medio_ángulo t en la cumbre [y con altura h y -h].
4 Σχεδιάζει ένα κώνο με κορυφή Α, διεύθυνση ν, και με ημι_γωνία στην κορυφή t [και ύψους h και -h].
0 Pnt(A),Vect(v),Real(t),[Real(h)]
-1 half_cone
-2 cylinder
cone([0,0,0],[0,0,1],pi/6)
cone([0,0,0],[0,1,1],pi/6,4)

# half_cone
1 Dessine un demi-cône de sommet A, direction v, de demi_angle au sommet t, [et de hauteur h].
2 Draws an half-cone with vertex A, direction v and with half_angle=t [and with altitude h].
3 Traza un medio-cono con cumbre A, dirección v, y con medio_ángulo t en la cumbre [y con altura h].
4 Σχεδιάζει ένα ημι-κώνο με κορυφή Α, διεύθυνση ν, και με ημι_γωνία στην κορυφή t [και ύψος h].
0 Pnt(A),Vect(v),Real(t),[Real(h)]
-1 cone
-2 cylinder
half_cone([0,0,0],[0,0,1],pi/6)
half_cone([0,0,0],[0,1,1],pi/6,-4)

# cylinder
1 Dessine un cylindre d'axe (A,v), de rayon r [et de hauteur h].
2 Draws a cylinder with axis (A,v), with radius r [and with altitude h].
3 Traza un cilindro con eje (A,v), con radio r [y altura h].
4 Σχεδιάζει έναν κύλινδρο με άξονα=(A,v), ακτίνα=r [και με ύψος h].
0 Pnt(A),Vect(v),Real(r),[Real(h)]
-1 half_cone
-2 cone
cylinder([0,0,0],[0,1,0],2)
cylinder([0,0,0],[0,1,0],2,-3)

# erase3d
1 Efface l'écran graphique 3d
2 Erase the graphic screen 3d
3 Borra la pantalla gráfica 3d
4 Καθαρισμός της 3-Δ οθόνης γραφικών.
0 NULL
-1 ClrGraph
-2 erase
erase3d()

# sphere
1 sphere(A,B) (resp sphere(A,r)) trace la sphère de diamètre AB (resp centre A et de rayon r) dans l'espace 3D.
2 sphere(A,B) (resp sphere(A,r)) draws the sphere of diameter AB (resp center A and radius r) in the space 3D.
3 sphere(A,B) (resp sphere(A,r)) traza la esfera de diámetro AB (resp centro A Y radio r) en el espacio 3D.
4 sphere(A,B) (resp sphere(A,r)) σχεδιάζει τη σφαίρα διαμέτρου ΑΒ (κέντρου A και ακτίνας r) στον 3-Δ χώρο.
0 (Pnt or Vect),(Pnt or Real)
-1 circle
sphere([0,0,0],[2,2,2])
sphere([1,1,1],1)

# plane
1 plan(A,B,C) ou plan(A,droite(B,C)) (resp plan(a*x+b*y+c*z+d=0)) trace le plan ABC (resp d'équation a*x+b*y+c*z+d=0) dans l'espace 3D.
2 plane(A,B,C) or plane(A,line(B,C)) (resp plane(a*x+b*y+c*z+d=0)) draws the plane ABC (resp of equation a*x+b*y+c*z+d=0) in the 3D space.
3 plane(A,B,C) o plane(A,line(B,C)) (resp plane(a*x+b*y+c*z+d=0)) traza el plano ABC (resp de ecuación a*x+b*y+c*z+d=0).
4 plane(A,B,C) ή plane(A,line(B,C)) (resp plane(a*x+b*y+c*z+d=0)) σχεδιάζει το επίπεδο ABC (αναφορικά με την a*x+b*y+c*z+d=0) στον 3-Δ χώρο.
8 平面。
0 Pnt or Eq, [Pnt or Line],[Pnt]
-1 line
plane([0,0,0],[1,1,1],[1,0,0])
plane([0,0,0],line([1,0,0],[1,1,1]))
plane(x+y+z=0)
plane(2*x+y-2*z-1)

# line
1 droite(A,B) (resp droite(A,pente=m) ou droite(A,[1,m]) ou droite(a*x+b*y+c=0) ou droite(a*x+b*y+c*z+d=0,aa*x+bb*y+cc*z+dd=0) ou droite(A,u)) trace la droite AB (resp la droite passant par A et de pente m ou de vecteur directeur u ou d'équation l'argument) dans le plan ou dans l'espace 3D.
2 line(A,B) (resp line(A,slope=m) or line(A,[1,m]) or line(a*x+b*y+c=0) or line(a*x+b*y+c*z+d=0,aa*x+bb*y+cc*z+dd=0) or line(A,u)) draws the line AB (resp the line going through A with slope m or with direction vector u or of equation the argument) in the plane or in the 3D space.
3 line(A,B)(resp line(A,slope=m) o line(A,[1,m]) o line(a*x+b*y+c=0) o line(a*x+b*y+c*z+d=0,aa*x+bb*y+cc*z+dd=0 o line(A,u)) traza la recta AB (resp la recta pasando por A y de pendiente m, o vector director u, o de ecuación el argumento) en el plano o el espacio 3D.
4 line(A,B) (resp line(A,slope=m)  ή  line(A,[1,m]) ή   line(a*x+b*y+c=0) ή line(a*x+b*y+c*z+d=0,aa*x+bb*y+cc*z+dd=0) ή line(A,u)) σχεδιάζει την ευθεία AB (αναφορικά με την εξίσωση του ορίσματος) στο επίπεδο ή στον 3-Δ χώρο.
0 Pnt||Cplx||Eq,[Pnt||slope||Var]
-1 point
-2 plane
-3 slope
line(i,1+i)
line(point(-i),point(1+i))
line(1+i,slope=2)
line([0,0,0],[1,1,1])
line(x+y=1)
line(x+y+z=0,x+y=0)
line([1+t,-1+t],t)
line([1+t,2-t,-1+3*t],t)
line(1-i,slope=slope(line(1,2i)))

# point
1 A:=point(za) ou A:=point(a,b) (resp A:=point([a,b,c])) dessine le point d'affixe za=a+ib (resp de coordonnées (a,b,c)) et de légende A.
2 A:=point(za) or A:=point(a,b) (resp A:=point([a,b,c])) draws a point of affix za=a+ib (resp of coordinates (a,b,c)) with the legend A.
3 A:=point(za) o A:=point(a,b) (resp A:=point([a,b,c])) traza el punto de afijo za=a+ib (resp de coordenadas (a,b,c)) con la leyenda A.
4 A:=point(za) ή A:=point(a,b) (resp A:=point([a,b,c])) σχεδιάζει ένα σημείο με προσθήκη za=a+ib (αναφορικά με τις συντεταγμένες (a,b,c)) και με υπόμνημα A.
0 Cplx(za)||Vect
-1 pixon
-2 line
-3 point2d
-4 point3d
-5 polar_point
point(1+2i)
point(1,2)
point(1,2,3)
point([1,2,3])
 B:=point(1-i)
 B:=point(1,-1)
 B:=point(1,0,0)
 B:=point([1,0,0])

# efface
1 Efface l'écran de la tortue ou recule de n pas en effaçant.
2 Erases the turtle screen or the turtle takes n steps back and erases.
3 Borra la pantalla de la tortuga o vuelve por atrás de n pasos borrando.
4 Σβήνει την οθόνη της χελώνας ή η χελώνα κάνει n βήματα πίσω σβήνωντας.
0 NULL or Real(n)
-1 initialise
efface()

# si alors sinon fsi
1 Instruction conditionnelle : (si...alors...sinon...fsi).
2 Conditional instruction : (si...alors...sinon...fsi).
3 Instrucción condicional : (si...alors...sinon...fsi).
4 Εντολή υπό συνθήκη : (si...alors...sinon...fsi).
0 
-1 if
 si alors sinon fsi
 n:=1; si n>0 alors triangle_plein(20*n); sinon disque(20*n);fsi;
 n:=-1; si n>0 alors triangle_plein(20*n); sinon disque(20*n);fsi;
 si x>0 alors x:=x+1; print("x est strictement plus grand que 1");fsi;
 si x>0 alors x:=x+1; print("x est strictement plus grand que 1"); sinon x:=x-1;print("x est plus petit ou égal à -1");fsi;

# pour
1 Boucle pour (pour...de ...jusque... [pas...] faire...fpour;).
2 Loop pour (pour...de ...jusque... [pas...] faire...fpour;).
3 Bucle pour (pour...de ...jusque... [pas...] faire...fpour;).
4 Βρόχος (Επανάληψη) (pour...de ...jusque... [pas...] faire...fpour;).
0 
-1 for
-2 de
-3 jusque
-4 pas
 pour de jusque faire fpour;
 S:=0;pour n de 1 jusque 4 faire S:=S+n;fpour;
 S:=0;for n from 1 to 4 do S:=S+n;end;
 pour n de 1 jusque 4 faire disque(10*n);saute(10*n);fpour;
 pour n de 4 jusque 1 pas -1 faire disque(10*n);saute(10*n);fpour;
 S:=0;pour n de 4 jusque 1 pas -1 faire S:=S+n;fpour;

# de from
1 Utilisé dans une boucle pour (pour...de ...jusque... [pas...] faire...fpour;).
2 Used in a loop for (for...from ...to... [step...] do...od;).
3 Utilizado en una bucle for (for...from ...to...[step...] do...od;).
4 Βρόχος (Επανάληψη) (pour...de ...jusque... [pas...] faire...fpour;).
8 属于 "for...from...to...do...end" 循环结构的一部分。
0 
-1 for
-2 pour
-3 jusque
-4 to
 pour de jusque [pas] faire fpour;
 S:=0;pour n de 1jusque 4 faire S:=S+n;fpour;
 S:=0;for n from 1 to 4 do S:=S+n;end;
 S:=0;pour n de 4 jusque 1 pas -1 faire S:=S+n;fpour ;

# jusque to
1 Utilisé dans une boucle pour (pour...de ...jusque... [pas...] faire...fpour;).
2 Used in a loop for (for...from ...to... [step...] do...od;).
3 Utilizado en una bucle pour o for (for...from ...to...[step...] do...od;).
4 Βρόχος (Επανάληψη) (pour...de ...jusque... [pas...] faire...fpour;).
8 属于 "for...from...to...do...end" 循环结构的一部分。
0 
-1 for
-2 pour
-3 de
-4 from
 pour de jusque [pas] faire fpour;
 S:=0;pour n de 1 jusque 4 faire S:=S+n;fpour;
 S:=0;for n from 1 to 4 do S:=S+n;end;
 S:=0;pour n de 4 jusque 1 pas -1 faire S:=S+n;fpour;

# tantque
1 Boucle tantque (tantque...faire...ftantque;).
2 Loop tantque (tantque...faire...ftantque;).
3 Bucle tantque (tantque...faire...ftantque;).
4 Βρόχος (Επανάληψη) tantque (tantque...faire...ftantque;).
0 
-1 while
-2 pour
 tantque faire ftantque
 n:=1;tantque n<5 faire triangle_plein(10*n);saute(10*n);n:=n+1;ftantque
 n:=4;tantque n>0 faire triangle_plein(10*n);saute(10*n);n:=n-1;ftantque
 pgcd(a,b):={local r;tantque (b!=0) faire r:=irem(a,b);a:=b;b:=r;ftantque;return a};
 quoreste(a,b):={local q:=0;tantque (a>=b) faire a:=a-b;q:=q+1;ftantque; return q,a};

# do faire
1 Mot clé utilisé dans une boucle.
2 Key word used in a loop.
3 Palabra clave utilizada en un bucle.
4 Λέξη κλειδί που χρησιμοποιείται στον βρόχο (επανάληψη) pour ή tantque.
0 
-1 tantque
-2 pour
-3 repeat
 faire ffaire
 n:=1;do n:=n+1; if (n>15) break; n:=2*n;od;
 n:=1;tantque n<5 faire triangle_plein(10*n);saute(10*n);n:=n+1;ftantque
 pour n de 1 jusque 4 faire triangle_plein(10*n);saute(10*n);fpour

# return
1 Instruction qui fait sortir d'une fonction en renvoyant sa valeur.
2 Instruction that interrupts a function and returns its value.
3 Instrucción que interrumpe una función y devuelve su valor.
4 Εντολή για την έξοδο από μια συνάρτηση επιστρέφοντας την τιμή της.
0 Expr
-1 break
 zeroinl(l):={local k; for (k:=0;k<size(l);k++){if (l[k]==0) return(1);} return(0);}
 zerodansl(l):={local k; pour k de 0 jusque size(l)-1 faire si l[k]==0 alors return(1);fsi; fpour; return(0);}

# dessine_tortue
1 Fait le dessin du triangle rempli (ou non si n=1) représentant la tortue.
2 Draws the full (or not full if n=1) triangle representing the turtle.
3 Traza el triángulo relleno (o no si n=1) representando la tortuga.
4 Σχεδιάζει ένα γεμισμένο (ή όχι αν n=1) τρίγωνο που παριστάνει τη χελώνα.
0 [Intg(n)]
-1 crayon
dessine_tortue()
dessine_tortue(0)
dessine_tortue(1)

# avance forward
1 La tortue avance de n pas (par défaut n=10).
2 The turtle takes n steps forward (by default n=10).
3 La tortuga avanza de n pasos (por defecto n=10).
4 Η χελώνα κάνει n βήματα εμπρός (προεπιλογή n=10).
0 NULL or Real(n)
-1 recule
-2 saute
 avance 30
avance(30)


# recule backward
1 La tortue recule de n pas (par défaut n=10).
2 The turtle takes n steps back (by default n=10).
3 La tortuga vuelve por atrás de n pasos (por defecto n=10).
4 Η χελώνα κάνει n βήματα πίσω (προεπιλογή n=10).
0 NULL or Real(n)
-1 avance
-2 saute
 recule 30
recule(30)

# saute
1 La tortue saute (avance sans laisser de traces) de n pas (par défaut n=10).
2 The turtle takes n steps forward without traces (by default n=10).
3 La tortuga salta (avanza sin dejar marcas) de n pasos (por defecto n=10).
4 Η χελώνα κάνει άλμα n βημάτων (κινείται εμπρός χωρίς να αφήνει ίχνη) (προεπιλογή n=10).
0 NULL or Real(n)
-1 avance
-2 recule
 saute 30
saute(30)

# pas_de_cote
1 La tortue fait n pas de coté à gauche (-n pas à droite si négatif) sans laisser de traces (par défaut n=10).
2 The turtle does n side-steps on the left (-n steps on the right if n negative) without trace (by default n=10).
3 La tortuga hace n pasos de lado izquierdo (-n pasos a la derecha si n negativo) sin dejar marcas (por defecto n=10).
4 Η χελώνα κάνει n πλάγια βήματα προς τα αριστερά χωρίς να αφήνει ίχνη (προεπιλογή n=10).
0 NULL or Real(n)
-1 saute
-2 tourne_droite
-3 tourne_gauche
 pas_de_cote 30
pas_de_cote(30)

# tourne_droite
1 La tortue tourne à droite de n degrés (par défaut n=90).
2 The turtle turns right of n degrees (by default n=90).
3 La tortuga gira a la derecha de n grados (por defecto n=90).
4 Η χελώνα στρέφεται δεξιά κάτα n βαθμούς (προεπιλογή n=90).
0 NULL or Real(n)
-1 tourne_gauche
-2 pas_de_cote
 tourne_droite 60
tourne_droite(60)

# tourne_gauche
1 La tortue tourne à gauche de n degrés (par défaut n=90).
2 The turtle turns left of n degrees (by defaults n=90).
3 La tortuga gira a la izquierda de n grados (por defecto n=90).
4 Η χελώνα στρέφεται αριστερά κάτα n βαθμούς (προεπιλογή n=90).
0 NULL or Real(n)
-1 tourne_droite
 tourne_gauche 60
tourne_gauche(60)

# leve_crayon penup
1 Lève le crayon pour que la tortue bouge sans laisser de traces.
2 Puts the pencil up so that the turtle moves without traces.
3 Levanta el lápiz para que la tortuga mueva sin dejar marcas.
4 Σηκώνει το μολύβι ώστε η χελώνα να κινείται χωρίς να αφήνει ίχνη.
0 NULL
-1 baisse_crayon
-2 crayon
leve_crayon()

# baisse_crayon pendown
1 Baisse le crayon pour que la tortue bouge en laissant des traces.
2 Puts the pencil down so that the turtle move with traces.
3 Baja el lápiz para que la tortuga mueva dejando marcas.
4 Κατεβάζει το μολύβι ώστε η χελώνα να κινείται και να αφήνει ίχνη.
0 NULL
-1 leve_crayon
-2 crayon
baisse_crayon()

# crayon pencolor
1 Change la couleur du crayon (sans paramètre, renvoie la couleur courante).
2 Changes the color of the pencil (without parameter,returns the current color).
3 Cambia el color del lápiz (sin parámetros, devuelve el color actual).
4 Αλλάζει το χρώμα του μολυβιού (χωρίς παραμέτρους επιστρέφει το τρέχον χρώμα).
0 Color
-1 leve_crayon
-2 baisse_crayon
 crayon vert
crayon(rouge)
crayon(5)
crayon(gomme)

# position
1 Retourne la position de la tortue en pixels ou place la tortue selon l'argument sans changer son cap.
2 Returns the turtle position in pixels or puts the turtle at the position given by the argument with the same cap.
3 Devuelve la posición de la tortuga en pixeles o pone la tortuga según el argumento sin cambiar de dirección.
4 Επιστρέφει τη θέση της χελώνας σε pixels ή θέτει η χελώνα στη θέση που δίνεται από το όρισμα χωρίς να αλλάξει την φορά από το καβούκι της.
0 NULL or LstCoord
-1 cap
-2 initialise
position()
position(50,70)
position([50,70])

# cap heading
1 Retourne le cap de la tortue en degrés ou tourne la tortue selon l'argument.
2 Returns the turtle cap in degrees or turns the turtle with the cap given by the argument.
3 Devuelve la dirección de la tortuga en grados o gira la tortuga según el argumento.
4 Επιστρέφει την φορά (ή πορεία του καβουκιού) της χελώνας σε μοίρες ή στρέφει τη χελώνα με βάση το όρισμα που δίνεται.
0 NULL or Real
-1 position
-2 initialise
 cap
cap()
cap 90

# vers
1 Dirige la tortue en direction du point donné en argument.
2 Puts the turtle in the direction of the point given by the argument.
3 Pone la tortuga en dirección del punto dado en argumento.
4 Στρέφει τη χελώνα προς την κατεύθυνση του σημείου που δίνεται ως όρισμα.
0 Real,Real
-1 position
-2 initialise
vers(0,0)
vers(150,200)
vers([150,200])

# rond
1 Dessine un cercle (resp un arc) de rayon r (resp et d'angle (0,a) ou (a,b)), tangent à la position de la tortue.
2 Draws a circle (resp a arc) with radius r (resp and of angle (0,a) or (a,b)), tangent at the turtle position.
3 Traza una circunferencia (resp un arco) de radio r (resp y de ángulo (0,a) o (a,b)), tangente a la posición de la tortuga.
4 Σχεδιάζει ένα κύκλο (αντίστοιχα ένα τόξο) με ακτίνα r (αντίστοιχα και με γωνία (0,a) ή (a,b)), εφαπτόμενο στη θέση της χελώνας.
0 Real(r),[Real(a)],[Real(b)]
-1 disque
 rond 30
rond(40)
rond(40,90)
rond(40,10,100)

# disque
1 Dessine un disque de rayon r (resp un secteur d'angle (0,a) ou (a,b)), tangent à la position de la tortue.
2 Draws a disk with radius r (resp a sector of angle (0,a) or (a,b)), tangent at the turtle position.
3 Traza un disco (círculo) de radio r (resp un sector de ángulo (0,a) o (a,b)), tangente a la posición de la tortuga.
4 Σχεδιάζει ένα δίσκο με ακτίνα r (αντίστοιχα ένα τομέα με γωνία γωνία (0,a) ή (a,b)), εφαπτόμενο στη θέση της χελώνας.
0 Real(r),[Real(a)],[Real(b)]
-1 rond
 disque 30
disque(40)
disque(40,90)
disque(40,10,100)

# disque_centre
1 Dessine un disque de rayon r (resp un secteur d'angle (0,a) ou (a,b)) de centre la position de la tortue.
2 Draws a disk with radius r (resp a sector of angle (0,a) or (a,b)) with center the turtle position.
3 Traza un disco (círculo) de radio r (resp un sector de ángulo (0,a) o (a,b)) de centro la posición de la tortuga.
4 Σχεδιάζει ένα δίσκο με ακτίνα r (αντίστοιχα ένα τομέα με γωνία (0,a) ή (a,b)), με κέντρο τη θέση της χελώνας.
0 Real(r),[Real(a)],[Real(b)]
-1 rond
 disque_centre 30
disque_centre(40)
disque_centre(40,90)
disque_centre(40,10,100)

# rectangle_plein
1 Dessine un rectangle (resp un carré) plein direct de cotés a,b (resp a) à partir de la position de la tortue et sur la gauche (par défaut b=a).
2 Draws a full direct rectangle (resp square) with sides a,b (resp a) from the turtle position and on the left (by default b=a).
3 Traza un rectángulo (resp un cuadrado) lleno directo de lados a,b (resp a) a partir de la posición de la tortuga y por la izquierda.
4 Σχεδιάζει ένα γεμισμένο τετράπλευρο (αντίστοιχα τετράγωνο) με πλευρές a,b (αντίστοιχα a) από την θέση της χελώνας και προς τα αριστερά (προεπιλογή b=a).
8 矩形平面。
0 Real(a),[Real(b)]
-1 triangle_plein
 rectangle_plein 20
rectangle_plein(20)
rectangle_plein(20,40)

# triangle_plein
1 Dessine un triangle plein direct de cotés a,b et d'angle t, à partir de la position de la tortue (par défaut t=90 ou (b=a et t=60)).
2 Draws a full direct triangle with sides a,b and with angle t, from the turtle position (by default t=90 or (b=a and t=60)).
3 Traza un triángulo lleno directo de lados a,b y de ángulo t, a partir de la posición de la tortuga (por defecto t=90 o (b=a y t=60)).
4 Σχεδιάζει ένα γεμισμένο τρίγωνο με πλευρές a,b και γωνία t, από την θέση της χελώνας (προεπιλογή t=90 ή (b=a and t=60)).
0 Real(a),[Real(b)],[Real(t)]
-1 rectangle_plein
 triangle_plein 30
triangle_plein(30)
triangle_plein(30,40)
triangle_plein(30,40,60)

# polygone_rempli
1 L'argument est un entier <-1 qui indique le nombre de positions précédentes de la tortue qui forment un polygone et créé ce polygone rempli.
2 The argument is an integer <-1 which gives the number of previous turtle position drawing a polygon and created this full polygon.
3 El argumento es un entero <-1 que indica la cantidad de posiciones previas de la tortuga que forman un polígono y genera este polígono lleno.
4 Το όρισμα είναι ένας ακέραιος <-1, που δείχνει τον αριθμό των προηγούμενων θέσεων της χελώνας οι οποίες σχηματίζουν ένα πολύγωνο και δημιουργεί το πολύγωνο αυτό γεμισμένο.
0 Intg(n)
-1 
 repete(4,avance 40,tourne_droite);polygone_rempli -8
 repete(3,avance 40,tourne_droite 120);polygone_rempli -6
 repete(3,avance 40,avance 40,tourne_droite 120);polygone_rempli -9

# repete
1 Instruction permettant de faire k fois les mêmes commandes.
2 Instruction doing k times the same commands.
3 Instrucción permitiendo de repetir k veces los mismos comandos.
4 Εντολή η οποία επιτρέπει την εκτέλεση των ίδιων εντολών k φορές.
0 Intg,SeqCmds
-1 polygone_rempli
 repete 3,avance 40,tourne_droite 120
 repete 3,avance(30),tourne_droite(120)
 repete 4,rectangle_plein(20,40),tourne_droite
repete(3,avance 20,tourne_droite 120)
repete(4,rectangle_plein(20,40),tourne_droite)

# debut_enregistrement
1 Marque le début de l'enregistrement des commandes composant le dessin de nom donné en argument.
2 Marks the beginning of the recording of the commands making up the drawing whose name is the argument.
3 Marca el inicio de la grabación de comandos componiendo el dibujo de nombre dado en argumento.
4 Σημειώνει την αρχή της καταγραφής των εντολών που συνιστούν το σχεδιάγραμμα του οποίου το όνομα είναι το όρισμα.
0 Var(nom_du_dessin)
-1 fin_enregistrement
debut_enregistrement(maison)
debut_enregistrement(arbre)

# fin_enregistrement
1 Marque la fin de l'enregistrement des commandes et sauve ces commandes dans le fichier de nom donné en argument.
2 Marks the end of the recording of the commands and save these commands in the file whose name is the argument.
3 Marca el fin de la grabación de comandos y graba estos comandos en un archivo con nombre dado en argumento.
4 Σημειώνει το τέλος της καταγραφής των εντολών και αποθηκεύει τις εντολές αυτές σε ένα αρχείο του οποίου το όνομα είναι το όρισμα.
0 Str(nom_de_fichier)
-1 debut_enregistrement
fin_enregistrement("maison.tor")
fin_enregistrement("arbre.tor")

# cache_tortue
1 Cache la tortue.
2 Hides the turtle.
3 Esconde la tortuga.
4 Αποκρύπτει τη χελώνα.
0 NULL
-1 montre_tortue
cache_tortue()

# montre_tortue
1 Montre la tortue.
2 Shows the turtle.
3 Muestra la tortuga.
4 Εμφανίζει τη χελώνα.
0 NULL
-1 cache_tortue
montre_tortue()

# envelope
1 Renvoie l'enveloppe des courbes d'équation Xpr=0, lorsque t varie.
2 Returns the envelope of the curves with equation Xpr=0, when t move.
3 Devuelve la envoltura de las curvas de ecuación Xpr=0, cuando t varia.
4 Επιστρέφει την περιβάλλουσα των καμπύλων με εξίσωση Xpr=0, καθώς το t μεταβάλλεται.
0 Expr(Xpr),Var(t)||[x,y,t]
-1 tangent
-2 locus
envelope(y+x*tan(t)-2*sin(t),t)
envelope(v+u*tan(t)-3*sin(t),[u,v,t])

# powerpc
1 Renvoie le nombre réel d^2-R^2 (d=distance du point au centre, R=rayon).
2 Returns the real number d^2-R^2 (d=distance between point and center, R=radius) .
3 Devuelve lo número real d^2-R^2 (d=distancia entre punto y centro, R=radio).
4 Επιστρέφει τον πραγματικό αριθμό d^2-R^2 (d=απόσταση σημείου από το κέντρο, R=ακτίνα).
0 Cercle,Pnt or Cplx
-1 radical_axis
powerpc(circle(0,1+i),3+i)
powerpc(circle(0,point(1+i)),3+i)

# cross_ratio
1 Renvoie le nombre complexe égal à ((c-a)/(c-b))/((d-a)/(d-b)).
2 Returns the complex number equal to ((c-a)/(c-b))/((d-a)/(d-b)).
3 Devuelve el número complejo igual a ((c-a)/(c-b))/((d-a)/(d-b)).
4 Επιστρέφει το μιγαδικό αριθμό ίσο με ((c-a)/(c-b))/((d-a)/(d-b)).
0 Pnt or Cplx(a),Pnt or Cplx(b),Pnt or Cplx(c),Pnt or Cplx(d)
-1 harmonic_conjugate
-2 is_conjugate
cross_ratio(i,2+i,3/2+i,3+i)
cross_ratio(0,1+i,1,i)
cross_ratio(0,1,2,3)

# division_point
1 Renvoie le point M d'affixe z tel que (z-a)=k*(z-b) (MA=k*MB).
2 Returns the point M such that (z-a)=k*(z-b) and z=affix of M (MA=k*MB).
3 Devuelve el punto M tal que (z-a)=k*(z-b) y z=afijo de M (MA=k*MB).
4 Επιστρέφει το σημείο Μ τέτοιο ώστε (z-a)=k*(z-b) και z=προσθήκη του M (MA=k*MB).
0 Pnt or Cplx(a),Pnt or Cplx(b),Cplx(k)
-1 harmonic_conjugate
-2 is_conjugate
division_point(i,2+i,3+i)
division_point(i,2+i,3)

# radical_axis
1 Renvoie la droite des points de même puissance par rapport aux 2 cercles.
2 Returns the line of points with same powerpc with respect to the 2 circles.
3 Devuelve la recta de puntos con misma potencia respecto a las 2 circunferencias.
4 Επιστρέφει την ευθεία των σημείων με ίδια δύναμη (powerpc) αναφορικά με τους 2 κύκλους.
0 Crcle,Crcle
-1 powerpc
radical_axis(circle(0,1+i),circle(1,1+i))
radical_axis(circle(0,point(1+i)),circle(1,point(1+i)))

# pole
1 Renvoie le point ayant la droite comme polaire par rapport au cercle.
2 Returns the point having the line as polar with respect to the circle .
3 Devuelve el punto A teniendo la recta como polar con respecto a la circunferencia C.
4 Επιστρέφει το σημείο που έχει την ευθεία ως πολική αναφορικά με έναν κύκλο.
0 Crcle,Line
-1 polar
-2 is_conjugate
pole(circle(0,1),line(i,1))
pole(circle(0,1),line((1+i),2))

# polar
1 Renvoie la droite des points conjugués de A par rapport au cercle.
2 Returns the line of the conjugated points of A with respect to the circle.
3 Devuelve la recta de puntos conjugados de A con respecto a la circunferencia.
4 Επιστρέφει την ευθεία των συνεζευγμένων σημείων του Α ως προς τον κύκλο.
0 Crcle,Pnt or Cplxe(A)
-1 pole
-2 is_conjugate
polar(circle(0,1),point(1+i)/2)
polar(circle(0,1),point(1+i))

# reciprocation
1 Renvoie la liste en remplaçant un point (resp une droite) par sa polaire (resp son pole), par rapport au cercle C.
2 Returns the list where a point (resp a line) are replaced with its polar (resp pole), with respect to the circle C.
3 Devuelve la lista reemplazando un punto (resp una recta) por su polar (resp polo), con respecto a la circunferencia C.
4 Επιστρέφει τη λίστα όπου ένα σημείο (αντίστοιχα μια ευθεία) αντικαθίσταται από την πολική (αντίστοιχα τον πόλο) ως προς τον κύκλο C.
8 互换。
0 Crcle,Lst(Pnt,Line)
-1 pole
-2 polar
reciprocation(circle(0,1),[point((1+i)/2), line(1,-1+i)])
reciprocation(circle(0,1),[line(1+i,2),point(1+i*2)])

# harmonic_conjugate
1 Renvoie le conjugué harmonique C par rapport à A et B des 3 points alignés ou des 3 droites parallèles ou concourantes, ou la polaire d'un point par rapport à 2 droites.
2 Returns the harmonic conjugate C  toward A and B of 3 points or of 3 parallel or concurrent lines or the line of conjugates of a point in respect to 2 lines.
3 Devuelve el conjugado armónico C con respecto A y B de 3 puntos alineados o de 3 rectas paralelas o concurrentes , o la polar de un punto con respecto a 2 rectas.
4 Επιστρέφει την αρμονική συζυγή 3 ευθυγραμμισμένων σημείων ή 3 παράλληλων ή συγκλινουσών ευθειών ή την πολική ενός σημείου αναφορικά με 2 ευθείες.
0 Line or Pnt(A),Line or Pnt(B),Line or Pnt(C)
-1 is_harmonic
-2 harmonic_division
harmonic_conjugate(0,2,3/2)
harmonic_conjugate(0,1+i,2+2*i)
harmonic_conjugate(line(0,1+i),line(0,3+i),line(0,i))
harmonic_conjugate(line(0,1+i),line(0,3+i),point(3/2+i))

# harmonic_division
1 Renvoie les 4 points (resp droites) et affecte le dernier argument, pour que les 4 points (resp droites) forment une division harmonique.
2 Returns the 4 points (resp lines) and affects the last argument, such as the 4 points (resp lines) are in a harmonic division.
3 Devuelve 4 puntos (resp rectas) y guarda en el último argumento, tal que los 4 puntos (resp rectas) formen una división armónica.
4 Επιστρέφει τα 4 σημεία (αντίστοιχα ευθείες) και επιδρά στο τελευταίο όρισμα, με τέτοιο τρόπο ώστε τα 4 σημεία (αντίστοιχα ευθείες) σχηματίζουν αρμονική διαίρεση.
0 Pnt or Line,Pnt or Line,Pnt or Line,Var
-1 harmonic_conjugate
-2 is_harmonic
harmonic_division(0,2,3/2,D)
harmonic_division(0,1+i,2+2*i,D)
harmonic_division(line(i,0),line(i,1+i),line(i,3+2*i),D)
harmonic_division(line(0,1+i),line(0,3+i),line(0,i),D)

# is_conjugate
1 Renvoie 1 si les 3 (resp 4) arguments sont un conjugués par rapport à un cercle (resp 2 droites) et 0 sinon.
2 Returns 1 if the 3 (resp 4) arguments are conjugated toward a circle (resp 2 lines) and 0 otherwise.
3 Devuelve 1 si los 3 (resp 4) argumentos son conjugados con respecto a la circunferencia (resp 2 rectas) y 0 si no.
4 Επιστρέφει 1 αν τα 3 (αντίστοιχα 4) ορίσματα είναι συνεζευγμένα ως προς ένα κύκλο (αντίστοιχα 2 ευθείες) και 0 διαφορετικά.
0 Crcle||Line,Pnt||Line,Pnt||Line,[Pnt||Line]
-1 harmonic_conjugate
-2 pole
-3 polar
is_conjugate(circle(0,1+i),point(1-i),point(3+i))
is_conjugate(circle(0,1),point((1+i)/2),line(1+i,2))
is_conjugate(circle(0,1),line(1+i,2),point((1+i)/2))
is_conjugate(circle(0,1),line(1+i,2),line((1+i)/2,0))
is_conjugate(point(1+i),point(3+i),point(i),point(3/2+i))
is_conjugate(line(0,1+i),line(2,3+i),line(3,4+i),line(3/2,5/2+i))
is_conjugate(line(0,1+i),line(0,3+i),line(0,i),line(0,3/2+i))
is_conjugate(line(0,1+i),line(0,3+i),line(0,i),point(3/2+i))
is_conjugate(line(0,1+i),line(0,3+i),point(3/2+i),line(0,i))
is_conjugate(line(0,1+i),line(0,3+i),point(i),point(3/2+i))

# is_harmonic
1 Renvoie 1 si les 4 points forment un division harmonique et 0 sinon.
2 Returns 1 if the 4 points are in a harmonic division and 0 otherwise.
3 Devuelve 1 si los 4 puntos forman una división armónica y 0 si no.
4 Επιστρέφει 1 αν τα 4 σημεία βρίσκονται σε αρμονική διαίρεση και 0 διαφορετικά.
0 Pnt or Cplx,Pnt or Cplx,Pnt or Cplx,Pnt or Cplx
-1 is_conjugate
is_harmonic(0,2,3/2,3)
is_harmonic(0,1+i,1,i)

# is_harmonic_circle_bundle
1 Renvoie 1 si les cercles forment un faisceau, 2 si ils sont concentriques, 3 si ils sont confondus et 0 sinon.
2 Returns 1 if the circles built a beam, 2 if they have the same center, 3 if they are the same and 0 otherwise.
3 Devuelve 1 si las circunferencias forman un haz, 2 si son concéntricos, 3 si son iguales y 0 si no.
4 Επιστρέφει 1 αν οι κύκλοι ορίζουν μια δέσμη, 2, εφόσον έχουν το ίδιο κέντρο, 3 αν είναι οι ίδιοι και 0 διαφορετικά.
0 Lst(Crcle)
-1 is_harmonic_line_bundle
is_harmonic_circle_bundle([circle(0,i),circle(4,i),circle(0,point(1/2))])
is_harmonic_circle_bundle([circle(0,1+i),circle(2,1+i),circle(1+i,point(1-i))])

# is_harmonic_line_bundle
1 Renvoie 1 si les droites ont un point commun, 2 si elles sont parallèles, 3 si elles sont confondues et 0 sinon.
2 Returns 1 if the lines have a common point, 2 if they are parallels, 3 if they are the same and 0 otherwise.
3 Devuelve 1 si las rectas tienen un punto en común, 2 si son paralelas, 3 si son iguales y 0 si no.
4 Επιστρέφει 1 αν οι ευθείες έχουν ένα κοινό σημείο, 2 αν είναι παράλληλες, 3 αν είναι οι ίδιες και 0 διαφορετικά.
0 Lst(Line)
-1 is_harmonic_circle_bundle
is_harmonic_line_bundle([line(0,1+i),line(0,2+i),line(0,1),line(0,3+i)])
is_harmonic_line_bundle([line(0,1+i),line(2,3+i),line(3,4+i),line(-1,i)])

# is_orthogonal
1 Renvoie 1 si les 2 cercles sont orthogonaux (tangentes orthogonales en un point d'intersection) ou si les 2 droites sont orthogonales et 0 sinon.
2 Returns 1 if the 2 circles are orthogonal (orthogonal tangents at a point of intersection) or if the 2 lines are orthogonal and 0 otherwise.
3 Devuelve 1 si las 2 circunferencias son perpendiculares (tangentes ortogonales en un punto de intersección) o si las dos rectas son ortogonales y 0 si no.
4 Επιστρέφει 1 αν οι 2 κύκλοι είναι ορθογώνιοι ή αν 2 ευθείες είναι ορθογώνιες και 0 διαφορετικά.
0 Line||Crcle,Line||Crcle
-1 is_parallel
-2 is_perpendicular
is_orthogonal(line(0,1+i),line(1,i))
is_orthogonal(circle(0,1+i),circle(2,1+i))
is_orthogonal(line([2,3,-2],[-1,-1,-1]),line([1,0,0],[1,2,8]))

# is_isosceles
1 Renvoie 1, 2 ou 3 si les 3 points (ou l'objet) forment un triangle isocèle de sommet 1, 2 ou 3, renvoie 4 si les 3 points (ou l'objet) forment un triangle équilatéral et 0 sinon.
2 Returns 1, 2 or 3 if the 3 points (or the object) built an isosceles triangle with vertices 1, 2, or 3, returns 4 if the 3 points (or the object) built an equilateral triangle and 0 otherwise.
3 Devuelve 1,2 o 3 si los 3 puntos (o el objeto) forman un triángulo isósceles con vértices 1, 2, o 3, devuelve 4 si los 3 puntos (o el objeto) forman un triángulo equilátero y 0 si no.
4 Επιστρέφει 1,2 ή 3 αν τα 3 σημεία (ή το αντικείμενο) σχηματίζουν ένα ισοσκελές τρίγωνο με κορυφές 1,2,3, επιστρέφει 4 εάν τα 3 σημεία (ή το αντικείμενο), σχηματίζουν ένα ισόπλευρο τρίγωνο και 0 αλλιώς.
0 Pnt or Cplx,Pnt or Cplx,Pnt or Cplx
-1 is_equilateral
-2 is_right_triangle
is_isosceles(0,i,1+i)
is_isosceles(point(0),point(1+i),point(2,2))
is_isosceles(triangle(0,i,1+i))

# is_equilateral
1 Renvoie 1 si les 3 points (ou l'objet) forment un triangle équilatéral et 0 sinon.
2 Returns 1 if the 3 points (or the object) built an equilateral triangle and 0 otherwise.
3 Devuelve 1 si los 3 puntos (o el objeto) forman un triángulo equilátero y 0 si no.
4 Επιστρέφει 1 αν τα 3 σημεία (ή το αντικείμενο) σχηματίζουν ένα ισόπλευρο τρίγωνο και 0 διαφορετικά.
0 Pnt||Cplx,Pnt||Cplx,Pnt||Cplx
-1 is_isosceles
-2 is_rectangle
is_equilateral(0,2,1+i*sqrt(3))
is_equilateral(point(0),point(1+i),point(2,2))
is_equilateral(triangle(0,2,1+i*sqrt(3)))

# is_rectangle
1 Renvoie 1, 2 ou 3 si les 3 points (ou l'objet) forment un triangle rectangle de sommet 1, 2 ou 3 et 0 sinon [ou 1 si les 4 points (ou l'objet) forment un rectangle, 2 si les 4 points (ou l'objet) forment un carré et 0 sinon].
2 Returns 1, 2 or 3 if the 3 points (or the object) built an rectangular triangle with vertex 1, 2 or 3 and 0 otherwise [or 1 if the 4 points (or the object) built a rectangle, 2 if the 4 points (or the object) built a square and 0 otherwise].
3 Devuelve 1, 2 o 3 si los 3 puntos (o el objeto) forman un triángulo rectángulo con vértices 1, 2 o 3 y 0 si no [o 1 si los 4 puntos (o el objeto) forman un rectángulo, 2 si los 4 puntos (o el objeto) forman un cuadrado y 0 si no].
4 Επιστρέφει 1,2 ή 3, εάν τα 3 σημεία (ή το αντικείμενο), σχηματίζουν ένα ορθογώνιο τρίγωνο με κορυφές 1,2,3 και 0 αλλιώς [ή 1 αν τα 4 σημεία (ή το αντικείμενο) σχηματίζουν ένα ορθογώνιο, 2 αν τα 4 σημεία (ή το αντικείμενο), σχηματίζουν ένα τετράγωνο και 0 αλλιώς].
0 Pnt||Cplx,Pnt||Cplx,Pnt||Cplx,[Pnt||Cplx]
-1 is_equilateral
-2 is_isosceles
-3 is_parallelogram
-4 is_rhombus
-5 is_square
is_rectangle(0,i,1+i)
is_rectangle(point(0),point(1+i),point(2,2))
is_rectangle(triangle(0,i,1+i))
is_rectangle(point(0),point(2,2),point(1,3),point(-1,1))
is_rectangle(rectangle(point(0),point(2,2),1/2))
is_rectangle(sommets(rectangle(point(0),point(2,2),1/2)))

# is_square
1 Renvoie 1 si les 4 points (ou l'objet) forment un carré et 0 sinon.
2 Returns 1 if the 4 points built a square and 0 otherwise.
3 Devuelve 1 si los 4 puntos (o el objeto) forman una cuadrado y 0 si no.
4 Επιστρέφει 1 αν τα 4 σημεία σχηματίζουν ένα τετράγωνο και 0 διαφορετικά.
0 Pnt,Pnt,Pnt,Pnt
-1 est_rectangle
-2 is_parallelogram
-3 is_rhombus
is_square(0,i,1+i,1)
is_square(1,-1,i,-i)
is_square(sommets(square(0,i,C,D)))

# is_parallelogram
1 Renvoie 1,2,3 ou 4 si les 4 points (ou l'objet) forment un parallélogramme, (2 pour un losange, 3 pour un rectangle et 4 pour un carré) et 0 sinon.
2 Returns 1,2,3 or 4 if the 4 points (or the object) built a parallelogram, (2 for a rhombus, 3 for a rectangle, 4 for a square) and 0 otherwise.
3 Devuelve 1,2,3 o 4 si los 4 puntos (o el objeto) forman una paralelogramo, (2 para un rombo, 3 para una rectángulo y 4 para un cuadrado) y 0 si no.
4 Επιστρέφει 1,2,3 ή 4, εάν τα 4 σημεία (ή το αντικείμενο), σχηματίζουν ένα παραλληλόγραμμο, (2 για ρόμβο, 3 για ορθογώνιο, 4 για τετράγωνο) και 0 διαφορετικά.
0 Pnt or Cplx,Pnt or Cplx,Pnt or Cplx,Pnt or Cplx
-1 est_rectangle
-2 is_square
-3 is_rhombus
is_parallelogram(0,i,1+i,1)
is_parallelogram(1,-1,i,-i)
is_parallelogram(sommets(parallelogram(1,-1,-i,C)))

# is_rhombus
1 Renvoie 1 ou 2 si les 4 points (ou l'objet) forment un losange (2 pour un carré) et 0 sinon.
2 Returns 1 or 2 if the 4 points (or the object) built a rhombus (2 for a square) and 0 otherwise.
3 Devuelve 1 o 2 si los 4 puntos (o el objeto) forman un rombo (2 para un cuadrado) y 0 si no.
4 Επιστρέφει 1 ή 2, αν τα 4 σημεία (ή το αντικείμενο) σχηματίζουν ρόμβο (2 για ένα τετράγωνο) και 0 διαφορετικά.
0 Pnt or Cplx,Pnt or Cplx,Pnt or Cplx,Pnt or Cplx
-1 est_rectangle
-2 is_parallelogram
-3 is_square
is_rhombus(0,i,1+i,1)
is_rhombus(1,-1,i,-i)
is_rhombus(sommets(rhombus(1,-1,pi/4,C,D)))

# coordinates
1 Renvoie la liste (resp matrice) de l'abscisse et de l'ordonnée du point ou du vecteur (resp des points ou des vecteurs).
2 Returns the list (resp matrix) of the abscissa and of the ordinate of a point or a vector (resp of points or vectors).
3 Devuelve la lista (resp matriz) de la abscisa y de la ordenada de un punto o de un vector.
4 Επιστρέφει τη λίστα (αντίστοιχα πίνακα) της τετμημένης και τεταγμένης του σημείου ή ενός διάνυσματος (αντίστοιχα σημείων ή διανυσμάτων).
0 Pnt or Cplx or Vect
-1 abscissa
-2 ordinate
-3 cote
-4 vecteur
coordinates(point(1+2*i))
coordinates(1+2*i)
coordinates(point(i),point(1+2*i))
coordinates(vecteur(point(i),point(1+2*i)))
coordinates(point(1+2*i)-point(i))
coordinates(-1-i)
coordinates(point(1,2,3))
coordinates(vecteur([1,2,3],[4,5,6]))

# false FALSE False
1 booléen valant faux ou 0.
2 boolean equal to false or 0.
3 Tipo de dato lógico (booleano) que vale falso o 0.
4 λογική τιμή ίση με ΛΑΘΟΣ ή 0.
0 
-1 true
 a:=false

# true TRUE True
1 booléen valant vrai ou 1.
2 boolean equal to true or 1.
3 Tipo de dato lógico (booleano) que vale verdadero o 1.
4 λογική τιμή ίση με ΣΩΣΤΟ ή 1.
0 
-1 false
 a:=true

# or || ou
1 opérateur booléen infixé (ou).
2 infixed boolean operator (or).
3 operador booleano infijo (o).
4 εντεθειμένος λογικός τελεστής (Η).
8 逻辑 OR。  如果 value1 或 如果 value2 为非零值，则返回 1，否则返回 0。
0 Expr, Expr
-1 and
-2 not
-3 xor
 (1==2) or (2>1)

# and && et
1 opérateur booléen infixé (et).
2 infixed boolean operator (and).
3 operador booleano infijo (y).
4 εντεθειμένος λογικός τελεστής (ΚΑΙ).
8 逻辑 AND。  比较 value1 和 value2。 如果都为非零值，则返回 1；否则返回 0。
0 Expr, Expr
-1 or
-2 not
-3 xor
 1==2 and 2>1
 1!=2 and 2>0

# end end_for fpour end_while ftantque end_if fi fsi od ffaire ffonction ffunction
1 Fin de bloc.
2 Bloc end.
3 Final de bloque.
4 Τέλος μπλοκ.
0 
-1 begin
-2 bloc
-3 {}
 if (2>1) begin print("ifactor(154)=",ifactor(154));ifactor(154);end;
 if (2>1) begin print("ifactor(154)=",ifactor(154));ifactor(154);fi;
 f:=function(a,b) local c;c:=a+b;c+gcd(a,b);end;f(28,21);
 f:=fonction(a,b) local c;c:=a+b;c+gcd(a,b);ffonction;
 fonction f(a,b) local c;c:=a+b;c+gcd(a,b);ffonction;

# bisection_solver brent_solver falsepos_solver newton_solver secant_solver steffenson_solver
1 Argument de fsolve indiquant la méthode pour résoudre numériquement une équation.
2 Argument for fsolve giving the method for solving an numerical equation.
3 Argumento para fsolve indicando el método para la resolución numérica de una ecuación.
4 Όρισμα για την εντολή fsolve που δίνει τη μέθοδο για την επίλυση μιας εξίσωσης (προσέγγιση της ρίζας).
0 Opt
-1 fsolve
 fsolve(cos(x)=x,x,0..1,bisection_solver)
 fsolve(cos(x)=x,x,0..1,brent_solver)
 fsolve(cos(x)=x,x,0..1,falsepos_solver)
 fsolve(cos(x)=x,x,0,newton_solver)
 fsolve(cos(x)=x,x,0,secant_solver)
 fsolve(cos(x)=x,x,0,steffenson_solver)

# dnewton_solver hybrid_solver hybrids_solver hybridj_solver hybridsj_solver newtonj_solver
1 Argument de fsolve indiquant la méthode pour résoudre numériquement un système d'équations.
2 Argument for fsolve giving the method for solving a system of numerical equations.
3 Argumento para fsolve indicando el método para la resolución numérica de un sistema de ecuaciones.
4 Όρισμα για την εντολή fsolve που δίνει τη μέθοδο για την επίλυση ενός συστήματος εξισώσεων.
0 Opt
-1 fsolve
 fsolve([x^2+y-2,x+y^2-2],[x,y],[2,2],dnewton_solver)
 fsolve([x^2+y-2,x+y^2-2],[x,y],[2,2],hybrid_solver)
 fsolve([x^2+y-2,x+y^2-2],[x,y],[2,2],hybrids_solver)
 fsolve([x^2+y-2,x+y^2-2],[x,y],[2,2],hybridj_solver)
 fsolve([x^2+y-2,x+y^2-2],[x,y],[2,2],hybridsj_solver)
 fsolve([x^2+y-2,x+y^2-2],[x,y],[2,2],newtonj_solver)

# _cm
1 centimètre.
2 Centimetre.
3 centímetro.
4 εκατοστόμετρα.
0 
 5_cm
 mksa(_cm)

# _mm
1 millimètre.
2 Millimetre.
3 milímetro.
4 χιλιοστόμετρα.
0 
 5_mm
 mksa(_mm)

# _km
1 kilomètre.
2 Kilometre.
3 kilómetro.
4 χιλιόμετρα.
0 
 5_km
 mksa(_km)

# _m^2
1 mètre carré.
2 Square metre.
3 metro cuadrado.
4 τετραγωνικά μέτρα.
0 
 5_m^2
 mksa(_m^2)

# _m^3
1 mètre cube.
2 Cubic metre.
3 metro cúbico.
4 κυβικά μέτρα.
0 
 5_m^3
 mksa(_m^3)

# _cm^2
1 centimètre carré.
2 Square centimetre.
3 centímetro cuadrado.
4 τετραγωνικά εκατοστά.
0 
 5_cm^2
 mksa(_cm^2)

# _cm^3
1 centimètre cube.
2 Cubic centimetre.
3 centímetro cúbico.
4 κυβικά εκατοστά.
0 
 5_cm^3
 mksa(_cm^3)

# _km^2
1 kilomètre carré.
2 Square kilometre.
3 kilómetro cuadrado.
4 τετραγωνικά χιλιόμετρα.
0 
 5_km^2
 mksa(_km^2)

# _yd^2
1 yard carré.
2 Square yard.
3 yard cuadrado.
4 τετραγωνικές γυάρδες.
0 
 5_yd^2
 mksa(_yd^2)

# _yd^3
1 yard cube.
2 Cubic yard.
3 yard cúbico.
4 κυβικές γυάρδες.
0 
 5_yd^3
 mksa(_yd^3)

# _ft^2
1 foot carré (pied carré).
2 Square foot.
3 foot cuadrado (pie cuadrado).
4 τετραγωνικά πόδια.
0 
 5_ft^2
 mksa(_ft^2)

# _ft^3
1 foot cube.
2 Cubic foot.
3 foot cúbico (pie cúbico).
4 κυβικά πόδια.
0 
 5_ft^3
 mksa(_ft^3)

# _in^2
1 inch carré (pouce carré).
2 Square inch.
3 inch cuadrado (pulgada cuadrada).
4 τετραγωνικές ίντσες.
0 
 5_in^2
 mksa(_in^2)

# _in^3
1 inch cube.
2 Cubic inch.
3 inch cúbico (plugada cúbica).
4 κυβικές ίντσες.
0 
 5_in^3
 mksa(_in^3)

# _mi^2
1 mile carré international.
2 Square international mile.
3 milla cuadrada internacional.
4 τετραγωνικά μίλια (διεθνή).
0 
 5_mi^2
 mksa(_mi^2)

# _miUS^2
1 US statue mile carré.
2 Square US statue mile.
3 milla estatuaria (EEUU) cuadrada.
4 τετραγωνικά μίλια (ΗΠΑ).
0 
 5_miUS^2
 mksa(_miUS^2)

# _ml
1 millilitre.
2 millilitre.
3 mililitro.
4 μιλιλίτρα.
0 
 5_ml
 mksa(_ml)

# _s
1 seconde.
2 second.
3 segundo.
4 
0 
-1 convert
-2 mksa
 5_mn
 mksa(_mn)

# _mn
1 minute.
2 Minute.
3 minuto.
4 λεπτά.
0 
-1 convert
-2 mksa
 5_mn
 mksa(_mn)

# _(m/s)
1 mètre par seconde.
2 metre per second.
3 metro por segundo.
4 μέτρα ανά δευτερόλεπτο.
0 
 5_(m/s)
 mksa(_(m/s))

# _(cm/s)
1 centimètre par seconde.
2 centimetre per second.
3 centimetro por segundo.
4 εκατοστόμετρα ανά δευτερόλεπτο.
0 
 5_(cm/s)
 mksa(_(cm/s))

# _(ft/s)
1 foot par seconde (pied par seconde).
2 foot per second.
3 foot por segundo (pie por segundo).
4 πόδια ανά δευτερόλεπτο.
0 
 5_(ft/s)
 mksa(_(ft/s))

# _(m/s^2)
1 mètre par seconde au carré.
2 metre per square second.
3 metro por segundo cuadrado.
4 μέτρα ανά τετραγωνικό δευτερόλεπτο.
0 
 5_(m/s^2)
 mksa(_(m/s^2))

# _Wh
1 wattheure.
2 Watt-hour.
3 vatio-hora.
4 Βατώρα.
0 
 5_Wh
 mksa(_Wh)

# _kWh
1 kilowattheure.
2 Kilowatt-hour.
3 kilovatio-hora.
4 Κιλοβατώρα.
0 
 5_kWh
 mksa(_kWh)

# _Kcal
1 kilocalorie.
2 Kilocalorie.
3 kilocaloría.
4 Χιλιοκαλορίς.
0 
 5_Kcal
 mksa(_Kcal)

# _MeV
1 mégaélectronvolt.
2 Megaelectronvolt.
3 megaelectronvoltio.
4 μεγαηλεκτρονιοβόλτ.
0 
 5_MeV
 mksa(_MeV)

# _ft*lb
1 foot par pound.
2 foot per pound.
3 foot por pound (pie por libra).
4 πόδια ανά λίβρα.
0 
 5_ft*lb
 mksa(_ft*lb)

# _tep
1 tonne d'équivalent pétrole.
2 Tonne of oil equivalent.
3 Tonelada equivalente de petróleo.
4 τόνος, ισοδύναμος για πετρέλαιο.
0 
 5_tep
 mksa(_tep)

# _lep
1 litre d'équivalent pétrole.
2 Liter of oil equivalent.
3 litro equivalente de petróleo.
4 λίτρο, ισοδύναμο για πετρέλαιο.
0 
 5_lep
 mksa(_lep)

# _bblep
1 baril d'équivalent pétrole.
2 Barrel of oil equivalent.
3 barril equivalente de petróleo.
4 βαρέλι, ισοδύναμο για πετρέλαιο.
0 
 5_bblep
 mksa(_bblep)

# _MW
1 mégawatt.
2 Megawatt.
3 megavatio.
4 μεγκαβάτ.
0 
 5_MW
 mksa(_MW)

# _degreeF
1 degré Fahrenheit.
2 Degree Fahrenheit.
3 grado Fahrenheit.
4 βαθμοί Fahrenheit.
0 
 5_degreeF
 mksa(_degreeF)

# _deg
1 degré (angle).
2 Degree (angle).
3 grado (ángulo).
4 μοίρες (για γωνίες).
0 
 5_deg
 mksa(_deg)

# _Rankine
1 degré Rankine.
2 Degree Rankine.
3 grado Rankine.
4 βαθμοί Rankine.
0 
 5_Rankine
 mksa(_Rankine)

# _MHz
1 mégahertz.
2 Megahertz.
3 megahercio.
4 μεγκαχέρτζ.
0 
 5_MHz
 mksa(_MHz)

# _tec
1 tonne d'équivalent charbon.
2 Tonne of coal equivalent.
3 tonelada de equivalente carbón.
4 τόνος, ισοδύναμος για κάρβουνο.
0 
 5_tec
 mksa(_tec)

# _tr
1 tour=2*pi _rad.
2 tour=2*pi _rad.
3 tour=2*pi _rad.
4 tour=2*pi _rad.
0 
 5_tr
 mksa(_tr)

# _tex
1 tex=10^-6 _(kg/m).
2 tex=10^-6 _(kg/m).
3 tex=10^-6 _(kg/m).
4 tex=10^-6 _(kg/m).
0 
 5_tex
 mksa(_tex)

# _(rad/s)
1 radian par seconde.
2 Radian per second.
3 radián por segundo.
4 ακτίνια ανά δευτερόλεπτο.
0 
 5_(rad/s)
 mksa(_(rad/s))

# _(tr/min)
1 tour par minute.
2 Revolutions per minute.
3 Revoluciones por minuto.
4 Tour ανά λεπτό.
0 
 5_(tr/min)
 mksa(_(tr/min))

# _(tr/s)
1 tour par seconde.
2 Revolutions per second.
3 Revoluciones por segundo.
4 Tour ανά δευτερόλεπτο.
0 
 5_(tr/s)
 mksa(_(tr/s))

# _Gal
1 gal=0.01_(m/s^2).
2 Gal=0.01_(m/s^2).
3 Gal=0.01_(m/s^2).
4 Gal=0.01_(m/s^2).
0 
 5_Gal
 mksa(_Gal)

# _(rad/s^2)
1 radian par seconde au carré.
2 Radian per square second.
3 radián por segundo cuadrado.
4 ακτίνια ανά τετραγωνικό δευτερόλεπτο.
0 
 5_(rad/s^2)
 mksa(_(rad/s^2))

# _NA_
1 Nombre d'Avogadro.
2 Avogadro's number.
3 Número de Avogrado.
4 Αριθμός Avogadro.
0 
 mksa(_NA_)

# _k_
1 Constante de Boltzmann.
2 Boltzmann constant.
3 Constante de Boltzmann.
4 Σταθερά Boltzmann.
0 
 mksa(_k_)

# _Vm_
1 Volume molaire.
2 Molar volume.
3 Volumen molar.
4 Γραμμομοριακός Όγκος.
0 
 mksa(_Vm_)

# _R_
1 Constante universelle des gaz.
2 Universal gas constant.
3 Constante universal de los gases.
4 Παγκόσμια σταθερά αερίων.
0 
 mksa(_R_)

# _StdT_
1 Température standard.
2 Standard temperature.
3 Temperatura estándar.
4 Κανονική Θερμοκρασία.
0 
 mksa(_StdT_)

# _StdP_
1 Pression standard.
2 Standard pressure.
3 Presión estándar.
4 Κανονική πίεση.
0 
 mksa(_StdP_)

# _sigma_
1 Constante de Stefan-Boltzmann.
2 Stefan-Boltzmann constant.
3 Constante de Stefan-Boltzmann.
4 Σταθερά Stefan-Boltzmann.
0 
 mksa(_sigma_)

# _c_
1 Vitesse de la lumière.
2 Speed of light in vacuum.
3 Velocidad de la luz en el vacío.
4 Ταχύτητα φωτός στο κενό.
0 
 mksa(_c_)

# _epsilon0_
1 Permittivité du vide
2 Permittivity of vacuum
3 Permitividad del vacío
4 Διηλεκτρική σταθερά
0 
 mksa(_epsilon0_)

# _mu0_
1 Perméabilité du vide
2 Permeability of vacuum
3 Permeabilidad del vacío
4 Διαπερατότητα κενού
0 
 mksa(_mu0_)

# _g_
1 Accélération de la gravité
2 Acceleration of gravity
3 Aceleración de la gravedad
4 Επιτάχυνση βαρύτητας
0 
 mksa(_g_)

# _G_
1 Constante gravitationnelle
2 Gravitational constant
3 Constante gravitacional
4 Σταθερά βαρύτητας
0 
 mksa(_G_)

# _h_
1 Constante de Planck
2 Planck's constant
3 Constante de Planck
4 Σταθερά Planck
0 
 mksa(_h_)

# _hbar_
1 Constante de Dirac
2 Dirac's constant
3 Constante de Dirac
4 Σταθερά Dirac
0 
 mksa(_hbar_)

# _qe_
1 Charge de l'électron
2 Electron charge
3 Carga del electrón
4 Φορτίο ηλεκτρονίου
0 
 mksa(_qe_)

# _me_
1 Masse élémentaire de l'électron
2 Electron rest mass
3 Masa elemental del electrón
4 Μάζα ηρεμίας ηλεκτρονίου
0 
 mksa(_me_)

# _qme_
1 Rapport q/me (charge/masse de l'électron)
2 Quotient q/me (charge/mass of the electron)
3 Cuociente q/me (carga/masa del electrón)
4 Σχέση q/me (φορτίο/μάζα ηλεκτρονίου)
0 
 mksa(_qme_)

# _mp_
1 Masse élémentaire du proton
2 Proton rest mass
3 Masa elemental del protón
4 Μάζα ηρεμίας πρωτονίου
0 
 mksa(_mp_)

# _mpme_
1 Rapport mp/me (masse du proton/masse de l'électron)
2 Quotient mp/me (mass of the proton/mass of the electron)
3 Cuociente mp/me (masa del protón/masa del electrón)
4 Σχέση μάζα πρωτονίου/μάζα ηλεκτρονίου
0 
 mksa(_mpme_)

# _alpha_
1 Constante de structure fine
2 Fine structure constant
3 Constante de estructura fina
4 Σταθερά λεπτής υφής
0 
 mksa(_alpha_)

# _phi_
1 Quantum de flux magnétique
2 Magnetic flux quantum
3 Quantum (cuanto) de flujo magnético
4 Κβάντο μαγνητικής ροής
0 
 mksa(_phi_)

# _F_
1 Constante de Faraday
2 Faraday constant
3 Constante de Faraday
4 Σταθερά Faraday
0 
 mksa(_F_)

# _Rinfinity_
1 Constante de Rydberg
2 Rydberg constant
3 Constante de Rydberg
4 Σταθερά Rydberg
0 
 mksa(_Rinfinity_)

# _RSun_
1 Rayon du Soleil
2 Radius of the Sun
3 
4 
0 
 mksa(_RSun_)

# _PSun_
1 Puissance à la surface du Soleil
2 Power at the surface of the Sun
3 
4 
0 
 mksa(_PSun_)

# _mEarth_
1 Masse de la Terre
2 Mass of the Earth
3 
4 
0 
 mksa(_mEarth_)

# _REarth_
1 Rayon de la Terre
2 Radius of the Earth
3 
4 
0 
 mksa(_REarth_)

# _sd_
1 Durée d'un jour sidéral
2 Duration of a sidereal day
3 
4 
0 
 mksa(_sd_)

# _syr_
1 Durée d'une année sidérale
2 Duration of a sidereal year
3 
4 
0 
 mksa(_syr_)

# _a0_
1 Rayon de Bohr
2 Bohr radius
3 Radio de Bohr
4 Ακτίνα Bohr
0 
 mksa(_a0_)

# _muB_
1 Magnéton de Bohr
2 Bohr magneton
3 Magnetón de Bohr
4 Σταθερά Bohr μαγνητικής ορμής ηλεκτρονίων
0 
 mksa(_muB_)

# _muN_
1 Magnéton nucléaire
2 Nuclear magneton
3 Magnetón nuclear
4 Σταθερά μαγνητικής ορμής νετρονίων-πρωτονίων
0 
 mksa(_muN_)

# _lambda0_
1 Longueur d'onde du photon (ch/e)
2 Photon wavelength (ch/e)
3 Longitud de onda (ch/e)
4 Μήκος κύματος φωτονίου (ch/e)
0 
 mksa(_lambda0_)

# _f0_
1 Fréquence du photon (e/h)
2 Photon frequency (e/h)
3 Frecuencia de fotón (e/h)
4 Συχνότητα φωτονίου (e/h)
0 
 mksa(_f0_)

# _lambdac_
1 Longueur d'onde du Compton
2 Compton wavelength
3 Longitud de onda del Compton
4 Μήκος κύματος Compton
0 
 mksa(_lambdac_)

# _rad_
1 1 radian
2 1 radian
3 1 radián
4 1 ακτίνιο
0 
 mksa(_rad_)

# _c3_
1 Constante de la loi de répartition de Wien
2 Wien displacement constant
3 Constante de la ley de repartición de Wien
4 Σταθερά μετατόπισης Wien
0 
 mksa(_c3_)

# _kq_
1 k/q (Boltzmann/charge de l'électron)
2 k/q (Boltzmann/charge of the electron)
3 k/q (Boltzmann/carga del electrón)
4 k/q (Boltzmann/φορτίο ηλεκτρονίου)
0 
 mksa(_kq_)

# _epsilon0q_
1 epsilon0/q (permittivité/charge de l'électron)
2 epsilon0/q (permittivity/charge of the electron)
3 epsilon0/q (permitivida/carga del electrón)
4 epsilon0/q (διαπερατότητα/φορτίο ηλεκτρονίου)
0 
 mksa(_epsilon0q_)

# _qepsilon0_
1 q*epsilon0 (charge de l'électron*permittivité)
2 q*epsilon0 (charge of the electron*permittivity)
3 q*epsilon0 (carga del electrón*permitividad)
4 q*epsilon0 (φορτίο ηλεκτρονίου*διαπερατότητα)
0 
 mksa(_qepsilon0_)

# _epsilonsi_
1 Constante diélectrique du silicium
2 Dielectric constant
3 Constante dieléctrica del silicio
4 Διηλεκτρική σταθερά πυριτίου
0 
 mksa(_epsilonsi_)

# _epsilonox_
1 Constante diélectrique du dioxyde de silicium
2 Dielectric constant of Silicon dioxide
3 Constante dieléctrica del óxido de silicio
4 Διηλεκτρική σταθερά διοξείδιου του πυριτίου
0 
 mksa(_epsilonox_)

# _a
1 are (100 m^2)
2 Are (100 m^2)
3 área (100 m^2)
4 are (100 m^2)
0 
 5_a
 mksa(_a)

# _A
1 ampère
2 Ampere
3 amperio
4 Αμπέρ
0 
 5_A
 mksa(_A)

# _acre
1 acre
2 Acre
3 acre
4 στρέμμα (3,04671 τμ)
0 
 5_acre
 mksa(_acre)

# _arcmin
1 minutes d'arc
2 Minute of arc
3 minuto de arco
4 Λεπτό τόξου (1/60 μιας μοίρας)
0 
 5_arcmin
 mksa(_arcmin)

# _arcs
1 secondes d'arc
2 Second of arc
3 Segundo de arco
4 Δευτερόλεπτο τόξου
0 
 5_arcs
 mksa(_arcs)

# _atm
1 atmosphère normale
2 Atmosphere
3 atmósfera
4 Ατμόσφαιρα
0 
 5_atm
 mksa(_atm)

# _au
1 unité astronomique
2 Astronomical unit
3 Unidad astronómica
4 Αστρονομική μονάδα
0 
 5_au
 mksa(_au)

# _Angstrom
1 angstrom
2 Angstrom
3 Angstrom
4 Angstrom
0 
 5_Angstrom
 mksa(_Angstrom)

# _b
1 barn
2 Barn
3 Barn
4 Barn (10^-28 m^2)
0 
 5_b
 mksa(_b)

# _bar
1 bar
2 Bar
3 Bar
4 Μπαρ
0 
 5_bar
 mksa(_bar)

# _bbl
1 baril
2 Barrel
3 Barilio
4 Βαρέλι
0 
 5_bbl
 mksa(_bbl)

# _Bq
1 becquerel
2 Becquerel
3 becquerel
4 Becquerel
0 
 5_Bq
 mksa(_Bq)

# _Btu
1 Btu British thermal unit (unité thermique britannique)
2 Btu British thermal unit
3 Btu British thermal unit (unidad termal británica)
4 Btu Βρετανική θερμική μονάδα
0 
 5_Btu
 mksa(_Btu)

# _bu
1 bushel (boisseau britannique 1_bu=8_galUK)
2 Bushel (1_bu=8_galUK)
3 Bushel (Celemín británico 1_bu=8_galUK)
4 Bushel (1 bu=8_galUK)
0 
 5_bu
 mksa(_bu)

# _buUS
1 bushel (boisseau américain)
2 US bushel
3 bushel (Celemín estadounidense)
4 US bushel
0 
 5_buUS
 mksa(_buUS)

 _C
1 coulomb
2 Coulomb
3 Coulomb
4 Coulomb
0 
 5_C
 mksa(_C)

# _cal
1 calorie
2 Calorie
3 Caloría
4 Calorie
0 
 5_cal
 mksa(_cal)

# _cd
1 candela
2 Candela
3 Candela
4 Candela
0 
 5_cd
 mksa(_cd)

# _chain
1 chain (1 chain = 66 pieds ou 22 yards)
2 Chain (1 chain = 66 feet or 22 yards)
3 Chain (1 chain = 66 pies o 22 yardas)
4 Chain (1 chain = 66 feet ή 22 yards)
0 
 5_chain
 mksa(_chain)

# _Ci
1 curie
2 Curie
3 Curie
4 Curie
0 
 5_Ci
 mksa(_Ci)

# _ct
1 Carat métrique
2 Carat
3 Carat
4 Carat
0 
 5_ct
 mksa(_ct)

# _cu
1 cup US (coupe EUA)
2 US cup
3 copa de EEUU
4 US cup
0 
 5_cu
 mksa(_cu)

# _d
1 jour
2 Day
3 Día
4 Ημέρα
0 
 5_d
 mksa(_d)

# _j
1 jour
2 Day
3 Día
4 Ημέρα
0 
 5_j
 mksa(_j)

# _dB
1 décibel
2 Decibel
3 Decibel
4 Decibel
0 
 5_dB
 mksa(_dB)

# _dyn
1 dyne
2 Dyne
3 Dyne
4 Dyne
0 
 5_dyn
 mksa(_dyn)

# _erg
1 erg
2 Erg
3 Erg
4 Erg
0 
 5_erg
 mksa(_erg)

# _eV
1 électronvolt
2 Electron volt
3 Electronvoltio
4 Ηλεκτρονιοβόλτ
0 
 5_eV
 mksa(_eV)

# _F
1 farad
2 Farad
3 Farad
4 Farad
0 
 5_F
 mksa(_F)

# _fm
1 fathom (brasse)
2 Fathom
3 Fathom (braza)
4 Fathom
0 
 5_fm
 mksa(_fm)

# _fath
1 fathom (brasse)
2 Fathom
3 Fathom (braza)
4 Fathom
0 
 5_fath
 mksa(_fath)

# _fbm
1 board foot (pied planche)
2 Board foot
3 Board foot (pie tabla)
4 Board foot (μονάδα μέτρησης ξυλείας)
0 
 5_fbm
 mksa(_fbm)

# _fc
1 footcandle (1 footcandle ≈ 10.764 lux)
2 Footcandle (1 footcandle ≈ 10.764 lux)
3 Footcandle (1 footcandle ≈ 10.764 lux)
4 Footcandle (μονάδα μέτρησης φωτεινότητας) (1 footcandle ≈ 10.764 lux)
0 
 5_fc
 mksa(_fc)

# _Fdy
1 faraday
2 Faraday
3 Faraday
4 Faraday
0 
 5_Fdy
 mksa(_fdy)

# _fermi
1 fermi
2 Fermi
3 Fermi
4 Fermi
0 
 5_fermi
 mksa(_fermi)

# _flam
1 footlambert
2 Footlambert
3 Footlambert
4 Footlambert (μονάδα μέτρησης φωτεινότητας)
0 
 5_flam
 mksa(_flam)

# _ft
1 foot (pied)
2 International foot
3 foot (pie)
4 πόδι (διεθνής μονάδα)
0 
 5_ft
 mksa(_ft)

# _ftUS
1 foot survey EUA
2 Survey foot
3 foot (pie EEUU)
4 πόδι (μονάδα ΗΠΑ)
0 
 5_ftUS
 mksa(_ftUS)

# _g
1 gramme
2 Gram
3 gramo
4 γραμμάριο
0 
 5_g
 mksa(_g)

# _ga
1 Standard freefall (chute libre standard)
2 Standard freefall
3 Standard freefall (caída libre estándar)
4 Σταθερά ελεύθερης πτώσης
0 
 5_ga
 mksa(_ga)

# _galUS
1 gallon EUA
2 US gallon
3 Galón EEUU
4 Γαλόνι ΗΠΑ
0 
 5_galUS
 mksa(_galUS)

# _galC
1 gallon canadien
2 Canadian gallon
3 Galón canadiense
4 Γαλόνι Καναδά
0 
 5_galC
 mksa(_galC)

# _galUK
1 gallon britannique
2 UK gallon
3 Galón británico
4 Γαλόνι UK
0 
 5_galUK
 mksa(_galUK)

# _gf
1 gramme-force (gravet)
2 Gram-force
3 Gramo-fuerza (pondio)
4 Δύναμη γραμμαρίου
0 
 5_gf
 mksa(_gf)

# _gmol
1 gramme-mole
2 Gram-mole
3 
4 Gram-mole
0 
 5_gmol
 mksa(_gmol)

# _grad
1 grade
2 Grade
3 gramo-mol
4 βαθμός
0 
 5_grad
 mksa(_grad)

# _gon
1 grade
2 Grade
3 Grado
4 Grade
0 
 5_gon
 mksa(_gon)

# _grain
1 grain (unité de masse ≈ 0,0648 grammes)
2 Grain (1 grain ≈ 0,0648 grams)
3 Grain (unidad de masa ≈ 0,0648 gramos)
4 grain (ελάχιστη μονάδα βάρους ίση προς 0,0648 του γραμμαρίου)
0 
 5_grain
 mksa(_grain)

# _Gy
1 gray
2 Gray
3 Gray
4 Gray
0 
 5_Gy
 mksa(_Gy)

# _H
1 henry
2 Henry
3 Henry
4 Henry
0 
 5_H
 mksa(_H)

# _ha
1 hectare
2 Hectare
3 Hectárea
4 εκτάριο
0 
 5_ha
 mksa(_ha)

# _h
1 heure
2 Hour
3 Hora
4 ώρα
0 
 5_h
 mksa(_h)

# _hp
1 horsepower (cheval-vapeur)
2 Horsepower
3 Horsepower (caballo de vapor)
4 ιπποδύναμη
0 
 5_hp
 mksa(_hp)

# _Hz
1 hertz
2 Hertz
3 Hertz
4 Χέρτζ
0 
 5_Hz
 mksa(_Hz)

# _in
1 inch (pouce)
2 Inch
3 Inch (pulgada)
4 ίντσα
0 
 5_in
 mksa(_in)

# _inHg
1 inch of mercury (pouce de mercure), 0 degré Celsius
2 Inches of mercury, 0 degree Celsius
3 Pulgadas de mercurio, 0 grados Celsius
4 ίντσες υδραργύρου, 0 βαθμοί Κελσίου
0 
 5_inHg
 mksa(_inHg)

# _inH20
1 inch of water, 60 degrés Fahrenheit
2 Inches of water, 60 degrees Fahrenheit
3 Pulgadas de agua, 60 grados Fahrenheit
4 ίντσες νερού, 60 βαθμοί Φαρενάιτ
0 
 5_inH20
 mksa(_inH20)

# _J
1 joule
2 Joule
3 Joule (julio, unidad)
4 Τζάουλ
0 
 5_J
 mksa(_J)

# _K
1 kelvin
2 Kelvins
3 Kelvin
4 Κέλβιν
0 
 5_K
 mksa(_K)

# _kg
1 kilogramme
2 Kilogram
3 Kilogramo
4 χιλιόγραμμο
0 
 5_kg
 mksa(_kg)

# _kip
1 kilopound-force
2 Kilopound-force
3 Kilopound-force (kilolibra-fuerza)
4 δύναμη χιλιολιβρών
0 
 5_kip
 mksa(_kip)

# _knot
1 mille nautique par heure
2 nautical miles per hour
3 milla náutica por hora
4 ναυτικά μίλια ανά ώρα
0 
 5_knot
 mksa(_knot)

# _kph
1 kilomètre par heure
2 Kilometers per hour
3 kilómetros por hora
4 χιλιόμετρα ανά ώρα
0 
 5_kph
 mksa(_kph)

# _l
1 litre
2 Liter
3 litro
4 λίτρο
0 
 5_l
 mksa(_l)

# _lam
1 lambert
2 Lambert
3 Lambert
4 Lambert
0 
 5_lam
 mksa(_lam)

# _lb
1 livre (1 livre = 16 oz)
2 pound (1 pound = 16 oz)
3 libra (1 libra = 16 oz)
4 λίβρα (1 λίβρα = 16 oz)
0 
 5_lb
 mksa(_lb)

# _lbf
1 pound-force
2 Pound-force
3 libra-fuerza
4 Δύναμη λίβρας
0 
 5_lbf
 mksa(_lbf)

# _lbmol
1 livre-mole
2 Pound-mole
3 libra-mole
4 mole λίβρας
0 
 5_lbmol
 mksa(_lbmol)

# _lbt
1 troy pound
2 Troy pound
3 Troya libra
4 Λίβρα Τρουά (μονάδα μέτρησης μάζας)
0 
 5_lbt
 mksa(_lbt)

# _lm
1 lumen
2 Lumen
3 Lumen
4 Lumen
0 
 5_lm
 mksa(_lm)

# _lx
1 lux
2 Lux
3 Lux
4 Lux
0 
 5_lx
 mksa(_lx)

# _lyr
1 année-lumière
2 Light year
3 año luz
4 Έτος φωτός
0 
 5_lyr
 mksa(_lyr)

# _m
1 Mètre (unit)
2 Metre (unit)
3 Metro (unidad)
4 Μέτρο (μονάδα)
0 
 5_m

# _µ
1 micron
2 Micron
3 micrón
4 Μικρό
0 
 5_µ
 mksa(_µ)

# _mho
1 mho
2 Mho
3 mho
4 Mho
0 
 5_mho
 mksa(_mho)

# _mile
1 International mile
2 International mile
3 milla internacional
4 Μίλι (διεθνές)
0 
 5_mile
 mksa(_mile)

# _mil
1 mil
2 Mil
3 mil
4 Mil
0 
 5_mil
 mksa(_mil)

# _miUS
1 US statute mile
2 US statute mile
3 US statute mile
4 Μίλι (θεσμοθετημένο ΗΠΑ)
0 
 5_miUS
 mksa(_miUS)

# _mmHg
1 millimètre de mercure (torr), 0 degré Celsius
2 Millimeter of mercury (torr), 0 degree Celsius
3 milímetro de mercurio (torr), 0 grado Celsius
4 Χιλιοστόμετρα υδραργύρου (torr), 0 βαθμοί Κελσίου
0 
 5_mmHg
 mksa(_mmHg)

# _mol
1 mole
2 Mole
3 mole
4 Mole
0 
 5_mol
 mksa(_mol)

# _mph
1 mile par heure
2 Miles per hour
3 millas por hora
4 Μίλια ανά ώρα
0 
 5_mph
 mksa(_mph)

# _N
1 newton
2 Newton
3 Newton
4 Newton
0 
 5_N
 mksa(_N)

# _mille
1 mille marin
2 Nautical mile
3 milla náutica
4 Ναυτικά μίλια
0 
 5_mille
 mksa(_mille)

# _Ohm
1 ohm
2 Ohm
3 Ohm
4 Ohm
0 
 5_Ohm
 mksa(_Ohm)

# _oz
1 once
2 Ounce
3 onza
4 Ουγγιά
0 
 5_oz
 mksa(_oz)

# _ozfl
1 once fluide EUA
2 US fluid ounce
3 onza fluida EEUU
4 Ουγγιά υγρού ΗΠΑ
0 
 5_ozfl
 mksa(_ozfl)

# _ozt
1 once de troy
2 Troy ounce
3 onza de Troya
4 Ουγγιά Τρουά
0 
 5_ozt
 mksa(_ozt)

# _ozUK
1 once fluide britannique
2 UK fluid ounce
3 onza fluida británica
4 Ουγγιά υγρού UK
0 
 5_ozUK
 mksa(_ozUK)

# _P
1 poise (mesure la viscosité)
2 Poise (measures viscosity)
3 Poise (unidad de viscosidad)
4 Poise (μέτρο ιξώδους)
0 
 5_P
 mksa(_P)

# _Pa
1 pascal
2 Pascal
3 Pascal
4 Pascal
0 
 5_Pa
 mksa(_Pa)

# _pc
1 parsec
2 Parsec
3 Parsec
4 Parsec
0 
 5_pc
 mksa(_pc)

# _pdl
1 poundal (unité de force)
2 Poundal (force)
3 Poundal (unidad de fuerza)
4 Ποδολίβρα ανά δευτερόλεπτο^2
0 
 5_pdl
 mksa(_pdl)

# _ph
1 phot
2 Phot
3 Phot
4 φωτ (μονάδα έντασης φωτός)
0 
 5_ph
 mksa(_ph)

# _pk
1 US peck
2 US peck
3 US peck
4 US peck (ένα τέταρτο του μοδιού)
0 
 5_pk
 mksa(_pk)

# _psi
1 pound-force par inch carré
2 Pounds per square inch
3 Libras por pulgadas cuadradas
4 Λίβρα ανά τετραγωνική ίντσα
0 
 5_psi
 mksa(_psi)

# _liqpt
1 US liquid pint (1_galUS=8_liqpt)
2 US liquid pint (1_galUS=8_liqpt)
3 US liquid pint (1_galUS=8_liqpt)
4 πίντα υγρών ΗΠΑ, (1_galUS=8_liqpt)
0 
 5_liqpt
 mksa(_liqpt)

# _ptUK
1 pinte britannique (1_galUK=8_ptUK)
2 UK pint (1_galUK=8_ptUK)
3 pinta británica (1_galUK=8_ptUK)
4 πίντα υγρών ΗΒ, (1_galUK=8_ptUK)
0 
 5_ptUK
 mksa(_ptUK)

# _qt
1 quart (de gallon)
2 Quart
3 quarto (de galón)
4 κουώρτ, τέταρτο του γαλονιού
0 
 5_qt
 mksa(_qt)

# _rad
1 radian
2 Radian
3 radián
4 ακτίνια
0 
 5_rad
 mksa(_rad)

# _R
1 röntgen 1_R=
2 Roentgen 1_R=
3 Roentgen 1_R=
4 Roentgen 1_R=
0 
 5_R
 mksa(_R)

# _rd
1 rad 1_rd=0.01_Gy
2 Rad 1_rd=0.01_Gy
3 rad 1_rd=0.01_Gy
4 Rad 1_rd=0.01_Gy
0 
 5_rd
 mksa(_rd)

# _rod
1 rod 1_rod=5.029215842_m
2 Rod 1_rod=5.029215842_m
3 Rod 1_rod=5.029215842_m
4 Rod 1_rod=5.029215842_m
0 
 5_rod
 mksa(_rod)

# _rem
1 rem
2 Rem
3 Rem
4 Rem
0 
 5_rem
 mksa(_rem)

# _rpm
1 tours par minute
2 Revolutions per minute
3 Revoluciones por minuto
4 Στροφές ανά λεπτό
0 
 5_rpm
 mksa(_rpm)

# _s
1 seconde
2 Second
3 segundos
4 Δευτερόλεπτο
0 
 5_s
 mksa(_s)

# _S
1 Siemens
2 Siemens
3 Siemens
4 Siemens
0 
 5_S
 mksa(_S)

# _sb
1 stilb
2 Stilb
3 Stilb
4 Stilb
0 
 5_sb
 mksa(_sb)

# _slug
1 slug
2 Slug
3 Slug
4 Slug
0 
 5_slug
 mksa(_slug)

# _sr
1 stéradian
2 Steradian
3 Estereorradían
4 Steradian
0 
 5_sr
 mksa(_sr)

# _st
1 stère
2 Stere
3 Estéreo
4 Stere (κυβικό μέτρο)
0 
 5_st
 mksa(_st)

# _St
1 Stokes
2 Stokes
3 Stokes
4 Stokes
0 
 5_St
 mksa(_St)

# _Sv
1 Sievert
2 Sievert
3 Sievert
4 Sievert (μονάδα ακτινοβολίας ιονισμού)
0 
 5_Sv
 mksa(_Sv)

# _t
1 tonne
2 Metric ton
3 Tonelada
4 Μετρικός τόνος
0 
 5_t
 mksa(_t)

# _T
1 Tesla
2 Tesla
3 Tesla
4 Tesla
0 
 5_T
 mksa(_T)

# _tbsp
1 tablespoon (cuillère à soupe)
2 Tablespoon
3 tablespoon (cucharada)
4 Tablespoon
0 
 5_tbps
 mksa(_tbsp)

# _therm
1 EEC therm
2 EEC therm
3 EEC therm
4 EEC therm
0 
 5_therm
 mksa(_therm)

# _ton
1 short ton (1 tonne courte = 2000 livres)
2 Short ton (1 short ton = 2000 pounds)
3 short ton (1 tonelada corta = 2000 libras)
4 Βάρος ή φορτίο μετρώμενο σε 2.000 λίβρες
0 
 5_ton
 mksa(_ton)

# _tonUK
1 long (UK)
2 Long (UK)
3 Long (UK)
4 Long (UK)
0 
 5_tonUK
 mksa(_tonUK)

# _torr
1 torr (mmHg)
2 Torr (mmHg)
3 Torr (mmHg)
4 Torr (mmHg)
0 
 5_torr
 mksa(_torr)

# _tsp
1 teaspoon (cuillère à thé)
2 Teaspoon
3 teaspoon (cucharada de té)
4 Κουταλάκι σούπας (ως μονάδα μέτρησης)
0 
 5_tsp
 mksa(_tsp)

# _u
1 unité de masse atomique
2 Atomic mass unit
3 Unidad de masa atómica
4 Μονάδα ατομικής μάζας
0 
 5_u
 mksa(_u)

# _V
1 volt
2 Volt
3 Voltio
4 Volt
0 
 5_V
 mksa(_V)

# _W
1 watt
2 Watt
3 Vatio
4 Watt
0 
 5_W
 mksa(_W)

# _Wb
1 weber
2 Weber
3 Weber
4 Weber
0 
 5_Wb
 mksa(_Wb)

# _yd
1 yard international
2 International yard
3 yarda internacional
4 Γυάρδα (διεθνής)
0 
 5_yd
 mksa(_yd)

# _yr
1 année
2 Year
3 año
4 Έτος
0 
 5_yr
 mksa(_yr)

# grid_paper
1 Trace dans le rectangle [xmin..xmax]*[ymin..ymax], les lignes du réseau formé des droites y=n*uy et dans le repère OxY d'angle t!=0 des droites x=n*ux.
2 Draws in the rectangle [xmin..xmax]*[ymin..ymax], the lines of the network built with the lines y=n*uy and in the axes OxY of angle t!=0 with the lines x=n*ux.
3 Traza las filas de la red formada por las rectas y=n*uy e en los ejes OxY de ángulo t!=0 las rectas x=n*ux.
4 Σχεδιάζει τις γραμμές ενός δικτύου που σχηματίζεται από τις ευθείες y=n*uy και πάνω στους άξονες OxY με γωνία t!=0 τις ευθείες x=n*ux.
0 Real(ux),Real(t),Real(uy),[x=xmin..xmax,y=ymin..ymax]
grid_paper(1,pi/3,sqrt(3)/2)
grid_paper(1,pi/3,sqrt(3)/2,x=-1..4,y=-2..2)
grid_paper(0.5,3*pi/4,0.5)

# line_paper
1 Trace dans le rectangle [xmin..xmax]*[ymin..ymax], les droites x=n*ux dans le repère OxY d'angle t!=0.
2 Draws in the rectangle [xmin..xmax]*[ymin..ymax], the lines x=n*ux in the axes OxY of angle t!=0.
3 Traza las filas de la red formada por las rectas x=n*ux en los ejes OxY de ángulo t!=0.
4 Σχεδιάζει τις γραμμές ενός δικτύου που σχηματίζεται από τις ευθείες x=n*ux πάνω στους άξονες OxY με γωνία t!=0.
0 Real(ux),Real(t),[x=xmin..xmax,y=ymin..ymax]
line_paper(0.4,pi/3)
line_paper(0.4,pi/3,x=-1..4,y=-2..2)
line_paper(0.5,3*pi/4)

# triangle_paper
1 Trace dans le rectangle [xmin..xmax]*[ymin..ymax], les lignes du réseau formé des droites y=n*uy et dans le repère OxY d'angle t!=0 des droites x=n*uxx et ux*y+uy*x=n*ux*uy.
2 Draws in the rectangle [xmin..xmax]*[ymin..ymax], the lines of the network built with the lines y=n*uy and in the axes OxY of angle t!=0 with the lines x=n*ux and ux*y+uy*x=n*ux*uy.
3 Traza las filas de la red formada por las rectas y=n*uy e en los ejes OxY de ángulo t!=0 las rectas x=n*ux e ux*y+uy*x=n*ux*uy.
4 Σχεδιάζει τις γραμμές ενός δικτύου που σχηματίζεται από τις ευθείες y=n*uy και πάνω στους άξονες OxY με γωνία t!=0 τις ευθείες x=n*ux και ux*y+uy*x=n*ux*uy.
0 Real(ux),Real(t),Real(uy),[x=xmin..xmax,y=ymin..ymax]
triangle_paper(1,pi/3,sqrt(3)/2)
triangle_paper(1,pi/3,sqrt(3)/2,x=-1..4,y=-2..2)
papier_triangule(1,pi/3,sqrt(3)/2,x=-2..6,y=-4*sqrt(3)..4*sqrt(3))
triangle_paper(0.5,3*pi/4,0.5)

# dot_paper
1 Trace dans le rectangle [xmin..xmax]*[ymin..ymax], les sommets du réseau formé des droites y=n*uy et dans le repère OxY d'angle t!=0 des droites x=n*ux.
2 Draws in the rectangle [xmin..xmax]*[ymin..ymax], the apex of the network built with the lines y=n*uy and in the axes OxY of angle t!=0 with the lines x=n*ux.
3 Traza los vértices de la red formada por las rectas y=n*uy e en los ejes OxY de ángulo t!=0 las rectas x=n*ux.
4 Σχεδιάζει τις κορυφές ενός δικτύου που σχηματίζεται από τις ευθείες y=n*uy και πάνω στους άξονες OxY με γωνία t!=0 τις ευθείες x=n*ux.
0 Real(ux),Real(uy),Real(t)
dot_paper(1,pi/3,sqrt(3)/2)
dot_paper(1,pi/3,sqrt(3)/2,x=-1..4,y=-2..2)
dot_paper(0.5,3*pi/4,0.5)

# ufactor
1 Factorise une unité dans un objet-unité
2 Factors a unit in a unit object
3 Factoriza una unidad en un objeto-unidad
4 Παραγοντοποιεί μια μονάδα, σε ένα μοναδιαίο αντικείμενο
0 Unit,Unit
-1 convert
-2 mksa
-3 usimplify
ufactor(100_C,1_A)

# usimplify
1 Simplifie une unité dans un objet-unité
2 Simplifies a unit in a unit object
3 Simplifica una unidad en un objeto-unidad
4 Απλοποιεί μια μονάδα, σε ένα μοναδιαίο αντικείμενο
0 Unit
-1 convert
-2 mksa
-3 ufactor
usimplify(100_(W*s))

# Celsius2Fahrenheit
1 Convertit les degrés Celsius en degrés Fahrenheit
2 Convert Celsius into Fahrenheit
3 Convierte Celsius->Fahrenheit
4 Μετατρέπει Celsius->Fahrenheit
0 Unit
-1 Fahrenheit2Celsius
-2 _degreeF
Celsius2Fahrenheit(10)
Celsius2Fahrenheit(-40)

# Fahrenheit2Celsius
1 Convertit les degrés Fahrenheit en degrés Celsius
2 Convert Fahrenheit into Celsius
3 Convierte Fahrenheit->Celsius
4 Μετατρέπει Fahrenheit->Celsius
0 Unit
-1 Celsius2Fahrenheit
-2 _degreeF
Fahrenheit2Celsius(50)
Fahrenheit2Celsius(-40)

# mksa
1 Convertit les unités en unités du système international MKSA
2 Convert units in MKSA international unit system
3 Convierte las unidades en unidades del sistema internacional MKSA
4 Μετατρέπει μονάδες στο MKSA διεθνές μετρικό σύστημα
0 Unit
-1 convert
-2 ufactor
mksa(1_N)

# CST
1 Nom de la variable permettant de créer le menu cust du bandeau.
2 Name of the variable creating the menu cust of the bandeau.
3 Nombre de la variable para crear menú personalizado.
4 Όνομα της μεταβλητής που επιτρέπει την δημιουργία προσαρμοσμένου μενού στην λωρίδα.
0 Lst
-1 
 CST:=[evalc,["euro",6.55957],["f",x->2*x],["g",g]]

# isopolygon
1 Trace  un polygone régulier ayant abs(n) sommets, donné si n>0  par 2 sommets (ou 2 sommets et 1 point du plan) et si n<0 par son centre et 1 sommet (ou son centre, 1 sommets et 1 point du plan).
2 Draws a regular polygon having abs(n) vertices, given if n>0 by 2 vertices (or 2 vertices and 1 point of the plane) and  if n<0 by its center and 1 vertex (or its center, 1 vertex and 1 point of the plane).
3 Traza un polígono regular con abs(n) vértices, dado si n>0 por 2 vértices (o 2 vértices y 1 punto del plano) y dado si n<0 por su centro y 1 vértice (o centro, 1 vértice y 1 punto del plano).
4 Σχεδιάζει ένα κανονικό πολύγωνο που έχει abs(n) κορυφές, και που καθορίζεται από 2 κορυφές (ή από 2 κορυφές και ένα σημείο του επιπέδου) αν n>0 και από το κέντρο του και μία κορυφή (ή από το κέντρο του, μία κορυφή και ένα σημείο του επιπέδου) αν n<0.
0 Pnt,Pnt,[Pnt],Intg(n)
-1 polygon
-2 hexagon
isopolygon(0,1,5)
isopolygon(0,1,-5)
isopolygon(point(0,0,0),point(3,3,3),point(0,0,3),5)
isopolygon(point(0,0,0),point(3,3,3),point(0,0,3),-5)

# arc
1 Trace un arc de cercle donné par 2 sommets et l'angle au centre [Xcas mettra le centre dans C et le rayon dans r].
2 Draws a circle arc given by 2 vertices and the angle at center [Xcas will put the center in C and the radius in r].
3 Traza un arco de circunferencia dado por 2 vértices y el ángulo al centro [el centro va en C y el radio en r].
4 Σχεδιάζει ένα κυκλικό τόξο που δίνεται από 2 κορυφές και τη γωνία στο κέντρο [το κέντρο θα είναι C και η ακτίνα r].
0 Pnt, Pnt, Real,[Var(C)],[Var(r)],[Opt(segment)]
-1 circle
-2 segment
-3 plotparam
arc(0,1,pi/4)
arc(i,1,pi/4,C,r)
arc(i,1,pi/4,segment)
arc(i,1,pi/4,segment,affichage=1+rempli)

# makesuite
1 Renvoie une séquence faite à partir d'un vecteur.
2 Returns a sequence made with a vector.
3 Devuelve una secuencia a partir de un vector.
4 Επιστρέφει μια ακολουθία που ορίζεται από ένα διάνυσμα.
0 Vect||Lst
-1 makevector
-2 op
makesuite([1,2,3])

# makevector
1 Renvoie un vecteur fait à partir d'une séquence.
2 Returns a vector made with a sequence.
3 Devuelve un vector a partir de una secuencia.
4 Επιστρέφει ένα διάνυσμα που ορίζεται από μια ακολουθία.
0 Seq
-1 makesuite
makevector(1,2,3)

# interval2center
1 Renvoie le centre de l'intervalle ou l'objet.
2 Returns the center of the interval or the object.
3 Devuelve el centro del intervalo o el objeto.
4 Επιστρέφει το κέντρο του διαστήματος ή του αντικειμένου.
0 Interval or Real
-1 center2interval
interval2center(2..5)
interval2center(3)

# center2interval
1 Renvoie la liste des intervalles commençant par a0 et ayant pour centres la liste l.
2 Returns the list of intervals beginning with a0 and with l as centers.
3 Devuelve la lista de intervalos empezando por a0 y teniendo por centros la lista l.
4 Επιστρέφει τη λίστα των διαστημάτων που αρχίζουν με a0 και έχουν ως κέντρα την λίστα l.
0 LstVal(l),[Real(a0)]
-1 interval2center
center2interval([2,5,9],1)
center2interval([2,5,8])

# border
1 Renvoie la matrice formée par A bordée de b en dernière colonne, si nrows(A)=size(b), border(A,b)=tran(append(tran(A),b)).
2 Returns the matrix obtained by bording A with b as latest column, if nrows(A)=size(b), border(A,b)=tran(append(tran(A),b)).
3 Devuelve la matriz formada por A con b en el borde como última columna, si nrows(A)=size(b), border(a,b)=tran(append(tran(A),b)).
4 Επιστρέφει τον πίνακα που δημιουργείται από τον Α έχοντας το b ως την τελευταία στήλη, αν nrows(A)=size(b), border(A,b)=tran(append(tran(A),b)).
0 Mtrx(A),Lst(b)
0 Mtrx(A),Lst(b)
-1 tran
-2 append
-3 augment
border([[1,2,3,4],[4,5,6,8],[7,8,9,10]],[1,3,5])
border([[1,2,3],[4,5,6],[7,8,9]],[1,0,1])

# JordanBlock
1 Renvoie une matrice n*n avec a sur la diagonale, 1 au-dessus et 0 ailleurs.
2 Returns a matrix n*n with a on the diagonal ,1 above and 0 everywhere else.
3 Devuelve una matriz n*n con a en la diagonal, 1 en la parte triangular superior y 0 en el resto.
4 Επιστρέφει ένα πίνακα n*n με a στην διαγώνιο, 1 πάνω από αυτή και 0 οπουδήποτε αλλού.
0 Expr(a),Intg(n)
-1 jordan
JordanBlock(7,3)

# blockmatrix
1 Renvoie la matrice obtenue en scindant la liste selon n listes de longueur m.
2 Returns the matrix get from the list divided into n lists of dimension m.
3 Devuelve la matriz obtenida al escindir la lista según n listas de largo m.
4 Επιστρέφει τον πίνακα που δημιουργείται από μια λίστα αν τη διαιρέσουμε σε n λίστες μεγέθους m.
0 Intg(n),Intg(m),Lst
-1 list2mat
blockmatrix(2,3,[idn(2),idn(2),idn(2),idn(2),idn(2),idn(2)])
blockmatrix(2,2,[idn(2),newMat(2,3),newMat(3,2),idn(3)])

# row
1 Renvoie la ligne n ou la suite des lignes n1..n2 de la matrice A, ou argument optionnel de count,count_eq,count_inf,count_sup.
2 Returns the row n or the sequence of the rows n1..n2 of the matrix A, or optional argument of count,count_eq,count_inf,count_sup.
3 Devuelve la fila n o la secuencia de filas n1..n2 de la matriz A, o argumento opcional de count,count_eq,count_inf,count_sup.
4 Επιστρέφει τη n-στη γραμμή ή την ακολουθία των γραμμών n1..n2 του πίνακα Α.
0 Mtrx(A),Intg(n)||Interval(n1..n2)
-1 col
-2 count
-3 count_eq
-4 count_inf
-5 count_sup
row([[1,2,3],[4,5,6],[7,8,9]],1)
row([[1,2,3],[4,5,6],[7,8,9]],0..1)
 count_eq(3,[[1,2,3],[4,3,2],[3,2,1]],row)

# col
1 Renvoie la colonne n ou la suite des colonnes n1..n2 de la matrice A, ou argument optionnel de count,count_eq,count_inf,count_sup.
2 Returns the column n or the sequence of the columns n1..n2 of the matrix A, or optional argument of count,count_eq,count_inf,count_sup.
3 Devuelve la columna n o la secuencia de columnas n1..n2 de la matriz A, o argumento opcional de count,count_eq,count_inf,count_sup.
4 Επιστρέφει τη n-στη στήλη ή την ακολουθία των στηλών n1..n2 του πίνακα Α.
0 Mtrx(A),Intg(n)||Interval(n1..n2)
-1 row
-2 count
-3 count_eq
-4 count_inf
-5 count_sup
col([[1,2,3],[4,5,6],[7,8,9]],1)
col([[1,2,3],[4,5,6],[7,8,9]],0..1)
 count_eq(3,[[3,2,3],[4,3,2],[3,2,1]],col)

# delrows
1 Renvoie la matrice obtenue en supprimant les lignes n1..n2 (ou n1) de la matrice A.
2 Returns the matrix where the rows n1..n2 (or n1) of the matrix A are deleted.
3 Devuelve la matriz A después de borrar las filas n1..n2 (o n1).
4 Επιστρέφει τον πίνακα Α όπου οι γραμμές n1..n2 (ή n1) έχουν διαγραφεί.
8 删除行。
0  Mtrx(A),Interval(n1..n2)||n1
-1 delcols
delrows([[1,2,3],[4,5,6],[7,8,9]],1..1)
delrows([[1,2,3],[4,5,6],[7,8,9]],0..1)
delrows([[1,2,3],[4,5,6],[7,8,9]],1)

# delcols
1 Renvoie la matrice obtenue en supprimant les colonnes n1..n2 (ou n1) de la matrice A.
2 Returns the matrix where the columns n1..n2 (or n1) of the matrix A are deleted.
3 Devuelve la matriz A después de borrar las columnas n1..n2 (o n1).
4 Επιστρέφει τον πίνακα Α όπου οι στήλες n1..n2 (ή n1) έχουν διαγραφεί.
8 删除列。
0 Mtrx(A),Interval(n1..n2)||n1
-1 delrows
delcols([[1,2,3],[4,5,6],[7,8,9]],1..1)
delcols([[1,2,3],[4,5,6],[7,8,9]],0..1)
delcols([[1,2,3],[4,5,6],[7,8,9]],1)

# frequencies
1 Renvoie les fréquences des valeurs d'une liste.
2 Returns the frequencies of a list values.
3 Devuelve las frecuencias.
4 Επιστρέφει τις συχνότητες.
0 Lst
-1 histogram
-2 cumulated_frequencies
-3 bar_plot
-4 classes
frequencies([1,2,1,1,2,1,2,4,3,3])
frequencies([(rand(6)+1)$(k=1..100)])

# cumulated_frequencies
1 Trace le diagramme cumulatif des fréquences (lignes=[valeur,fréquences])
2 Draws the diagram of the cumulated frequencies (rows=[value,frequencies])
3 Traza el diagrama de frecuencias acumuladas (filas=[valor,frecuencias])
4 Σχεδιάζει το διάγραμμα από συσωρευτικές συχνότητες (rows=[value,frequencies])
0 Lst || Mtrx
-1 histogram
-2 classes
-3 bar_plot
cumulated_frequencies([1,2,1,1,2,1,2,4,3,3])
cumulated_frequencies([(rand(6)+1)$(k=1..100)])
cumulated_frequencies([[1,0.3],[2,0.5],[3,0.2]])
cumulated_frequencies([[1..2,0.3],[2..3,0.5],[3..4,0.2]])
cumulated_frequencies([[1..2,0.3,0.5],[2..3,0.5,0.2],[3..4,0.2,0.3]])

# is_element
1 Renvoie 1 si le point est sur l'objet géométrique et 0 sinon.
2 Returns 1 if the point is on the geometric object and 0 otherwise.
3 Devuelve 1 si el punto está sobre el objeto geométrico y 0 si no.
4 Επιστρέφει 1 αν το σημείο είναι πάνω στο γεωμετρικό αντικείμενο και 0 διαφορετικά.
0 Pnt,GeoObj
-1 element
-2 member
-3 contains
is_element(point(i),square(0,1))
is_element(point(i),circle(point(0),point(2)))

# NewPic
1 Crée un image de nom pic1, composée des points définis par les lignes de A.
2 Creates a picture named pic1, made with the points defined by the rows of A.
3 Crea una imagen llamada pic1, compuesta por los puntos definidos por las filas de A.
4 Δημιουργεί μια εικόνα που ονομάζεται pic1, που αποτελείται από τα σημεία που ορίζονται από τις γραμμές του Α.
0 Mtrx_nrows_2cols(A),Var(pic1)
-1 
NewPic ([[1,1],[1,2],[2,2]],des1)

# RclPic
1 Rajoute au graphique de l'écran DispG, l'image stockée dans pic1 à l'aide de StoPic.
2 Adds to the graphic in the DispG screen, the picture stored with StoPic.
3 Añade a la pantalla gráfica DispG, la imagen guardada con StoPic.
4 Προσθέτει στο γράφημα της οθόνης DispG, την εικόνα που έχει αποθηκευτεί στο StoPic.
0 Var(pic1)
-1 RplcPic
-2 StoPic
RclPic(des1)

# RplcPic
1 Efface et remplace le graphique de l'écran DispG,par l'image stockée dans pic1 à l'aide de StoPic.
2 Erase and replaces the graphic in the DispG screen, with the picture stored with StoPic.
3 Borra y reemplaza el gráfico en la pantalla gráfica DispG, con el dibujo guardado con StoPic.
4 Διαγράφει και αντικαθιστά το γράφημα στην οθόνη DispG, με την εικόνα που έχει αποθηκευτεί στο StoPic.
0 Var(pic1)
-1 StoPic
-2 RclPic
RplcPic(des1)

# non_recursive_normal
1 Simplifie les expressions, sans simplification à l'intérieur des expressions non rationnelles.
2 Simplifies the expressions, but without simplification into no-rational expressions.
3 Simplifica las expresiones, pero sin simplificar al interior de expresiones no racionales.
4 Απλοποιεί τις εκφράσεις, αλλά χωρίς να είναι απλοποιήσεις σε μη-ρητές παραστάσεις.
0 Expr
-1 normal
non_recursive_normal(sin(x+x)+sin(2*x)+x+x)
non_recursive_normal(sin(2*x)+sin(2*x)+x+x)

# evalc
1 Renvoie une expression complexe simplifiée sous la forme real+i*imag.
2 Returns an complex expression simplified with the format real+i*imag.
3 Devuelve una expresión compleja simplificada de la forma real+i*imag.
4 Επιστρέφει μια μιγαδική παράσταση στη μορφή real+i*imag.
0 Expr
-1 normal
evalc(-3+4*i+exp(i))
evalc(1/(x+y*i))

# copy
1 A:=copy(B) clone la liste ou matrice B dans A.
2 A:=copy(B) clones the list or matrix B in A.
3 A:=copy(B) copia la lista o matriz B en A.
4 Εντολή για συμβατότητα με το Maple, A:= copy(B) αντίγραφο του πίνακα Β στο Α αλλά χωρίς να κάνει κάτι στο xcas.
0 Mtrx,Var
-1 =<
 A:=copy(B)

# zip
1 Retourne la liste de j-ième élément f(l1[j],l2[j]): sans valeur de défaut, sa taille est le minimum des tailles de l1 et l2, sinon on complète la liste la plus courte avec la valeur de défaut.
2 Returns a list whose j-th entry is f(l1[j],l2[j]): without default value its length is the minimum of the lengths of the two input lists and else the shorter list is padded with the default value.
3 Devuelve la lista cuya j-ésimo elemento es f(l1[j],l2[j]): sin ningún valor por defecto, su largo es el mínimo de los largos de l1 y l2, y si no la lista más corta está completada con el valor por defecto.
4 Επιστρέφει μια λίστα της οποίας η j-στη καταχώρηση είναι f(l1[j],l2[j]): χωρίς προεπιλεγμένη τιμή το μήκος της είναι το ελάχιστο μήκος των δύο λιστών l1 και l2, διαφορετικά η μικρότερη λίστα συμπληρώνεται από την προεπιλεγμένη τιμή.
0 Fnc2d(f),Lst(l1),Lst(l2),[Val(default)]
-1 
zip('+',[a,b,c,d], [1,2,3,4])
zip('+',[a,b,c,d], [1,2,3])
zip('+',[a,b,c,d], [1,2,3],5)
zip(sum,[a,b,c,d], [1,2,3,4])

# unquote
1 Évalue une expression quotée (par exemple purge(c);a:=c;unquote(a):=3; met 3 dans les variables a et c).
2 Evaluates an quoted expression (for example purge(c);a:=c;unquote(a):=3; put 3 in the variables a and c).
3 Evalua una expresión entre comillas (por ejemplo purge(c);a:=c;unquote(a):=3; pone 3 en las variables a y c).
4 Υπολογίζει μια παράσταση της οποίας οι υπολογισμοί είχαν ανασταλεί (π.χ. αν a:=quote(3*4), unquote(a) επιστρέφει 12)
0 Expr
-1 quote
unquote(a)

# time
1 Renvoie le temps de calcul de la commande ou depuis le début de la session
2 Returns the time to compute a command or from the beginning of the session.
3 Devuelve el tiempo de cálculo del comando o desde el inicio de la sesión.
4 Επιστρέφει το χρόνο υπολογισμού μιας εντολής ή τον χρόνο από την αρχή της συνεδρίας.
0 NULL
time(factor(x^10-1))
time()

# DropDown
1 Dans un programme, instruction d'une boite de dialogue.
2 In a program, instruction of a dialog box.
3 En un programa, instrucción para una caja de diálogo.
4 Σε ένα πρόγραμμα, εντολή ενός παράθυρου διαλόγου.
0 Str,LstVal,Var
-1 Dialog
-2 choosebox

# Request
1 Dans un programme, instruction d'une boite de dialogue.
2 In a program, instruction of a dialog box.
3 En un programa, instrucción para una caja de diálogo.
4 Σε ένα πρόγραμμα, εντολή ενός παράθυρου διαλόγου.
0 Str,Var
-1 Dialog
-2 input

# Text
1 Dans un programme, instruction d'une boite de dialogue.
2 In a program, instruction of a dialog box.
3 En un programa, instrucción de una caja de diálogo.
4 Σε ένα πρόγραμμα, εντολή ενός παράθυρου διαλόγου.
0 Str
-1 Dialog

# Title
1 Dans un programme, instruction d'une boite de dialogue.
2 In a program, instruction of a dialog box.
3 En un programa, instrucción de una caja de diálogo.
4 Σε ένα πρόγραμμα, εντολή ενός παράθυρου διαλόγου.
0 Str
-1 Dialog

# Dialog EndDlog
1 Dans un programme, fait des entrées :Dialog{Title("titre");Text("Eleve"+ string(c));Request("Nom=",a);Request("Age=",b);DropDown("Niveau",["un","deux"],n);} (on peut remplacer {} en mettant EndDlog à la fin).
2 In a program, do inputs :Dialog{Title("title");Text("Pupil"+ string(c));Request("Name=",a);Request("Age=",b);DropDown("Level",["un","deux"],n);} (you can replace {} with EndDlog at the end).
3 En un programa, crea entradas: Dialog{Title("título");Text("Alumno"+string(c));Request("Nombre=",a);Request("Edad=",b);DropDown("Nivel",["un","dos"],n);} (se puede reemplazar {} con EndDlog al final).
4 Σε ένα πρόγραμμα, εκτελεί καταχωρήσεις :Dialog{Title("title");Text("Pupil"+ string(c));Request("Name=",a);Request("Age=",b);DropDown("Level",["un","deux"],n);} (το {} μπορεί να αντικατασταθεί με EndDlog στο τέλος).
0 Title;Text;Request;Request;DropDown;EndDlog
-1 DropDown
-2 Request
-3 Text
-4 Title
 Dialog Title("section TS");Text("Pupil"+ string(c));Request("Name=",a);Request("Age=",b);DropDown("Level",["un","deux"],n);EndDlog

# choosebox PopUp
1 Dans un programme, fait une entrée avec affichage d'une liste de choix.
2 In a program, do an input with a display of a choose list.
3 En un programa, crea una entrada mostrando una lista de elección.
4 Σε ένα πρόγραμμα, εκτελεί μία καταχώρηση με εμφάνιση μιας λίστας επιλογών.
0 Str(titel),LstVal,Var
-1 Dialog
choosebox("titre",["un","deux","trois"],a)
choosebox("valeur de a",[-1,0,1],a)

# rdiv
1 Division de a par b (version préfixée de /).
2 Division of a by b (prefixed version of /).
3 División de a por b (versión prefija de /).
4 Διαίρεση του a με b (προτεθειμένη εκδοχή του /).
0 Expr(a),Expr(b)
-1 /
rdiv(3,5)
rdiv(3.2,5.4)

# unapply
1 Renvoie une fonction définie à partir d'une expression.
2 Returns a function defined by an expression.
3 Devuelve una función definida por una expresión.
4 Επιστρέφει μια συνάρτηση που ορίζεται από μια παράσταση.
0 Expr,Var
-1 apply
unapply(2*x^2,x)
 f(x):=x*exp(x);g:=unapply(diff(f(x),x),x)

# RandSeed
1 Initialise les nombres aléatoires.
2 Initializes random numbers.
3 Reinicia números aleatorios.
4 Αρχικοποιεί τυχαίους αριθμούς.
0 Intg
-1 srand
RandSeed(321)

# semi_augment
1 Renvoie une matrice formé de A et de B ayant n1+n2 lignes et p colonnes si dim(A)=[n1,p] et dim(B)=[n2,p].
2 Returns a matrix made with A and B, with n1+n2 rows and p columns if dim(A)=[n1,p] and dim(B)=[n2,p].
3 Devuelve una matriz formada por A y B, con n1+n2 filas y p columnas si dim(A)=[n1,p] y dim(B)=[n2,p].
4 Επιστρέφει ένα πίνακα που δημιουργείται από τους Α και Β με n1+n2 γραμμές and p στήλες αν dim(A)=[n1,p] και dim(B)=[n2,p].
0 Mtrx(A),Mtrx(B)
-1 augment
semi_augment([[68,-21],[56,59],[1,2]],[[68,-21],[56,59]])

# goto
1 Dans un programme, permet de sauter à l'instruction repérée par le label nom.
2 In a program, is used to jump to an instruction with the label nom.
3 En un programa, se usa para saltar a la instrucción con la etiqueta nom.
4 Σε ένα πρόγραμμα χρησιμοποιείται για άλμα σε εντολή με την ετικέτα nom.
0 Var(nom)
-1 label
 essai(a):={label truc;a:=a+2;if (a<10) goto truc;print(a);}

# label
1 Dans un programme, permet de repérer une instruction par le label nom.
2 In a program, is used to mark an instruction with the label nom.
3 En un programa, se usa para marcar una instrucción con la etiqueta nom.
4 Σε ένα πρόγραμμα χρησιμοποιείται για επισήμανση εντολής με την ετικέτα nom.
0 Var(nom)
-1 goto
 essai(a):={label truc;a:=a+2;if (a<10) goto truc;print(a);}

# lsmod
1 Affiche les librairies dynamiques installées.
2 Displays the installed dynamic libraries.
3 Muestra las librerías dinámicas instaladas.
4 Εμφανίζει τις εγκατεστειμένες δυναμικές βιβλιοθήκες.
0 NULL
-1 insmod
-2 rmmod
lsmod()

# insmod
1 Installe un module dynamique en créant les commandes qui sont, par exemple, dans le fichier libprogfr.so en mettant le chemin d'accès à ce fichier.
2 Installs a dynamic module creates the commands that are, for example, in the file libprogfr.so putting the pwd of this file.
3 Instala un módulo dinámico creando los comandos que están, por ejemplo, en el fichero libprogfr.so poniendo la dirección de este archivo.
4 Εγκαθιστά μια δυναμική ενότητα και δημιουργεί τις εντολές που είναι, για παράδειγμα, στο αρχείο libprogfr.so δίνοντας την διαδρομή αυτού του αρχείου.
0 Str(pwd)
-1 rmmod
-2 lsmod
insmod("/home/parisse/giac/src/libprogfr.so")

# rmmod
1 Supprime les librairies dynamiques installées.
2 Removes the installed dynamic libraries.
3 Borra las librerías dinámicas instaladas.
4 Απομανρύνει τις εγκατεστειμένες δυναμικές βιβλιοθήκες.
0 Str(pwd)
-1 lsmod
-2 insmod
rmmod("/home/parisse/giac/src/libprogfr.so")

# widget_size
1 Change la taille de l'affichage des caractères sur l'écran xcas (taille=n) et avec plus de paramètres définit la configuration générale.
2 Changes the characters size of the display on the xcas screen (size=n) and with more parameters define the general configuration.
3 Cambia el tamaño de los carácters de la pantalla en xcas (tamaño=n) y con más parámetros define la configuración general.
4 Μεταβάλλει το μέγεθος των χαρακτήρων στην οθόνη Xcas (size = n) και με περισσότερες παραμέτρους καθορίζει τις γενικές ρυθμίσεις.
0 Intg(n)
-1 cas_setup
widget_size(20)
widget_size(8)
widget_size(20,58,49,697,563,1,1,0)

# CyclePic
1 Réalise un enchaînement automatique de n images (stockées avec StoPic par exemple sous les noms des1,des2,des3...desn). L'affichage est fait n fois avec une pause de p secondes entre chaque image.
2 Realizes an automatic sequence of n pictures (stored with StoPic for example with name des1,des2,des3..desn). The display is done n times with a pause p seconds between each picture.
3 Realiza una secuencia automática de n imágenes (guardados con StoPic por ejemplo con nombres des1,des2,des3..desn). La visualización se hace n veces con una pausa de p segundos entre cada gráfico.
4 Πραγματοποιεί μια αυτόματη εναλλαγή n εικόνων (αποθηκευμένων στο StoPic για παράδειγμα με ονόματα des1, des2, des3..desn). Η προβολή γίνεται n φορές με μια παύση p δευτερολέπτων μετά από κάθε εικόνα.
0 Str(),Intg(n),Real(p),Intg(n)
-1 StoPic
CyclePic("des",3,0.5,4)

# StoPic
1 Pour stocker des graphiques dans des variables de noms ayant même radical (radical1,radical2..) pour pouvoir faire ensuite une animation avec CyclePic.
2 To store graphics in variables with same root-name (radical1,radical2..) and then we can animate the graphics with CyclePic.
3 Para guardar gráficos en variables con el mismo nombre raíz (radical1,radical2..) y poder animarlos con CyclePic.
4 Αποθηκεύει γραφικά σε μεταβλητές με το ίδιο όνομα-ρίζας (radical1, radical2 ..) και στη συνέχεια μπορεί και δημιουργεί εφέ κίνησης με την εντολή CyclePic.
0 Var
-1 CyclePic
StoPic(des1)
StoPic(des2)
StoPic(des3)

# SortA
1 Trie, en modifiant la valeur de l'argument, les listes par ordre croissant (comme TI) ou la 1ière ligne d'une matrice selon l'ordre croissant en conservant les colonnes.
2 Sorts the lists with increasing order (like TI).
3 Ordena las listas en orden creciente (like TI).
4 Ταξινομεί τις λίστες σε αύξουσα τάξη (like TI).
0 LstReal||Seq||Mtrx
-1 SortD
-2 sorta
-3 sort
 SortA [3,4,2]
 SortA 3,4,2
 SortA [3,4,2],[6,4,5]
 SortA [[3,4,2],[6,4,5]]

# SortD
1 Trie, en modifiant la valeur de l'argument, les listes par ordre décroissant (comme TI) ou la 1ière ligne d'une matrice selon l'ordre décroissant en conservant les colonnes.
2 Sorts the lists with decreasing order (like TI).
3 Ordena las listas en orden decreciente (like TI).
4 Ταξινομεί τις λίστες σε φθίνουσα τάξη (like TI).
0 LstReal||Seq||Mtrx
-1 SortA
-2 sortd
-3 sort
 SortD [3,4,2]
 SortD 3,4,2
 SortD [[3,4,2],[6,4,5]]
 SortD [3,4,2],[6,4,5]

# sorta
1 Trie les listes par ordre croissant ou la 1ière ligne d'une matrice selon l'ordre croissant en conservant les colonnes.
2 Sorts the lists with increasing order or the first matrix row with increasing order and with the same columns.
3 Ordena las listas en orden creciente.
4 Ταξινομεί τις λίστες σε αύξουσα τάξη.
0 LstReal||Seq×||Mtrx
-1 SortA
-2 sortd
-3 sort
sorta(3,4,2)
sorta([3,4,2])
sorta([[3,4,2],[6,4,5]])

# sortd
1 Trie les listes par ordre décroissant ou la 1ière ligne d'une matrice selon l'ordre décroissant en conservant les colonnes.
2 Sorts the lists with decreasing order or the first matrix line with decreasing order and with the same columns.
3 Ordena las listas en orden decreciente.
4 Ταξινομεί τις λίστες σε φθίνουσα τάξη.
0 LstReal||Seq||Mtrx
-1 SortD
-2 sorta
-3 sort
sortd(3,4,2)
sortd([3,4,2])
sortd([[3,4,2],[6,4,5]])

# restart
1 Purge toutes les variables.
2 Purges all the variables.
3 Purga todas las variables.
4 Εκκαθαρίζει όλες τις μεταβλητές.
0 NULL
-1 purge
restart

# product mul
1 Produit des valeurs de l'expression quand la variable va de a à b avec un pas p (product(expression,var,debut,fin,pas) par défaut p=1) ou produit des éléments d'une liste ou produit terme à terme des éléments de 2 listes ou matrices.
2 Multiplicates the values of the expression when the variable go from a to b with a step p (product(expression,var,begin,end,step) by default p=1) or product of the elements of a list or product element by element of 2 lists or matrix.
3 Producto de los valores de la expresión cuando la variable va desde a hasta b con paso p (product(expresión,var,inicio,fin,paso) por defecto p=1) o producto de elementos de una lista o producto componente por componente de 2 listas o matrices.
4 Γινόμενο των τιμών της παράστασης όταν η μεταβλητή πάει από το Α στο Β με βήμα p (product(expression,var,begin,end,step) με προεπιλογή p = 1) ή γινόμενο των στοιχείων μιας λίστας ή γινόμενο στοιχείο-στοιχείο 2 λιστών ή πινάκων.
0 Expr||Lst,[Var||Lst],[Intg(a)],[Intg(b)],[Intg(p)]
-1 sum
product(n,n,1,10,2)
product(1/n,n,1,10)
product(1/n,n,11,1)
product(1/n,n,10,1,1)
product([2,3,4,5])
product([2,3,4],[5,6,7])
product([[2,3,4],[5,6,7]],[[2,3,4],[5,6,7]])

# maple_ifactors
1 Renvoie 1 ou -1 pour le signe et les facteurs premiers avec leur ordre de multiplicité de n sous la forme d'une matrice comme ifactors en Maple.
2 Returns 1 or -1 for the sign and the prime factors with their multiplicity of n in a matrix such as ifactors in Maple.
3 Devuelve 1 o -1 para el signo y los factores primos con su multiplicidad de n en una matriz como ifactors en Maple.
4 Επιστρέφει 1 ή -1 για το πρόσημο και τους πρώτους παράγοντες του n μαζί με την πολλαπλότητα τους σε μορφή πίνακα, όπως ifactors στο Maple.
0 Intg(n)
-1 ifactors
maple_ifactors(120)

# .+
1 Exécute l'addition terme à terme de 2 listes ou de 2 matrices ou ajoute $a$ à chaque terme de la liste ou de la matrice (opérateur infixé, compatibilité TI).
2 Performs an element by element addition of 2 lists or 2 matrix or add $a$ at each element of the list or matrix (infixed operator, TI compatibility).
3 Ejecuta la suma componente por componente de 2 listas o 2 matrices (operador infijo, compatibilidad TI).
4 Εκτελεί πρόσθεση στοιχείο-στοιχείο 2 λιστών ή 2 πινάκων (εντεθειμένος τελεστής, συμβατότητα με TI).
0 Lst||Mtrx, Real(a)||Lst||Mtrx
-1 .-
 [1,2,3].+4
 [[1,2],[3,4]].+5
 [[1,2],[3,4]].+[5,6]
 [[1,2],[3,4]].+[[3,4],[5,6]]
 [1,2] .+ [5,6]

# .-
1 Exécute la soustraction terme à terme de 2 listes ou de 2 matrices ou retranche $a$ à chaque terme de la liste ou de la matrice (opérateur infixé, compatibilité TI).
2 Performs an element by element subtraction of 2 lists or 2 matrix or substract $a$ at each element of the list or matrix (infixed operator, TI compatibility).
3 Ejecuta la resta componente por componente de 2 listas o 2 matrices (operador infijo, compatibilidad TI).
4 Εκτελεί αφαίρεση στοιχείο-στοιχείο 2 λιστών ή 2 πινάκων (εντεθειμένος τελεστής, συμβατότητα με TI).
0 Lst||Mtrx,Real(a)||Lst||Mtrx
-1 .+
 [1,2,3].-4
 [[1,2],[3,4]].-5
 [[1,2],[3,4]] .- [[3,4],[5,6]]
 [1,2] .- [5,6]

# ./
1 Exécute la division terme à terme de 2 listes ou de 2 matrices (opérateur infixé, compatibilité TI).
2 Performs an element by element division of 2 lists or 2 matrix (infixed operator, TI compatibility).
3 Ejecuta la división componente por componente de 2 listas o 2 matrices (operador infijo, compatibilidad TI).
4 Εκτελεί διαίρεση στοιχείο-στοιχείο 2 λιστών ή 2 πινάκων (εντεθειμένος τελεστής, συμβατότητα με TI).
0 Lst||Mtrx,Lst||Mtrx
-1 .*
 [[1,2],[3,4]] ./ [[3,4],[5,6]]
 [1,2] ./ [5,6]

# .*
1 Exécute le produit terme à terme de 2 listes ou de 2 matrices de même dimension (opérateur infixé, compatibilité TI).
2 Performs an element by element multiplication of 2 lists or 2 matrix with the same size dimension (infixed operator, TI compatibility).
3 Ejecuta el producto componente por componente de 2 listas o 2 matrices con el mismo dimensión(operador infijo, compatibilidad TI).
4 Εκτελεί πολλαπλασιασμό στοιχείο-στοιχείο 2 λιστών ή 2 πινάκων με τον ίδιο διάσταση (εντεθειμένος τελεστής, συμβατότητα με TI).
0 Lst||Mtrx,Lst||Mtrx
-1 hadamard
-2 ./
-3 .^
 [[1,2],[3,4]] .* [[3,4],[5,6]]
 [1,2] .* [5,6]

# .^
1 Élève à la puissance chaque élément de la matrice (opérateur infixé, compatibilité TI).
2 Calculates the power of each element of the matrix (infixed operator, TI compatibility).
3 Calcula la potencia de cada elemento de la matriz (operador infijo, compatibilidad TI).
4 Υπολογίζει τη δύναμη κάθε στοίχειου του πίνακα (εντεθειμένος τελεστής, συμβατότητα με TI).
0 Mtrx,Intg(n)
-1 .*
 [[1,2],[3,4]] .^ 3

# &^
1 Élève la matrice à la puissance n (opérateur infixé, &^ compatibilité Maple).
2 Calculates the n power of the matrix (infixed operator, &^ Maple compatibility).
3 Calcula la potencia n-ésima de la matriz (operador infijo,&^ compatibilidad Maple).
4 Υπολογίζει τη n-στη δύναμη του πίνακα (εντεθειμένος τελεστής, &^ συμβατότητα με Maple).
0 Mtrx,Intg(n)
-1 ^
 [[1,2],[3,4]] &^ 3
 [[1,2],[3,4]] &^ n

# ^
1 Élève un nombre à la puissance n (opérateur infixé).
2 Calculates the n power of a number (infixed operator).
3 Calcula la potencia n-ésima de un número (operador infijo).
4 Υπολογίζει τη n-στη δύναμη ενός αριθμού του πίνακα (εντεθειμένος τελεστής).
8 返回 a 的 n 次幂的结果。
0 Expr(a),Intg(n)
-1 &^
-2 matpow
-3 .^
-4 sqrt
-5 surd
-6 pow
-7 powmod
 2^12
 [[1,2],[3,4]] ^ 3

# matpow
1 Élève une matrice carrée à la puissance n en la jordanisant
2 Calculates the n power of a matrix by jordanization
3 Calcula la potencia n-ésima de una matriz cuadrada por jordanización
4 Υψώνει έναν τετραγωνικό πίνακα στην δύναμη n με Jordan-οποίηση
0 Mtrx,Intg(n)
-1 &^
-2 ^
matpow([[1,2],[3,4]],n)

# &*
1 Multiplication de 2 matrices (opérateur infixé, &* compatibilité Maple).
2 Matrix multiplication (infixed operator, &* Maple compatibility).
3 Producto de matrices (operador infijo, &* compatibilidad Maple).
4 Πολλαπλασιασμός πινάκων (εντεθειμένος τελεστής, &* συμβατότητα με Maple).
0 Mtrx,Mtrx
-1 *
 [[1,2],[1,4]] &* [[1,2],[3,4]]

# +
1 Concaténation de 2 chaînes ou addition terme à terme de 2 expressions ou 2 listes ou 2 matrices ou de 2 points (opérateur infixé).
2 String concatenation or addition element by element of 2 expressions or 2 lists or 2 matrix or of 2 points (infixed operator).
3 Concatenación de 2 cadenas o suma componente por componente de 2 expresiónes o 2 listas o 2 matrices o 2 puntos (operador infijo).
4 Συνένωση αλφαριθμητικών ή πρόσθεση στοιχείο-στοιχείο 2 παραστάσεων ή 2 λιστών ή 2 πινάκων  ή 2 σημεία (εντεθειμένος τελεστής).
0 Str||Lst||Expr||Pnt, Str||Lst||Expr||Pnt
-1 concat
-2 .+
 "bon"+"jour"
 1+2
 [1,2]+[3,4,5]
 point(2+i)+point(1+2i)
 point(1+2*i)+2+i

# -
1 soustraction terme à terme de 2 expressions ou 2 listes ou 2 matrices ou de 2 points (opérateur infixé).
2 substraction element by element of 2 expressions or 2 lists or 2 matrix or of 2 points (infixed operator).
3 resta componente por componente de 2 expresiónes o 2 listas o 2 matrices o 2 puntos (operador infijo).
4 αφαίρεσ στοιχείο-στοιχείο 2 παραστάσεων ή 2 λιστών ή 2 πινάκων ή 2 σημεία (εντεθειμένος τελεστής).
0 Lst||Expr||Pnt, ||Lst||Expr||Pnt
-1 .-
 1-2
 [1,2]-[3,4,5]
 point(2+i)-point(1+2i)
 point(2+i)-(1+2i)

# +&
1 Concaténation de 2 chaînes ou addition terme à terme de 2 expressions ou 2 listes ou 2 matrices (opérateur infixé, compatibilité TI).
2 String concatenation or addition element by element of 2 expressions or 2 lists or 2 matrix (infixed operator, TI compatibility).
3 Concatenación de 2 cadenas o suma componente por componente de 2 expresiónes o 2 listas o 2 matrices (operador infijo, compatibilidad TI).
4 Συνένωση αλφαριθμητικών ή πρόσθεση στοιχείο-στοιχείο 2 παραστάσεων ή 2 λιστών ή 2 πινάκων (εντεθειμένος τελεστής, συμβατότητα με TI).
0 Str||Lst, Str||Lst, Expr||Expr
-1 concat
 "bon"+&"jour"
 1+&2
 [1,2]+&[3,4,5]

# inputform
1 Dans un programme, est utilisé pour faire des entrées.
2 In a program, is used to do inputs.
3 En un programa, utilizado para hacer entradas.
4 Σε ένα πρόγραμμα, χρησιμοποιείται για καταχωρήσεις.
0 [Str],Var,[Str],[Var],[Str],[Var]
-1 
inputform("a=?",a,"b=?",b)
inputform(a,b)

# #
1 Transforme (dans un programme Xcas) une chaîne en le nom d'une variable. Suppose que le programme commence par // pour desactiver la compatibilite Python.
2 Transforms (in a Xcas program) a string into the name of a variable. Assumes the program begins with // in order to avoid Python compatibility check.
3 Transforma (en un programa Xcas) una cadena en el nombre de una variable.
4 Μετατρέπει (σε ένα πρόγραμμα Xcas) ένα αλφαριθμητικό στο όνομα μιας μεταβλητής.
0 Str
-1 input
 #("a")

# fMax
1 Retourne l'abscisse du maximum de l'expression.
2 Returns the abscissa of the maximum of the expression.
3 Devuelve la abscisa del máximo de la expresión.
4 Επιστρέφει την τετμημένη του μέγιστου της παράστασης.
0 Expr,[Var]
-1 fMin
fMax(-x^2+2*x+1,x)
fMax(-x^2+2*x+1,x=1..2)

# fMin
1 Retourne l'abscisse du minimum de l'expression.
2 Returns the abscissa of the minimum of the expression.
3 Devuelve la abscisa del mínimo de la expresión.
4 Επιστρέφει την τετμημένη του ελάχιστου της παράστασης.
0 Expr,[Var]
-1 fMax
fMin(x^2-2*x+1,x)
fMin(x^2-2*x+1,x=1..2)
fMin((x-3)^2+(y-5)^2+1,[],[x,y],[1,1])
fMin((x-3)^2+(y-5)^2+1,[x+y^2=1],[x,y],[1,1])

# DrawInv
1 Trace le graphe du symétrique de l'expression par rapport à y=x.
2 Draws the graph of the symmetric of the expression with respect to y=x.
3 Traaza el gráfico del simétrico de la expresión con respecto a y=x.
4 Σχεδιάζει το γράφημα της συμμετρικής της παράστασης σε σχέση με τη y = x.
0 Expr,[Var]
-1 plotfunc
DrawInv(exp(x))

# cFactor cfactor factoriser_sur_C
1 Factorisation de l'expression dans ℂ (sur les entiers de Gauss si on a plus de 2 variables).
2 Factorization of the expression in ℂ (on the Gauss integers if there are more than 2 variables).
3 Factorización de la expresión en ℂ (en los Gauss enteros si hay más de 2 variables).
4 Παραγοντοποιεί την παράσταση στο ℂ (στους Gauss ακεραίους αν υπάρχουν περισσότερες από 2 μεταβλητές).
0 Expr
-1 factor
cFactor(x^2*y+y)
cFactor(x^2*y^2+y^2+4*x^2+4)
cFactor(x^2*y^2+y^2+2*x^2+2)

# atrig2ln
1 Réécrit l'expression contenant des fonctions trigonométriques inverses avec des logarithmes.
2 Rewrites the expression containing inverse trigonometric functions with logarithmic functions.
3 Reescribe la expresión conteniendo funciones trigonométricas inversas con funciones logarítmicas.
4 Ξαναγράφει, με λογαριθμικές συναρτήσεις, την παράσταση που περιέχει αντίστροφες τριγωνομετρικές συναρτήσεις.
0 Expr
-1 trig2exp
-2 exp2trig
atrig2ln(atan(x))
atrig2ln(asin(x))
atrig2ln(acos(x))

# LineHorz
1 Dessine la droite horizontale y=a.
2 Draws the horizontal line y=a.
3 Traza la recta horizontal y=a.
4 Σχεδιάζει μια οριζόντια ευθεία y=a.
0 Expr(a)
-1 Line
-2 LineVert
LineHorz(-1)

# Line
1 Dessine le segment [a+i*b,c+i*d].
2 Draws the segment [a+i*b,c+i*d].
3 Traza el segmento [a+i*b,c+i*d].
4 Σχεδιάζει το ευθύγραμμο τμήμα [a+i*b,c+i*d].
0 Expr(a),Expr(b),Expr(c),Expr(d)
-1 segment
Line(-1,-2,1,2)

# LineVert
1 Dessine la droite verticale x=a.
2 Draws the vertical line x=a.
3 Traza la recta vertical x=a.
4 Σχεδιάζει μια κάθετη ευθεία x=a.
0 Expr(a)
-1 Line
-2 LineHorz
LineVert(2)

# plot3d graphe3d
1 Efface et trace le graphe d'une fonction ou d'une expression de 2 variables ou d'une surface paramétrée par une liste de 3 fonctions ou de 3 expressions de 2 variables.
2 Erase and plot a 2 variable expression or of a surface defined with a list of the 3 functions or of 3 expression of 2 variables.
3 Borra y traza el gráfico de una función o de una expresión de 2 variables o de una superficie parametrizada por una lista de 3 funciones o de 3 expresiones de 2 variables.
4 Διαγράφει και σχεδιάζει το γράφημα μιας παράστασης 2 μεταβλητών ή μιας επιφάνειας που ορίζεται από μια λίστα 3 συναρτήσεων ή 3 παραστάσεων των 2 μεταβλητών.
0 Expr||Lst(3*Expr),Var,Var
-1 plotfunc
-2 animate3d
plot3d(x^2+y^2+1,x,y)
plot3d(x^2+y^2,x=-1..1,y=-2..2)
plot3d([u+1,2*v,u^2+v^2],u=-1..1,v=-2..2)
plot3d(f,-1..1,-2..2)
plot3d([f,g,h],-1..1,-2..2)

# subMat
1 Extrait une sous matrice de premier élément A[n1,n2] et de dernier élément A[n3,n4].
2 Extracts a sub matrix with first element=A[n1,n2] and last element=A[n3,n4].
3 Extrae una sub-matriz cuyo primer elemento es A[n1,n2] y el último es A[n3,n4].
4 Εξάγει ένα υποπίνακα με πρώτο στοιχείο=A[n1,n2] και τελευταίο=A[n3,n4].
8 从一个对象中提取一个子对象，比如一个矩阵。
0 Mtrx(A),Intg(n1),Intg(n2),Intg(n3),Intg(n4).
-1 mid
subMat([[1,2],[3,4],[5,6]],1,0,2,1)

# table
1 Définit un tableau indicé par des chaînes ou des nombres réels ou définit une table à partir d'une matrice.
2 Defines an array where the index are strings or real numbers or defines a table with a matrix.
3 Define una matriz cuyos índices son cadenas o números reales o define una table a partir de matriz .
4 Ορίζει έναν πίνακα όπου οι δείκτες είναι συμβολοσειρές ή πραγματικοί αριθμοί.
0 SeqEqual(index=value)
-1 matrix
-2 convert
-3 array
table(3=-10,"a"=10,"b"=20,"c"=30,"d"=40)
 A:=[[0,1],[2,3]];table(A)  
 B:=table([1,2]=12,[2,5]=25);matrix(B)

# read ramene
1 Pour lire dans le fichier fich_name les variables et leurs valeurs.
2 To read in the file fich_name the variables and their values.
3 Para leer en el archivo fich_name las variables y sus valores.
4 Διαβάζει από το αρχείο όνομα_αρχείου τις μεταβλητές και τις τιμές τους.
0 Str(fich_name)
-1 write
-2 readrgb
-3 readwav
-4 csv2gen
read("toto")

# write sauve
1 Pour écrire dans le fichier fich_name les variables et leurs valeurs.
2 To write in the file fich_name the variables and their values.
3 Para escribir en el archivo fich_name las variables y sus valores.
4 Εγγράφει στο αρχείο όνομα_αρχείου τις μεταβλητές και τις τιμές τους.
0 Str(fich_name),SeqVar
-1 read
write("toto",a,b,c)

# csv2gen
1 Lit un fichier (ou une chaine) au format CSV
2 Reads a file (or string) in CSV format
0 Strng(filename),Strng(sep),Strng(nl),Strng(decsep),Strng(eof),[string]
-1 read
csv2gen("mat.txt",",",char(10),".")

# nodisp
1 Pour afficher Done au lieu d'une valeur.
2 To display Done in place of a value.
3 Para mostrar Done en lugar de un valor.
4 Εμφανίζει τη λέξη Done στη θέση μιας τιμής.
0 Expr
nodisp(A:=ranm(50,50))

# subsop
1 Remplace dans la liste (ou la matrice) l'élément d'indice n par l'expression (en Maple les arguments sont permutés)(NULL supprime cet élément).
2 Replaces in the list (or the matrix) the element of index n with the expression (with Maple the arguments are switched over)(NULL remove this element).
3 Reemplaza en la lista (o la matriz) el elemento de índice n por la expresión (con Maple los argumentos son permutados)(NULL suprime este elemento).
4 Αντικαθιστά στη λίστα (ή τον πίνακα), το στοιχείο με δείκτη n με την παράσταση (στο Maple τα ορίσματα είναι αντιμεταθετημένα) (NULL καταργεί αυτό το στοιχείο).
0 Lst||Mtrx,Intg(n)=Expr
subsop([0,1,2,3,4],2=sqrt(2)+1)
subsop([[1,2],[3,4]],[1,1]=5)
subsop([[1,2],[3,4]],1=[10,8])
subsop([0,1,2,3],'1=NULL')

# mRowAdd
1 Multiplie la ligne n1 de la matrice A par Xpr, puis l'ajoute à la ligne n2.
2 Multiplies the row n1 of the matrix A by Xpr, then adds it to the row n2.
3 Multiplica la fila n1 de la matriz A por Xpr, y lo añade a la fila n2.
4 Πολλαπλασιάζει τη γραμμή n1 του πίνακα Α με την παράσταση Xpr, και μετά την προσθέτει στη γραμμή n2.
0 Expr(Xpr),Mtrx(A),Intg(n1),Intg(n2)
-1 rowAdd
-2 mRow
mRowAdd(12,[[1,2],[3,4],[5,6]],0,2)

# scaleadd SCALEADD
1 Multiplie la ligne n1 de la matrice A par Xpr, puis l'ajoute à la ligne n2.
2 Multiplies the row n1 of the matrix A by Xpr, then adds it to the row n2.
3 Multiplica la fila n1 de la matriz A por Xpr, y lo añade a la fila n2.
4 Πολλαπλασιάζει τη γραμμή n1 του πίνακα Α με την παράσταση Xpr, και μετά την προσθέτει στη γραμμή n2.
0 Mtrx(A),Expr(Xpr),Intg(n1),Intg(n2)
-1 rowAdd
-2 scale
-3 mRow
scaleadd([[1,2],[3,4],[5,6]],12,0,2)

# mRow 
1 Multiplie la ligne n1 de la matrice A par Xpr.
2 Multiplies the row n1 of the matrix A by Xpr.
3 Multiplica la fila n1 de la matriz A por Xpr.
4 Πολλαπλασιάζει την γραμμή n1 του πίνακα Α με την παράσταση Xpr.
0 Expr(Xpr),Mtrx(A),Intg(n1)
-1 rowAdd
-2 mRowAdd
mRow(12,[[1,2],[3,4],[5,6]],0)

# scale SCALE
1 Multiplie la ligne n1 de la matrice A par Xpr.
2 Multiplies the row n1 of the matrix A by Xpr.
3 Multiplica la fila n1 de la matriz A por Xpr.
4 Πολλαπλασιάζει την γραμμή n1 του πίνακα Α με την παράσταση Xpr.
0 Mtrx(A),Expr(Xpr),Intg(n1)
-1 rowAdd
-2 scaleadd
-3 mRowAdd
scale([[1,2],[3,4],[5,6]],12,0)

# mathml
1 Convertit l'expression en une chaîne qui permet d'afficher des maths pour le web.
2 Converts the expression into a string so that we can display maths for the web.
3 Convierte la expresión en una cadena que permite mostrar matemáticas en la web.
4 Μετατρέπει την παράσταση σε μια συμβολσειρά ώστε να μπορέσει να εμφανίσει τα μαθηματικά στο διαδίκτυο.
0 Expr
-1 export_mathml
-2 latex
mathml(1/2)

# export_mathml
2 Converts an expression to presentation or content MathML block.
0 Expr,[display||content]
-1 mathml
-2 latex
export_mathml(a+2*b)
export_mathml(a+2*b,display)
export_mathml(a+2*b,content)

# xml_print
2 Indents a XML code given in a string (pretty print).
0 Str
-1 export_mathml
xml_print(export_mathml(a+2*b))

# fracmod iratrecon
1 Retourne la fraction a/b tel que b*Xpr=a mod n, -sqrt(n)/2<a<=sqrt(n)/2 et 0<=b<sqrt(n)/2.
2 Returns the fraction a/b such as b*Xpr=a mod n, -sqrt(n)/2<a<=sqrt(n)/2 and 0<=b<sqrt(n)/2.
3 Devuelve la fracción a/b tal que b*Xpr=a mod n, -sqrt(n)/2<a<=sqrt(n)/2 y 0<=b<sqrt(n)/2.
4 Επιστρέφει το κλάσμα a/b τέτοιο ώστε b*Xpr=a mod n, -sqrt(n)/2<a<=sqrt(n)/2 και 0<=b<sqrt(n)/2.
0 Expr(Xpr),Intg(n)
-1 mod
-2 smod
fracmod(41,121)

# Beta
1 Beta(a,b)=int(t^(a-1)*(1-t)^(b-1),t=0..1), Beta(a,b,p)=int(t^(a-1)*(1-t)^(b-1),t=0..p), Beta(a,b,p,1)=Beta(a,b,p)/Beta(a,b). (Beta(x,y) renvoie Gamma(x)*Gamma(y)/Gamma(x+y)).
2 Beta(a,b)=int(t^(a-1)*(1-t)^(b-1),t=0..1), Beta(a,b,p)=int(t^(a-1)*(1-t)^(b-1),t=0..p), Beta(a,b,p,1)=Beta(a,b,p)/Beta(a,b).(Beta(x,y) returns Gamma(x)*Gamma(y)/Gamma(x+y)).
3 Beta(a,b)=int(t^(a-1)*(1-t)^(b-1),t=0..1), Beta(a,b,p)=int(t^(a-1)*(1-t)^(b-1),t=0..p), Beta(a,b,p,1)=Beta(a,b,p)/Beta(a,b).(Beta(x,y) devuelve Gamma(x)*Gamma(y)/Gamma(x+y)).
4 Beta(a,b)=int(t^(a-1)*(1-t)^(b-1),t=0..1), Beta(a,b,p)=int(t^(a-1)*(1-t)^(b-1),t=0..p), Beta(a,b,p,1)=Beta(a,b,p)/Beta(a,b).(Beta(x,y) eπιστρέφει Gamma(x)*Gamma(y)/Gamma(x+y)).
0 Expr,Expr,[Expr],[1]
-1 Gamma
-2 igamma
Beta(x,y)
Beta(3,2)
Beta(3,2,0.5)
Beta(3,2,0.5,1)

# cat
1 Évalue les arguments, puis les concatène en une chaîne.
2 Evaluates the arguments, then concatenates them into a string.
3 Evalua los argumentos, y los concatena en una cadena.
4 Υπολογίζει τα ορίσματα και μετά τα συνενώνει σε μια συμβολοσειρά.
0 SeqObj
-1 concat
cat("aaa",c,12*3)

# compare
1 Renvoie 1 si type(arg1)<type(arg2) ou si type(arg1)=type(arg2) et arg1<arg2, sinon renvoie 0.
2 Returns 1 if type(arg1)<type(arg2) or if type(arg1)=type(arg2) and arg1<arg2, else returns 0.
3 Devuelve 1 si type(arg1)<type(arg2) o si type(arg1)=type(arg2) y arg1<arg2, si no, devuelve 0.
4 Επιστρέφει 1 αν type(arg1)<type(arg2) ή αν type(arg1)=type(arg2) και arg1<arg2, διαφορετικά 0
0 Obj(arg1),Obj(arg2)
-1 type
compare(1,2)
compare(1.0,2)
compare("ab","cd")

# Col
1 Renvoie l'indice de la colonne de la cellule mise en surbrillance dans le tableur.
2 Returns the index of the column of the lightened cell in the matrixwriter.
3 Devuelve el índice de la columna de la celda señalada en el editor de matrices.
4 Επιστρέφει τον δείκτη της στήλης του επισημασμένου κελιού στο υπολογιστικό φύλλο.
0 NULL
-1 Row
Col()

# Row
1 Renvoie l'indice de la ligne de la cellule mise en surbrillance dans le tableur.
2 Returns the index of the row of the lightened cell in the matrixwriter.
3 Devuelve el índice de la fila de la celda señalada en el editor de matrices.
4 Επιστρέφει τον δείκτη της γραμμής του επισημασμένου κελιού στο υπολογιστικό φύλλο.
0 NULL
-1 Col
Row()

# heugcd
1 PGCD de 2 polynômes avec l'algorithme dit du pgcd heuristique.
2 GCD of 2 polynomials, with the algorithm called heuristic pgcd.
3 MCD de 2 polinomios, con el algoritmo pgcd heurístico.
4 ΜΚΔ 2 πολυωνύμων, με τον αλγόριθμο heuristic pgcd.
0 Poly,Poly
-1 gcd
-2 modgcd
-3 ezgcd
-4 psrgcd
heugcd(x^4-1,(x-1)^2)

# modgcd
1 PGCD de 2 polynômes avec l'algorithme modulaire.
2 GCD of 2 polynomials, with the modular algorithm.
3 MCD de 2 polinomios, con el algoritmo modular.
4 ΜΚΔ 2 πολυωνύμων, με τον modular αλγόριθμο.
0 Poly,Poly
-1 gcd
-2 heugcd
-3 ezgcd
-4 psrgcd
modgcd(x^4-1,(x-1)^2)

# psrgcd
1 PGCD de 2 polynômes avec l'algorithme du sous résultant.
2 GCD of 2 polynomials, with the sub resultant algorithm.
3 MCD de 2 polinomios, con el algoritmo sub resultante.
4 ΜΚΔ 2 πολυωνύμων, με τον αλγόριθμο sub resultant.
0 Poly,Poly
-1 gcd
-2 modgcd
-3 ezgcd
-4 heugcd
psrgcd(x^4-1,(x-1)^2)

# ezgcd
1 PGCD de 2 polynômes ayant au moins 2 variables, avec l'algorithme ezgcd.
2 GCD of 2 polynomials with at least 2 variables, with the ezgcd algorithm.
3 MCD de 2 polinomios de al menos 2 variables, con el algoritmo ezgcd.
4 ΜΚΔ 2 πολυωνύμων, με τουλάχιστο 2 μεταβλητές με τον ezgcd αλγόριθμο.
0 Poly,Poly
-1 gcd
-2 modgcd
-3 heugcd
-4 psrgcd
ezgcd(x^2-2*xy+y^2-1,x-y)
ezgcd((x+1)^4-y^4,(x+1-y)^2)
ezgcd((x+y-1)*(x+y+1),(x+y+1)^2)

# icontent
1 PGCD des coefficients entiers d'un polynôme.
2 GCD of the integer coefficients of a polynomial.
3 MCD de los coeficientes enteros de un polinomio.
4 ΜΚΔ των ακεραίων συντελεστών ενός πολυωνύμου.
0 Poly,[Var]
-1 
icontent(24x^3+6x^2-12x+18)
icontent(24t^3+6t^2-12t+18,t)

# polygonplot ligne_polygonale
1 Dessine les polygones joignant pour j fixé et pour k=0..nrows, les points (xk,yk) où xk=élément ligne k colonne 0 et yk=élément ligne k colonne j en ordonnant les xk (on obtient ncols-1 polygones).
2 Draws the polygons joining for j fixed and for k=0..nrows, the points (xk,yk) where xk=element row k column 0 et yk=element row k column j ,when the xk are sorted (we obtain ncols-1 polygons).
3 Traza los polígonos unidos para j fijado y para k=0..nrows, los puntos (xk,yk) donde xk=elemento fila k columna 0 e yk=elemento fila k columna j, ordenando los xk (podemos obtener ncols-1 polígonos).
4 Σχεδιάζει τα πολύγωνα που συνενώνουν για σταθερό j και για k=0..nrows,τα σημεία (xk,yk) όπου xk=στοιχείο γραμμής k στήλης 0 και yk=στοιχείο γραμμής k στήλης j, όταν τα xk είναι ταξινομημένα (παίρνουμε ncols-1 πολύγωνα).
0 Mtrx
-1 scatterplot
-2 listplot
-3 polygonscatterplot
polygonplot([[1,2,3],[2,0,1],[-1,2,3]])

# polygonscatterplot ligne_polygonale_pointee
1 Dessine les points (xk,yk) et les polygones joignant pour j fixé et pour k=0..nrows, les points (xk,yk) où xk=élément ligne k colonne 0 et yk=élément ligne k colonne j en ordonnant les xk (on obtient ncols-1 polygones).
2 Draws the points (xk,yk) and the polygons joining for j fixed and for k=0..nrows, the points (xk,yk) where xk=element row k column 0 et yk=element row k column j ,when the xk are sorted (we obtain ncols-1 polygons).
3 Traza los puntos (xk,y) y los polígonos unidos para j fijo y para k=0..nrows, los puntos (xk,yk) donde xk=elemento fila k columna 0 e yk=elemento fila k columna j, ordenando los xk (podemos obtener ncols-1 polígonos).
4 Σχεδιάζει τα σημεία (xk,yk) και τα πολύγωνα που συνενώνουν για σταθερό j και για k=0..nrows,τα σημεία (xk,yk) όπου xk=στοιχείο γραμμής k στήλης 0 και yk=στοιχείο γραμμής k στήλης j, όταν τα xk είναι ταξινομημένα (παίρνουμε ncols-1 πολύγωνα).
0 Mtrx
-1 scatterplot
-2 polygonplot
-3 listplot
polygonscatterplot([[1,2,3],[2,0,1],[-1,2,3]])

# scatterplot nuage_points
1 Dessine pour k=0..nrows, les points (xk,yk) où xk=élément ligne k colonne 0 et yk=élément ligne k colonne j (j=1..ncols).
2 Draws for k=0..nrows, the points (xk,yk) where xk=element row k column 0 and yk=element row k column j (j=1..ncols).
3 Traza para k=0..nrows, los puntos (xk,yk) donde xk=elemento fila k columna 0 e yk=elemento fila k columna j (j=1..ncols).
4 Σχεδιάζει για k=0..nrows,τα σημεία (xk,yk) όπου xk=στοιχείο γραμμής k στήλης 0 και yk=στοιχείο γραμμής k στήλης j (j=1..ncols).
0 Mtrx
-1 polygonplot
-2 polygonscatterplot
-3 listplot
scatterplot([[1,2,3],[2,0,1],[-1,2,3]])

# user_operator
1 Définition d'un opérateur binaire et renvoie 0 (échec) ou 1 (succès).
2 Definition of an binary operator and returns 0 (failure) or 1(success).
3 Definición de un operador binario y devuelve 0 (fracaso) o 1 (éxito).
4 Ορισμός ενός δυαδικού τελεστή και επιστροφή 0 (αποτυχία) ή 1 (επιτυχία).
0 Str(R),Fnc(f),Opt(Binary||Unary||Delete)
-1 
user_operator("R",(x,y)->x*y+x+y,Binary)
user_operator("R",(x,y)->x*y+x+y,Delete)

# count_eq
1 Renvoie le nombre d'éléments de L égaux à a.
2 Returns the number of elements of L equal to a.
3 Devuelve el número de elementos de L iguales a a.
4 Επιστρέφει τον αριθμό των στοιχείων της L ίσo με a.
0 Real(a),(Lst||Mtrx)(L),[Opt(row||col)]
-1 count
-2 count_inf
-3 count_sup
count_eq(1,[-2,1,0,1,2,-3])
count_eq(4,[[3,4],[4,1]])
count_eq(4,[[3,4],[4,1]],row)
count_eq(4,[[3,4],[4,1]],col)

# count_inf
1 Renvoie le nombre d'éléments de L strictement inférieur à a.
2 Returns the number of elements of L strictly lower than a.
3 Devuelve el número de elementos de L estrictamente menores que a.
4 Επιστρέφει τον αριθμό των στοιχείων της L αυστηρώς μικρότερα από α.
0 Real(a),(Lst||Mtrx)(L),[Opt(row||col)]
-1 count
-2 count_eq
-3 count_sup
count_inf(1,[-2,-1,0,1,2,3])
count_inf(4,[[3,5],[4,1]])
count_inf(4,[[3,5],[4,1]],row)
count_inf(4,[[3,5],[4,1]],col)

# count_sup
1 Renvoie le nombre d'éléments de L strictement supérieur à a.
2 Returns the number of elements of L strictly greater than a.
3 Devuelve el número de elementos de L estríctamente mayores que a.
4 Επιστρέφει τον αριθμό των στοιχείων του L αυστηρώς μεγαλύτερα από α.
0 Real(a),(Lst||Mtrx)(L),[Opt(row||col)]
-1 count
-2 count_inf
-3 count_eq
count_sup(1,[-2,-1,0,1,2,3])
count_sup(3,[[3,5],[4,1]])
count_sup(3,[[3,5],[4,1]],row)
count_sup(3,[[3,5],[4,1]],col)

# root
1 Renvoie b^(1/a) (root(2,3)=sqrt(3)).
2 Returns b^(1/a) (root(2,3)=sqrt(3)).
3 Calcula b^(1/a) (root(2,3)=sqrt(3)).
4 Επιστρέφει b^(1/a) (root(2,3)=sqrt(3)).
0 Expr(a),Expr(b)
-1 
root(3,2)
root(1/3,2)
root(3,1.2)
root(3.2,1.2)

# latex TeX
1 L'expression évaluée est écrite en latex dans la réponse.
2 Returns the evaluated expression written in latex.
3 Devuelve la expresión evaluada escrita en LaTeX.
4 Επιστρέφει την εκτιμούμενη παράσταση γραμμένη σε LaTeX.
0 Expr
-1 mathml
latex(1/2)
latex((x^4-1)/(x^2+3))

# plotcontour contourplot DrwCtour
1 Dessine soit 11 lignes de niveaux équiréparties entre z=z_min,,...z=z_max de la surface z=Xpr, soit les lignes de niveaux définies par le 3ème argument.
2 Draws whether 11 equirepartited contour-lines z=z_min,,...z=z_max of the surface z=Xpr, whether the contour-lines defined by the 3-rd argument.
3 Traza 11 líneas de nivel equidistantes entre z=z_mina,..,z=z_max de la superficie z=Xpr, con las líneas de contorno definidas por el 3er argumento.
4 Σχεδιάζει είτε 11 ισοϋψείς καμπύλες z=z_mina,..,z=z_max της επιφάνειας z=Xpr, είτε τις ισοϋψείς καμπύλες που ορίζονται από το 3ο όρισμα.
0 Expr(Xpr),[LstVar],[LstVal]
-1 plotdensity
-2 plotimplicit
plotcontour(x^2+y^2)
plotcontour(x^2+y^2,[x,y])
plotcontour(x^2+2*y^2-2,[x,y],[1.0,2.0,3.0])
plotcontour(x^2-y^2,[x=-4..4,y=-4..4],seq(k,k,-11,11,3),xstep=0.1,ystep=0.1)

# Circle
1 Trace le cercle de centre (xc,yc) et de rayon r (par défaut option=1 et option=0 efface ce cercle).
2 Draws the circle with center (xc,yc) and radius r (by default option=1 and option=0 is to remove this circle).
3 Traza una circunferencia con centro (xc, yc) y radio r (por defecto opción=1 y opción=0 son para borrar este círculo).
4 Σχεδιάζει τον κύκλο με κέντρο (xc, yc) και ακτίνα r (από προεπιλογή επιλογή=1 και επιλογή=0 σβύνουν τον κύκλο).
0 Real(xc),Real(yc),Real(r),[Intg(option)]
-1 circle
Circle(0,1,1)
Circle(0,1,1,0)
Circle(0,1,1,1)

# version
1 Renvoie le numéro de la version de giac que vous utilisez: giac 0.4.0
2 Returns the number giac version, you are using : giac 0.4.0
3 Devuelve el número de versión de giac que se está usando: giac 0.4.0
4 Επιστρέφει την τρέχουσα έκδοση του giac που χρησιμοποιείται : giac 0.4.0
0 NULL
-1 
version()

# range
1 Renvoie la liste [0,1..n-1] ou la liste [a,a+1..b[ ou la liste [a,a+p,a+2p..b[
2 Returns the list [0,1..n-1] or the list [a,a+1..b[ or the list [a,a+p,a+2p..b[
3 Devuelve la lista [0,1..n-1] o la lista [a,a+1..b[ o la lista [a,a+p,a+2p..b[.
4 Επιστρέφει τη λίστα [0,1..n-1] ή τη λίστα [a,a+1..b[ ή τη λίστα [a,a+p,a+2p..b[
0 Intg(n)||Intg(a),Intg(b),[Intg(p)]
-1 $
-2 makelist
-3 seq
range(10)
range(1,11)
range(1,11,2)
range(1,11,3)
range(11,1,-1)
 L:=[j^2 for j in range(20) if isprime(j)]

# seq
1 Renvoie la séquence (2 ou 3 arg) ou la liste (4 ou 5 arg) obtenue lorsque var varie entre a et b (pas=p) dans Xpr (ou on répète n fois l'expression Xpr ou on obtient la sequence des réels entre a et b par pas de p). On a aussi seq(expression,variable,liste) équivaut à map(liste,unapply(expression,variable)) 
2 Returns the sequence (2 or 3 arg) or the list (4 or 5 arg) obtained when var go from a to b (step p) in Xpr (or the Xpr is repeated n times or returns the sequence of reals from a to b (step p)).And also seq(expression,variable,liste) is equivanent to map(liste,unapply(expression,variable)) 
3 Devuelve la secuencia (2 o 3 arg) o la lista (4 o 5 arg) obtenida cuando var va desde a hasta b (paso=p) en Xpr (o la expresión Xpr es repetida n veces).
4 Επιστρέφει την ακολουθία (2 ή 3 ορίσματα) ή τη λίστα (4 ή 5 ορίσματα) που αποκτιέται όταν το var μεταβάλλεται από a έως b (με βήμα p) στην παράσταση (ή η παράσταση επαναλαμβάνεται n φορές).
0 Expr(Xpr),Var(Var)=Int(a..b),[Real(p)]||Expr(Xpr),Var(Var),Real(a),Real(b),[Real(p)]
-1 $
-2 makelist
-3 range
-4 map
-5 unapply
seq(0.3,4)
seq(t,4)
seq(0,0)
seq(2^k,k=0..8)
seq(2^k,k=0..8,2)
seq(0.3..2,0.2)
seq(2^k,k,0,8)
seq(2^k,k,0,8,2)
seq(x^3,x,[1,2,3])
 [seq(0.3..2,0.2)] 
 a:=(1,2,3);eval(seq(a,4))

# $
1 Version infixée de seq.
2 Infixed version of seq.
3 Versión infijo de seq.
4 Εντεθειμένη εκδοχή του seq.
0 (Expr(Var)||Int(a..b)),(Var(Var)=Int(a..b))||Intg(n)||Real(p)
-1 seq
-2 makelist
-3 range
 0.3$4
 t$4
 0$0
 a:=(1,2,3);eval(a$4)
 (2^k)$(k=0..3)
 [(2^k)$(k=0..3)]
 (0.3..2)$0.2
 (k^2)$(k=(1..10)$2)
 (k^2)$(k=1..10,2)
 (k+1)$(k=(0..1)$(1/2))
 (k+1)$(k=(0..1)$0.5)
 [k^2,k^3]$(k=1..10)

# roots
1 Renvoie une matrice ayant 2 colonnes et dont les lignes sont les racines du polynôme avec leur multiplicité (pour 1 variable).
2 Returns a matrix having 2 columns and where the rows are the roots of the polynomial with their multiplicity (for 1 variable).
3 Devuelve una matriz con 2 columnas y donde las filas son las raíces del polinomio con su multiplicidad (para 1 variable).
4 Eπιστρέφει ένα πίνακα με 2 στήλες και του οποίου οι γραμμές είναι οι ρίζες του πολυωνύμου μαζί με την πολλαπλότητά τους (για 1 μεταβλητή).
0 Poly,[Var]
-1 proot
-2 cZeros
roots(t^3-1,t)
roots(x^5-2*x^4+x^3)

# pivot
1 Renvoie la matrice obtenue en créant des zéros dans la colonne nc de A, avec la méthode de Gauss-Jordan, en utilisant l'élément A[nl,nc] comme pivot.
2 Returns the matrix get from A creating zeros in the column nc, by the method of Gauss-Jordan with the element A[nl,nc] as pivot.
3 Devuelve la matriz obtenida a partir de A escribiendo ceros en la columna nc, por el método de Gauss-Jordan, utilizando el elemento A[nl,nc] como pivote.
4 Επιστρέφει τον πίνακα που προκύπτει από τον Α, βάζοντας 0 στη στήλη nc, σύμφωνα με τη μέθοδο Gauss-Jordan με το στοιχείο A[nl,nc] ως οδηγό.
0 Mtrx(A),Intg(nl),Intg(nc)
-1 gaussjord
-2 linsolve
pivot([[1,2],[3,4],[5,6]],0,1)
pivot([[1,2],[3,4],[5,6]],1,1)

# cZeros
1 Renvoie la liste des éléments complexes qui annulent l'expression Xpr ou la matrice dont les lignes sont les solutions du système : Xpr1=0,Xpr2=0...
2 Returns the list of complex elements solution of Xpr=0 or the matrix where the lines are the solutions of the system : Xpr1=0,Xpr2=0...
3 Devuelve la lista de elementos complejos solución de Xpr=0 o la matriz donde las filas son las soluciones del sistema: Xpr1=0, Xpr2=0,..
4 Επιστρέφει μια λίστα από μιγαδικά στοιχεία λύσεις της Xpr=0 ή τον πίνακα οι γραμμές του οποίου είναι λύσεις του συστήματος : Xpr1=0,Xpr2=0...
0 Expr(Xpr)||LstExpr, [Var||LstVar]
-1 solve
cZeros(x^2-1)
cZeros([x^2-1,x^2-y^2],[x,y])

# srand randseed
1 srand ou srand(n) initialise la suite des nombres aléatoires : srand renvoie un entier qui a servi à cette initialisation et srand(n) renvoie n.
2 srand returns an integer and initialize the sequence of random numbers.
3 srand devuelve un entero e reinicia la secuencia de números aleatorios.
4 Επιστρέφει έναν ακέραιο και αρχικοποιεί την ακολουθία των τυχαίων αριθμών.
0 
-1 RandSeed
srand(12)
 srand

# powexpand
1 Développe l'expression en fonction de l'exposant.
2 Expands the expression in function of the exponent.
3 Expande la expresión en función del exponente.
4 Αναπτύσει την παράσταση συναρτήσει του εκθέτη.
0 Expr
-1 
powexpand(2^(x+y))
powexpand(3^(2*x))

# mult_c_conjugate multiplier_conjugue_complexe
1 Renvoie l'expression après multiplication par la quantité complexe conjuguée du dénominateur (ou du numérateur si pas de dénominateur).
2 Returns the expression after multiplication by the complex conjugated quantity of the denominator (or of the numerator if no denominator).
3 Devuelve la expresión después de multiplicarla por el conjugado del denominador (o del numerador, si no hay denominador).
4 Επιστρέφει την παράσταση αφού την πολλαπλασιάσει με τον μιγαδικό συζυγή του παρονομαστή (ή του αριθμητή αν δεν υπάρχει παρονομαστής).
0 Expr
-1 mult_conjugate
mult_c_conjugate(1/(3+i*2))
mult_c_conjugate(3+i*2)

# mult_conjugate multiplier_conjugue
1 Renvoie l'expression après multiplication par la quantité conjuguée du dénominateur (ou du numérateur si pas de dénominateur).
2 Returns the expression after multiplication by the conjugated quantity of the denominator (or of the numerator if no denominator).
3 Devuelve la expresión después de multiplicarla por el conjugado del denominador (o del numerador, si no hay denominador).
4 Επιστρέφει την παράσταση αφού την πολλαπλασιάσει με τον συζυγή του παρονομαστή (ή του αριθμητή αν δεν υπάρχει παρονομαστής).
0 Expr
-1 mult_c_conjugate
mult_conjugate(sqrt(3)-sqrt(2))
mult_conjugate(1/(sqrt(3)-sqrt(2)))

# comDenom
1 Renvoie l'expression après réduction au même dénominateur : le numérateur et le dénominateur sont développés [selon les puissances de la variable var].
2 Returns the expression after reduction at the same denominator : the numerator and the denominator are developed [according to the powers of the variable var].
3 Devuelve la expresión después de reducirla a denominador común: el numerador y denominador son desarrollados [de acuerdo con las potencias de la variable var].
4 Επιστρέφει την παράσταση μετά από αναγωγή στον ίδιο παρονομαστή: ο αριθμητής και ο παρονομαστής αναπτύσονται [σύμφωνα με τις δυνάμεις της μεταβλητής var].
0 Expr,[Var(Var)]
-1 normal
comDenom(1/x+1/y^2+1)
comDenom(1/x+1/y^2+1,y)
comDenom(1/x+1/y^2+1,x)

# cumSum cumsum
1 Retourne la liste (ou la séquence ou la chaîne) lr formée par les sommes cumulées des éléments de la liste l : lr[k]=sum(l[j],j=0..k) (ou lr=sum(l[j],j=0..k)$(k=0..size(l)-1)).
2 Returns the list (or the sequence or the string) lr where the elements are the cumulative sum of the list l: lr[k]=sum(l[j],j=0..k) (or lr=sum(l[j],j=0..k)$(k=0..size(l)-1)).
3 Devuelve la lista (o secuencia, o cadena) lr donde los elementos son sumas acumulativas de la lista l: lr[k]=sum(l[j],j=0..k) (o lr=sum(l[j],j=0..k)$(k=0..size(l)-1)).
4 Επιστρέφει τη λίστα (ή την ακολουθία ή την συμβολοσειρά) lr τα στοιχεία της οποίας είναι τα συσσωρευτικά αθροίσματα της λίστας l:lr[k]=sum(l[j],j=0..k) (ή lr=sum(l[j],j=0..k)$(k=0..size(l)-1)).
0 Lst(l)||Seq||Str
-1 sum
cumSum([0,1,2,3,4])
cumSum(1.2,3,4.5,6)
cumSum("a","b","c","d")

# normalize unitV
1 Renvoie le vecteur divisé par sa norme l2. C'est aussi une option de plotfiefd.
2 Returns the vector divided by its l2norm. It is also an option for plotfiefd.
3 Devuelve el vector dividido entre su norma l2. Es también una opción de plotfiefd.
4 Επιστρέφει το διάνυσμα διαιρεμένο με τη l2 νόρμα του. Είναι επίσης επιλογή για την εντολή plotfield.
0 Lst||Cplx
-1 l2norm
normalize(3+4*i)
normalize([3,4])
 fieldplot(-t*y,[t,y],normalize)
 fieldplot(-t*y,[t,y],normalize,xstep=0.5,ystep=0.5)

# l1norm
1 Renvoie la norme l1 du vecteur=somme des valeurs absolues de ses coordonnées
ou triple norme d'une matrice selon l1.
2 Returns the l1 norm of the vector=sum of the absolute values of its coordinates or matrix norm according to l1.
3 Devuelve la norma l1 del vector=suma de los valores absolutos de sus coordenadas o matrix_norm.
4 Επιστρέφει την l1 νόρμα του διανύσματος = άθροισμα των απολύτων τιμών των συντεταγμένων του.
0 Vect
-1 l2norm
-2 maxnorm
-3 matrix_norm
l1norm([3,-4,2])
l1norm([[1,2,3],[3,-9,6],[4,5,6]])

# Int
1 Renvoie la primitive ou l'intégrale (bornes a et b) sans l'évaluer.
2 Returns the primitive or the calculus of the integrate (bounds a and b) without evaluation.
3 Devuelve la primitiva o la integral (entre a y b) sin evaluar.
4 Επιστρέφει το αόριστο ή ορισμένο ολοκλήρωμα (με άκρα a,b) χωρίς να το υπλογίσει.
0 Expr,[Var(x)],[Real(a)],[Real(b)]
-1 int
Int(sin(x))
Int(sin(t),t)
Int(sin(x),x,0,pi)

# dfc2f
1 Transforme une fraction continue en un réel.
2 Converts a continue fraction into a real.
3 Convierte una fracción continua en un real.
4 Μετατρέπει ένα συνεχές κλάσμα σε έναν πραγματικό.
0 LstFrac_Cont)
-1 dfc
-2 convert
dfc2f([1,1,1])
dfc2f([1,2,[2]])


# dfc
1 Renvoie le développement en fraction continue de x0 d'ordre n ou de précision eps.
2 Returns the continue fraction development of x0 of order n or with precision eps.
3 Devuelve el desarrollo en fracción continua de x0 de orden n o con precisión eps.
4 Επιστρέφει το ανάπτυγμα του x0 σε συνεχές κλάσμα τάξης n ή με ακρίβεια eps.
0 Real(x0),Int(n)||Real(eps)
-1 dfc2f
-2 convert
dfc(sqrt(2),5)
dfc(pi,4)
dfc(evalf(pi),1e-09)
 convert(sqrt(2),confrac,'dev');dev
 convert(9976/6961,confrac,'l');l

# det_minor
1 Renvoie le déterminant calculé par le calcul des mineurs.
2 Returns the determinant calculated with the calculus of minors.
3 Devuelve el determinante calculado con cálculo de menores.
4 Επιστρέφει την ορίζουσα που υπολογίζεται με τον υπολογισμό των ελάσσονων.
0 Mtrx(A)
-1 det
det_minor([[1,2],[3,4]])

# rm_all_vars
1 Efface tous les noms des variables.
2 Erase all the variable name.
3 Borra todos los nombres de variables.
4 Διαγράφει όλα τα ονόματα των μεταβλητών.
0 NULL
-1 rm_a_z
rm_all_vars()

# rm_a_z
1 Efface tous les noms des variables ayant une seule lettre a..z en minuscule.
2 Erase all the variable name with only one minuscule a..z character.
3 Borra todos los nombres de variables que sólo tienen una letra minúscula como nombre.
4 Διαγράφει όλα τα ονόματα των μεταβλητών με μόνο ένα πεζό χαρακτήρα a..z.
0 NULL
-1 rm_all_vars
rm_a_z()

# risch
1 Renvoie une primitive de l'expression calculée selon l'algorithme de Risch.
2 Returns a primitive of the expression calculated with the Risch algorithm.
3 Devuelve la primitiva de una expresión calculada con el algoritmo de Risch.
4 Επιστρέφει μια βασική μορφή της παράστασης που υπολογίζεται από τον αλγόριθμο του Risch.
0 Expr,[Var]
-1 int
risch(ln(x),x)
risch(ln(x))
risch(exp(x^2),x)

# rowAdd
1 Renvoie la matrice obtenue en remplaçant dans A la ligne n2 par la somme des lignes n1 et n2.
2 Returns the matrix get from A by replacing the n2-th row by the sum of the n1-th and n2-th rows.
3 Devuelve la matrix obtenida a partir de A reemplazando la fila n2, por la suma de las filas n1 y n2.
4 Επιστρέφει τον πίνακα που προκύπτει αν στον Α αντικαταστήσουμε την n2-στη γραμμή από το άθροισμα της n1 και n2 γραμμής.
8 添加行。
0 Mtrx(A),Intg(n1),Intg(n2)
-1 rowSwap
rowAdd([[1,2],[3,4],[5,6]],1,2)

# rowSwap swaprow rowswap SWAPROW
1 Renvoie la matrice obtenue en échangeant dans A la ligne n1 et la ligne n2.
2 Returns the matrix get from A by swapping the n1-th row and the n2-th row.
3 Devuelve la matriz obtenida a partir de A intercambiando las filas n1 y n2.
4 Επιστρέφει τον πίνακα που προκύπτει αν στον Α ανταλλάξουμε τη n1 γραμμή με την n2 γραμμή.
8 交换行。
0 Mtrx(A),Intg(n1),Intg(n2)
-1 rowAdd
-2 colSwap
rowSwap([[1,2],[3,4],[5,6]],1,2)

# colSwap swapcol colswap SWAPCOL
1 Renvoie la matrice obtenue en échangeant dans A la colonne n1 et la colonne n2.
2 Returns the matrix get from A by swapping the n1-th column and the n2-th column.
3 Devuelve la matriz obtenida a partir de A intercambiando las columnas n1 y n2.
4 Επιστρέφει τον πίνακα που προκύπτει αν στον Α ανταλλάξουμε τη n1 στήλη με την n2 στήλη.
8 交换行。
0 Mtrx(A),Intg(n1),Intg(n2)
-1 rowSwap
colSwap([[1,2],[3,4],[5,6]],0,1)

# variance
1 Renvoie la variance d'une liste pondérée par le deuxième argument ou la liste des variances des colonnes d'une matrice.
2 Returns the variance of a list with the second argument as pound or the list of variance of the columns of a matrix.
3 Devuelve la varianza de los elementos de su argumento ponderado con el segundo argumento o la lista de varianzas de las columnas de una matriz.
4 Επιστρέφει τη διακύμανση των στοιχείων μιας λίστας του ορίσματος με το δεύτερο όρισμα ως οδηγό, ή τη λίστα των διακυμάνσεων των στηλών ενός πίνακα.
8 方差。
0 Lst||Mtrx,[Lst]
-1 stddev
-2 mean
variance([3,4,2])
variance([1,2,3],[1,2,1])
variance([[1,2,3],[5,6,7]])

# erf
1 Renvoie la valeur approchée de 2/sqrt(pi)*int(exp(-t^2),t,0,x0).
2 Returns the approximate value of 2/sqrt(pi)*int(exp(-t^2),t,0,x0).
3 Devuelve el valor aproximado de 2/sqrt(pi)*int(exp(-t^2),t,0,x0).
4 Επιστρέφει την προσεγγιστική τιμή του 2/sqrt(pi)*int(exp(-t^2),t,0,x0).
0 Real(x0)
-1 erfc
erf(1)
erf(1/(sqrt(2)))*1/2

# erfc
1 Renvoie la valeur approchée de 2/sqrt(pi)*int(exp(-t^2),t,x0,+infinity).
2 Returns the approximate value of 2/sqrt(pi)*int(exp(-t^2),t,x0,+infinity).
3 Devuelve el valor aproximado de 2/sqrt(pi)*int(exp(-t^2),t,x0,+infinity).
4 Επιστρέφει την προσεγγιστική τιμή του 2/sqrt(pi)*int(exp(-t^2),t,x0,+infinity).
0 Real(x0)
-1 erf
erfc(1)
erfc(1/(sqrt(2)))*1/2

# reduced_conic
1 Renvoie l'origine et la matrice du repère dans lequel la conique d'équation donnée, est réduite, 0 ou 1 (0 si la conique est dégénérée) et l'équation de la conique dans ce repère ainsi que son équation paramétrique.
2 Returns the origin and the matrix of a base in which the conic given by its equation, is reduced, 0 or 1 (0 if the conic is degenerated) and the equation of the conic in this base and also its parametric equation.
3 Devuelve el origen y la matriz de una base en la cual la cónica es reducida, 0 o 1 (0 si la cónica es degenerada) y la ecuación de la cónica en esta base y su ecuación paramétrica.
4 Επιστρέφει την αρχή και τον πίνακa μιας βάσης στην οποία ανάγεται ο κώνος της εξίσωσης, 0 ή 1 (0 αν ο κώνος εκφυλίζεται) και την εξίσωση του κώνου στη βάση αυτή και επίσης την παραμετρική της εξίσωση.
0 Expr,[LstVar]
-1 gauss
-2 conic
reduced_conic(x^2+2*x-2*y+1)
reduced_conic(a*x^2-2*x*y+a*y^2-2*x+2*y+3,[x,y])
reduced_conic(2*u^2+2*u*v+2*v^2+5*u+3,[u,v])
reduced_conic((x+y)^2-2*x+1,x,y)

# reduced_quadric
1 Renvoie l'origine et la matrice du repère dans lequel la quadrique d'équation donnée, est réduite, la liste des valeurs propres et l'équation de la quadrique dans ce repère ainsi que son équation paramétrique.
2 Returns the origin and the matrix of a basis in which the quadric (given by its equation) is reduced, the list of its eigenvalues, the equation of the quadric in this basis and its parametric equation.
3 Devuelve el origen y la matriz de una base en la cual la cuádrica es reducida, la lista de valores propios y la ecuación de la cuádrica en esta base y su ecuación paramétrica.
4 Επιστρέφει την αρχή και τον πίνακα μιας βάσης στην οποία ανάγεται η δευτεροβάθμια (όπως δίνεται από την εξίσωση της), την λίστα με τις ιδιοτιμές, και την εξίσωση της δευτεροβάθμιας στη βάση αυτή και επίσης την παραμετρική της εξίσωση.
0 Expr, [LstVar]
-1 gauss
-2 quadric
reduced_quadric(4*x^2+y^2+z^2-4*x*y+4*x*z-2*y*z+8*x-4*y+4*z+2)
reduced_quadric(x^2+3*y^2-3*z^2-8*y*z+2*z*x-4*x*y-1,x,y,z)
reduced_quadric((u+v)*(v-w)+3*u-5*v,[u,v,w])
reduced_quadric(7*x^2+4*y^2+4*z^2+4*x*y-4*x*z-2*y*z-4*x+5*y+4*z-18,[x,y,z])

# parallelogram
1 Renvoie et dessine le parallélogramme ABCD tel que vecteur(AB)+vecteur(AD)=vecteur(AC).
2 Returns and draws the parallelogram ABCD such as vector(AB)+vector(AD)=vector(AC).
3 Devuelve y traza el paralelogramo ABCD tal que vector(AB)+vector(AD)=vector(AC).
4 Επιστρέφει και σχεδιάζει το παραλληλόγραμμο ABCD τέτοιο ώστε vector(AB)+vector(AD)=vector(AC).
0 Pnt(A)||Cplx,Pnt(B)||Cplx,Pnt(C)||Cplx,[Var(D)]
-1 quadrilateral
-2 rhombus
parallelogram(0,1,2+i)
parallelogram(1,0,2+i,D)
parallelogram(point(0,0,0),point(3,3,3),point(0,0,3))
parallelogram(point(0,0,0),point(3,3,3),point(0,0,3),D)

# subs
1 Équivalent de subst sauf en mode Maple où les arguments sont permutés, en mode Maple choisir l'exemple 2.
2 Equivalent of subst except in maple_mode where the arguments are switched over, in maple_mode choose the second example.
3 Equivalente a subst excepto en modo Maple, donde los argumentos son permutados, en modo Maple escoge el segundo ejemplo.
4 Ισοδύναμη της subst με εξαίρεση την λειτουργία maple, όπου τα ορίσματα αντιμετατίθονται, και στην οποία περίπτωση επιλέγουμε το δεύτερο παράδειγμα.
0 Expr or Var=value,Var=value or Expr
-1 subst
-2 maple_mode
-3 algsubs
-4 ()
subs(1/(4+x^2),x=2)
subs(x=2,1/(4+x^2))
 f:=1/(4+x^2);f(x=2)

# simult
1 Renvoie la matrice dont la colonne d'indice k est solution de A*X=colonne d'indice k de B (=B[0..nl-1,k..k] avec nl=nombre de ligne de B).
2 Returns the matrix where the column of index k is solution of A*X=column of index k of B (=B[0..nr-1,k..k] with nr=number of rows of B).
3 Devuelve la matriz donde la columna de índice k es solución de A*X=columna de índice k de B (=B[0..nf-1,k..k] con nf=número de filas de B).
4 Επιστρέφει τον πίνακα όπου η στήλη με δείκτη k είναι λύση του A*X=στήλη δείκτη k του B (=B[0..nr-1,k..k] με nr=πλήθος γραμμών του B).
0 Mtrx(A),Mtrx(B)
-1 rref
-2 linsolve
simult([[3,1],[3,2]],[[-2],[2]])
simult([[3,1],[3,2]],[[-2,1],[2,-1]])

# Pause sleep
1 Pause; dans un programme permet de suspendre son exécution (ENTER permet de continuer l'exécution) [Pause n; suspend l'exécution pendant n secondes].
2 Pause; in a program stopping its execution (the execution goes on if you press ENTER) [Pause n; stopping its execution during n seconds].
3 Pause; en un programa que detiene su ejecución (la ejecución continua si se presiona ENTER) [Pause n; detiene su ejecución durante n segundos].
4 Εντολή σε ένα πρόγραμμα για να σταματήσει την εκτέλεση [μετά την εκτύπωση της τιμής της n] (η εκτέλεση συνεχίζεται αν πατήσουμε ENTER).
0 
-1 WAIT
 Pause 3;
sleep(2)

# monotonic
1 Renvoie un reel qui croit strictement en fonction du temps ecoule
2 Returns a real that increases as time passes
0 
monotonic()

# WAIT
1 WAIT(n); dans un programme suspend son exécution pendant n secondes.
2 WAIT(n); in a program stopping its execution during n seconds.
3 WAIT(n); en un programa que detiene su ejecución durante n segundos.
4 WAIT(n); σε ένα πρόγραμμα για να σταματήσει την εκτέλεση, μετά την εκτύπωση της τιμής της n.
0 Var(n)
-1 Pause
WAIT(3)

# part
1 Renvoie la n-ième sous-expression de l'expression.
2 Returns the n-th subexpression of the expression.
3 Devuelve la n-ésima subexpresión de la expresión.
4 Επιστρέφει την n-στη υποπαράσταση της παράστασης.
0 Expr, Intg(n)
-1 
part(sin(x)+cos(x),1)
part(sin(x)+cos(x),2)
part(exp(x)*sin(x),1)
part(part(exp(x)*sin(x)+cos(x),1),1)

# newList
1 Retourne la liste formée de n zéros.
2 Returns the list made with n zeros.
3 Devuelve la lista de n ceros.
4 Επιστρέφει μια λίστα με n μηδενικά.
0 Intg(n)
-1 newMat
-2 makelist
newList(4)

# newMat
1 Retourne la matrice de n lignes et p colonnes, formée de zéros.
2 Returns the list with n rows and p columns, made with zeros.
3 Devuelve la matriz de n filas y p columnas, con sólo ceros.
4 Επιστρέφει μια λίστα με n γραμμές και p στήλες, από μηδενικά.
0 Intg(n),Intg(p)
-1 newList
-2 makemat
newMat(2,3)

# QR
1 Pour A une matrice numérique, stocke dans Q une matrice orthogonale et dans R une matrice triangulaire supérieure vérifiant A=Q*R [en remplaçant par 0 les éléments el tels que abs(el)<eps].
2 For a numerical matrix A, store in Q a orthogonal matrix and in U a lower matrix such that A=Q*R [exchanging by 0 the elements such that abs(el)<eps].
3 Para una matriz numérica, guarda en Q una matriz ortogonal y en R una matriz triangular superior, tal que A=Q*R [cambiando por 0 los elementos el tales que abs(el)<eps].
4 Για ένα αριθμητικό πίνακα Α, αποθηκεύει στο Q έναν ορθογώνιο πίνακα και στο R έναν κάτω τριγωνικό πίνακα έτσι ώστε A=Q*R [αντικαθιστώντας με 0 τα στοιχεία el με abs(el)<eps].
8 QR 因式分解。 将一个 m×n 矩阵分解成三个矩阵： {[[m×m 正交矩阵]]、[[m×n 上梯形矩阵]]、[[n×n 置换矩阵]]}。
0 Mtrx,Var(Q),Var(R),[Real(eps)]
-1 qr
-2 LU
QR([[1,2],[3,4]],Q,R)

# LQ
1 Pour A une matrice numérique, renvoie L une matrice triangulaire inférieure, Q une matrice orthogonale et P une matrice de permutation vérifiant P*A=L*Q.
2 For a numerical matrix A, returns L a lower matrix, Q an orthogonal matrix and P a permutation matrix such that P*A=L*Q.
3 Para una matriz numércia A, devuelve L una matriz triangular inferior, Q una ortogonal y P una matriz de permutación tal que P*A=L*Q.
4 Επιστρέφει L,Q,P : P*A=L*Q.
8 LQ 因式分解。 将一个 m×n 矩阵分解成三个矩阵： {[[ m×n 下梯形矩阵]]、[[ n×n 正交矩阵]]、[[ m×m 置换矩阵]]}。
0 Mtrx(A)
-1 lu
-2 QR
LQ([[1,2],[3,4]])
LQ([[6,12,18],[5,14,31],[3,8,18]])
LQ([[4,0,0],[8,-4,3]])

# LU
1 Pour A une matrice numérique, stocke dans L une matrice triangulaire inférieure, dans U une matrice triangulaire supérieure et dans P une matrice de permutation vérifiant P*A=L*U.
2 For a numerical matrix A, store in L a lower matrix, in U a upper matrix and in P a permutation matrix such that P*A=L*U.
3 Para una matriz numércia A, guarda en L una matriz triangular inferior, en U una triangular superior y en P una matriz de permutación tal que P*A=L*U.
4 Για ένα αριθμητικό πίνακα Α, αποθηκεύει στο L έναν άνω τριγωνικό πίνακα και στο U έναν τριγωνικό πίνακα μεταθέσεων έτσι ώστε P*A=L*U.
8 LU 数值分解。 将矩形矩阵分解成三个矩阵： {[[下三角形矩阵]]、[[上三角形矩阵]]、[[置换矩阵]]} 上三角形矩阵在其对角线上有元素。
0 Mtrx(A),Var(L),Var(U),Var(P)
-1 lu
-2 QR
LU([[1,2],[3,4]],L,U,P)
LU([[6,12,18],[5,14,31],[3,8,18]],L,U,P)

# SVD
1 Pour A matrice numérique réelle renvoie une matrice orthogonale U, le vecteur S des valeurs singulières de A et une matrice orthogonale Q tel que A=U*diag(S)*trn(Q).
2 Singular Value Decomposition for a numerical real matrix A, returns U an orthogonal matrix, S the vector of singular values of A and Q an orthogonal matrix and S the vector of singular values such that A=U*diag(S)*trn(Q)
3 Para una matriz real numércia A, devuelve L una matriz ortogonal, S un vector de Singular Value y U una matriz ortogonal tal que A=U*diag(S)*trn(Q).
4 Επιστρέφει U,Q,S : A=U*diag(S)*trn(Q).
8 奇数分解。 将一个 n × n 矩阵分解成两个矩阵和一个矢量： {U=[[n × n 正交方阵]]、S=[实数]}、Q=[[n × n 正交方阵]] (A=U*diag(S)*trn(Q))。
0 Mtrx(A)
-1 lu
-2 svd
SVD([[1,4],[4,1]])
SVD([[6,12,18],[5,14,31],[3,8,18]])

# SVL
1 Pour A une matrice numérique réelle renvoie le vecteur des valeurs singulières de A i.e. la racine carrée des valeurs propres de A*trn(A).
2 For a numerical real matrix A returns the singular value vector i.e. sqrt(eigenvals(A*trn(A))).
3 Devuelve un vector de Singular Value i.e. sqrt(eigenvals(A*trn(A)))
4 Επιστρέφει S= sqrt(eigenvals(A*trn(A)))
8 奇值。 返回包含矩阵奇值的向量。(A=数值矩阵)。S= sqrt(eigenvals(A*trn(A)))。
0 Mtrx(A)
-1 lu
-2 svd
SVL([[1,4],[4,1]])
SVL([[6,12,18],[5,14,31],[3,8,18]])

# LSQ lsq
1 Renvoie le vecteur (resp la matrice) X qui minimise la norme euclidienne (resp de Frobenius) de A*X-B correspondant au(x) système(s) linéaire(s) A*X=B lorsque B est un vecteur (resp une matrice).
2 Returns the vector (resp matrix) X which is the minimum of the euclidean (resp Frobenius) norm of A*X-B corresponding to the linear system A*X=B when B is a vector (resp matrix).
3 
4 
8 最小二乘法。 显示最小二乘矩阵（或向量）的最小范数。
0 Mtrx(A),(Mtrx || Vect)(B)
-1 lu
-2 QR
LSQ([[1,2],[3,4]],[5,11])
LSQ([[1,2],[3,4]],[[5,-1],[11,-1]])

# iPart
1 Renvoie l'argument sans sa partie fractionnaire (type=DOM_FLOAT).
2 Returns the argument without its fractional part (type=DOM_FLOAT).
3 Devuelve el argumento sin su parte fraccional (type=DOM_FLOATNUM).
4 Επιστρέφει το όρισμα χωρίς το κλασματικό μέρος(type=DOM_FLOAT).
8 整数部分。  返回值的整数部分。
0 Real||LstReal
-1 fPart
-2 floor
-3 trunc
iPart(4.3)
iPart(sqrt(2))
iPart(4.3,sqrt(2))

# trunc
1 Renvoie l'argument tronqué avec n décimales (par défaut n=0) (type=DOM_COMPLEX ou DOM_FLOAT).
2 Truncates value to n decimal places (by default n=0). Accepts complex numbers.(type=DOM_COMPLEX or DOM_FLOAT).
3 Devuelve el argumento sin su parte fraccional o trunca el argumento con n decimales (type=DOM_COMPLEX o DOM_FLOAT).
4 Επιστρέφει το όρισμα χωρίς το κλασματικό μέρος σε με n δεκαδικά (type=DOM_COMPLEX σε DOM_FLOAT).
8 数值截断到小数位。 接受复数。
0 Real||LstReal,Int(n)
-1 fPart
-2 floor
-3 iPart
trunc(4.3)
trunc(sqrt(2),3)
trunc([4.3333,sqrt(2)])
trunc([4.3333,sqrt(2)],2)
trunc(sqrt(2)+i*sqrt(5),4)

# fPart frac
1 Renvoie la partie fractionnaire (si x<0 alors frac(x)+floor(x)+1=x sinon frac(x)+floor(x)=x).
2 Returns the fractional part (if x<0 then frac(x)+floor(x)+1=x else frac(x)+floor(x)=x).
3 Devuelve la parte fraccional (if x<0 then frac(x)+floor(x)+1=x else frac(x)+floor(x)=x).
4 Επιστρέφει το κλασματικό μέρος (if x<0 then frac(x)+floor(x)+1=x else frac(x)+floor(x)=x).
8 返回值的小数部分。
0 Real||LstReal
-1 floor
-2 iPart
-3 trunc
fPart(1/2)
fPart(-1/2)
fPart(1.2)
fPart(-1.2)
fPart([3.4,sqrt(2)])

# output Output
1 Instruction dans un programme permettant la sortie d'une expression stockée dans var.
2 Instruction in a program so that you can output an expression stored in var.
3 Instrucción en un programa que permite mostrar una expresión guardada en var.
4 Εντολή σε ένα πρόγραμμα για την εξαγωγή μια παράστασης που είναι αποθηκευμένη στη var.
0 [Str],Var(Var)
-1 input
output("age",a)

# input Input lis
1 Instruction dans un programme permettant l'entrée d'une expression qui sera stockée dans var.
2 Instruction in a program so that you can input an expression and store it in var.
3 Instrucción en un programa que permite introducir una expresión y guardarla en var.
4 Εντολή σε ένα πρόγραμμα για την εισαγωγή μιας παράστασης και αποθήκευση στη var.
0 [Str],Var(Var)
-1 InputStr
-2 output
input("age",a)

# InputStr textinput lis_phrase
1 Instruction dans un programme permettant l'entrée d'une chaîne de caractères qui sera stockée dans var.
2 Instruction in a program so that you can input a string and store it in var.
3 Instrucción en un programa que permite introducir una cadena de caracteres y guardarla en var.
4 Εντολή σε ένα πρόγραμμα για την εισαγωγή μιας συμβολοσειράς που θα αποθηκευτεί στη var.
0 [Str],Var(Var)
-1 input
InputStr("nom?",N)

# getType
1 Retourne le type de l'argument (STR,EXPR,FUNC,NUM,LIST,MAT,VAR,NONE,PIC...).
2 Returns the type of the argument (STR,EXPR,FUNC,NUM,LIST,MAT,VAR,NONE,PIC...).
3 Devuelve el tipo del argumento (STR,EXPR,FUNC,NUM,LIST,MAT,VAR,NONE,PIC...).
4 Επιστρέφει τον τύπο του ορίσματος (STR,EXPR,FUNC,NUM,LIST,MAT,VAR,NONE,PIC...).
0 Expr
-1 getKey
getType("aze")
getType(2+i)
getType(x->cos(2*x))
getType(1.414)

# getKey
1 Instruction dans un programme qui renvoie 0 si aucune touche est pressée et sinon renvoie le code ascii de la touche pressée.
2 Instruction in a program, returns 0 if no key is pressed and else returns the ascii code of the pressed key.
3 Instrucción en un programa, devuelve 0 si no pulsa ninguna tecla, y si no, devuelve el código ascii de la tecla pulsada.
4 Εντολή σε ένα πρόγραμμα, που επιστρέφει 0 αν δεν πατηθεί κανένα πλήκτρο και αλλιώς επιστρέφει τον ascii κωδικό του πλήκτρου που θα πατηθεί.
0 NULL
-1 getType
getKey()

# assert
1 Instruction dans un programme, renvoie une erreur si b==faux.
2 Instruction in a program, returns an error if b==false.
3 Instrucción en un programa, devuelve un error si b==false.
4 Εντολή σε ένα πρόγραμμα, που επιστρέφει λάθος αν b==false.
0 Boolean(b)
-1 break
assert(a>0);

# str string
1 Retourne l'expression évaluée sous la forme d'une chaîne de caractères ou Option de la commande convert ou convertir (id string).
2 Returns the evaluated expression as a string or Option of the convert or convertir command (id string).
3 Devuelve la expresión evaluada como una cadena de caracteres o Opción del comando convert o convertir (id string).
4 Επιστρέφει την αποτιμώμενη παράσταση ως συμβολοσειρά ή Επιλογή της εντολής convert ή convertir (id string).
0 Expr or Opt
-1 expr
-2 format
-3 convert
string(1.23)
string(a:=12)
string(quote(a:=12))
 convert(quote(a:=12),string)

# list
1 Option de la commande convert ou convertir (n-poly=>list).
2 Option of the convert or convertir command (n-poly=>list).
3 Opción del comando convert o convertir (n-poly=>list).
4 Επιλογή της εντολής convert ή convertir (n-poly=>list).
0 Opt
-1 symb2poly
-2 convert
 convert(symb2poly(10x^3*y+12x^2*y^2,[x,y]),list)

# polynom
1 Option de la commande convert ou convertir et des commandes taylor et series (list=>n-poly ou series=>poly).
2 Option of the convert or convertir command and of the taylor and series commands (list=>n-poly ou series=>poly).
3 Opción del comando convert o convertir y del comando taylor y series (list=>n-poly ou series=>poly).
4 Επιλογή της εντολής convert ή convertir και της εντολής taylor  ή series (list=>n-poly ou series=>poly).
0 Opt
-1 poly2symb
-2 taylor
-3 series
-4 convert
 convert([[10,[3,1]],[12,[2,2]]],polynom)
 convert(taylor(sin(x)),polynom)
 convert(series(sin(x),x=0,6),polynom)
 taylor(sin(x),x=0,5,polynom)
 series(sin(x),x=0,6,,polynom)

# denom
1 Renvoie le dénominateur de la fraction simplifiée.
2 Returns the denominator of the simplified fraction.
3 Devuelve el denominador de la fracción simplificada.
4 Επιστρέφει τον παρονομαστή από την απλοποιημένη παράσταση.
8 化简分母。.  对于整数 a 和 b，返回分数 a/b 化简之后的分母。
0 Frac(a/b) or RatFrac
-1 getDenom
-2 getNum
-3 numer
-4 f2nd
denom(25/15)
denom((x^3-1)/(x^2-1))
denom(1+(x^3-1)/x^2)

# getDenom
1 Renvoie le dénominateur de l'expression non simplifiée (sauf pour les rationnels).
2 Returns the denominator of the unsimplified expression (except for rational number).
3 Devuelve el denominador de la expresión no simplificada.
4 Επιστρέφει τον παρονομαστή από την μη απλοποιημένη παράσταση.
0 Expr
-1 denom
-2 getNum
-3 numer
-4 f2nd
getDenom(25/15)
getDenom((x^3-1)/(x^2-1))
getDenom(1+(x^3-1)/x^2)

# getNum
1 Renvoie le numérateur de l'expression non simplifiée (sauf pour les rationnels).
2 Returns the numerator of the unsimplified expression (except for rational number).
3 Devuelve el numerador de la expresión no simplificada.
4 Επιστρέφει τον αριθμητή από την μη απλοποιημένη παράσταση.
0 Expr
-1 numer
-2 denom
-3 getDenom
-4 f2nd
getNum(25/15)
getNum((x^3-1)/(x^2-1))
getNum(1+(x^3-1)/x^2)

# numer
1 Renvoie le numérateur de la fraction simplifiée.
2 Returns the numerator of the simplified fraction.
3 Devuelve el numerador de la fracción simplificada.
4 Επιστρέφει τον αριθμητή από την απλοποιημένη παράσταση.
8 化简分子。  对于整数 a 和 b，返回分数 a/b 化简之后的分子。
0 Frac(a/b) or RatFrac
-1 getNum
-2 getDenom
-3 denom
-4 f2nd
numer(25/15)
numer((x^3-1)/(x^2-1))
numer(1+(x^3-1)/x^2)

# DrawSlp
1 Dessine la droite passant par le point (a,b) et de pente m: y-b=m(x-a).
2 Draws the line with slope m,going through the point (a,b): y-b=m(x-a).
3 Traza la recta con pendiente m que pasa por (a,b): y-b=m*(x-a).
4 Σχεδιάζει την ευθεία με κλίση m, που διέρχεται από το σημείο (a,b): y-b=m(x-a).
0 Real(a),Real(b),Real(m)
-1 line
DrawSlp(2,1,-1)


# findhelp ?
1 Renvoie l'aide de la commande (si ? est infixé voir when).
2 Returns the help about the command (if ? is infixed see when) .
3 Devuelve la ayuda sobre el comando (si ? es infijo véase when).
4 Επιστρέφει βοήθεια σχετικά με την εντολή ( αν ? είναι εντεθειμένο δείτε when).
8 帮助。
0 Cmd
-1 ifte
-2 when
findhelp(ifactor)

# Fill
1 Remplit la liste ou la matrice contenue dans A avec l'expression Xpr.
2 Fill the list or the matrix stored in A with Xpr.
3 Rellena la lista o matriz guardada en A con Xpr.
4 Γεμίζει την λίστα ή τον πίνακα που έχει αποθηκευτεί στο Α με την Xpr.
0 Expr(Xpr),Var(A)
-1 makelist
-2 makemat
Fill(1.1,A)

# expr execute
1 Instruction transformant une chaîne en une commande ou en un nombre.
2 Instruction transforming a string into a command or into a number.
3 Instrucción que transforma una cadena en un comando o en un número.
4 Εντολή που μετασχηματίζει μια συμβολοσειρά σε μια εντολή ή σε ένα αριθμό.
0 Str
-1 string
expr("ifactor(54)")
expr("123")
expr("0123")
expr(sin,x)

# list2exp
1 Fonction inverse de exp2list
2 Invert exp2list
0 List
-1 exp2list
list2exp([[3,9],[- 1,1]],[x, y])
list2exp(solve(x^2-1=0),x)

# exp2list
1 Renvoie la liste formée par les membres de droite de (var=expr0 or var=expr1), utile après solve en mode TI.
2 Returns the list made with the right member of (var=expr0 or var=expr1), to be used after solve in TI mode.
3 Devuelve la lista formada por los miembros derechos de (var=expr0 o var=expr1), práctico después de solve en modo TI.
4 Επιστρέφει τη λίστα που δημιουργείται από τα δεξιά μέλη των (var=expr0 ή var=expr1), για να χρησιμοποιηθούν μετά την solve σε λειτουργία TI.
0 Expr
-1 list2exp
exp2list((x=2) or (x=0))
exp2list((x=3 and y=9) or (x=-1 and y=1) )

# ClrGraph ClrDraw
1 Efface les graphes et les objets géométriques de l'écran graphique DispG.
2 Clear the graphs and the geometric objects on the graphic screen DispG.
3 Borra los gráficos y los objetos geométricos en la pantalla gráfica DispG.
4 Καθαρίζει το γράφημα και τα γεωμετρικά αντικείμενα στην οθόνη γραφικών DispG.
0 NULL
-1 ClrIO
-2 erase
-3 erase3d
-4 DispG
ClrGraph()

# NewFold
1 Crée un nouveau répertoire puis on est placé dans ce répertoire.
2 Make a new folder and then we are in this folder.
3 Crea un nuevo directorio y se situa en dicho directorio.
4 Δημιουργεί ένα νέο φάκελο και μετά βρισκόμαστε μέσα σε αυτόν τον κατάλογο.
0 Var
-1 SetFold
-2 DelFold
-3 GetFold
NewFold(essai)

# SetFold
1 Renvoie le nom du répertoire en cours et choisit le nom indiqué comme nouveau répertoire (main pour le répertoire racine).
2 Returns the name of the current folder and chooses the appointed name as new folder (main for the root folder).
3 Devuelve el nombre del directorio actual y escoge el nombre señalado como nuevo directorio (main para el directorio raiz).
4 Επιστρέφει το όνομα του τρέχοντος φακέλου και επιλέγει το καθορισμένο όνομα ως νέο κατάλογο (main για τον αρχικό κατάλογο).
0 Var
-1 NewFold
-2 DelFold
-3 GetFold
SetFold(essai)
SetFold(main)

# DelFold
1 Efface le répertoire indiqué (il y a erreur si ce répertoire n'est pas vide).
2 Remove the appointed folder (there is an error if this folder is not empty).
3 Borra el directorio señalado (hay un error si dicho directorio no está vacio).
4 Απομακρύνει τον καθοριζόμενο κατάλογο (υπάρχει λάθος αν ο κατάλογος δεν είναι κενός).
0 Var
-1 SetFold
-2 NewFold
-3 GetFold
DelFold(essai)

# GetFold
1 Renvoie le nom du répertoire en cours.
2 Returns the name of the current folder.
3 Devuelve el nombre del directorio actual.
4 Επιστρέφει το όνομα του τρέχοντος καταλόγου.
0 Var
-1 SetFold
-2 DelFold
-3 NewFold
GetFold()

# avgRC
1 Calcule le taux d'accroissement de l'expression Xpr quand on passe de var à var+h : (Xpr(var+h)-Xpr(Var))/h (par défaut h=0.001).
2 Returns (Xpr(var+h)-Xpr(Var))/h (by default h=0.001).
3 Devuelve (Xpr(var+h)-Xpr(Var))/h (por defecto h=0.001).
4 Επιστρέφει (Xpr(var+h)-Xpr(Var))/h (προεπιλογή h=0.001).
0 Expr(Xpr),Var(Var),[Real(h)]
-1 nDeriv
avgRC(f(x),x,h)
avgRC(x^2,x,0.1)
avgRC(x^2,x)

# nDeriv
1 Renvoie une approximation du nombre dérivé d'une expression Xpr en un point : (Xpr(var+h)-Xpr(var-h))/(2*h) (par défaut h=0.001).
2 Returns an approximation of the derivative number at a point: (Xpr(var+h)-Xpr(var-h))/(2*h) (by default h=0.001).
3 Devuelve una aproximación de la derivada numérica en un punto: (Xpr(var+h)-Xpr(var-h))/(2*h) (por defecto h=0.001).
4 Επιστρέφει μια προσεγγιστική τιμή της παραγώγου σε ένα σημείο:(Xpr(var+h)-Xpr(var-h))/(2*h) (προεπιλογή h=0.001).
0 Expr(Xpr),Var(Var),[Real(h)]
-1 avgRC
nDeriv(f(x),x,h)
nDeriv(x^2,x,0.1)
nDeriv(x^2,x)

# Archive
1 Protège les variables données comme argument dans un fichier archive.
2 Protects the variables given as argument in an archive file.
3 Proteje las variables dadas como argumento en un archivo.
4 Προστατεύει τις μεταβλητές που δίνονται ως όρισμα σε αρχείο αρχειοθέτησης.
0 SeqVar
-1 Unarchiv
-2 archive
-3 unarchive
Archive(a,b)

# Unarchiv
1 Déprotège les variables données comme argument.
2 Unprotects the variables given as argument.
3 Desprotege las variables dadas como argumento.
4 Απασφαλίζει τις μεταβλητές που δίνονται ως όρισμα.
0 SeqVar
-1 Archive
-2 archive
-3 unarchive
Unarchiv(a,b)

# archive
1 Archive le contenu d'une variable ou d'une liste de variables donnée comme argument dans le fichier spécifié (lisible avec unarchive).
2 Archive the value of a variable or of a list of variables given as argument in the specified file (legible with unarchive).
3 Guarda el contenido de una variable o de una lista de variables dadas como argumento en el archivo especificado (legible con unarchive).
4 Αρχειοθετεί την τιμή μιας μεταβλητής ή μιας λίστας μεταβλητών που δίνονται ως ορίσμα σε ένα συγκεκριμένο αρχείο (αναγνώσιμο με unarchive).
0 Str(namefich),Seq(Var)
-1 unarchive
-2 Archive
-3 Unarchiv
archive("toto",[a,b])
archive("aa.txt",aa)

# unarchive
1 Lit les valeurs d'une variable ou d'une liste des variables qui se trouve dans le fichier donné comme argument (fichier créé avec archive).
2 Reads the value of a variable or of a list of variables which are in the file given as argument (file created with archive).
3 Lee los valores de una variable o de una lista de variables que se encuentran en el archivo dado como argumento (archivo creado con archive).
4 Διαβάζει τις τιμές μιας μεταβλητής ή μιας λίστας μεταβλητών που βρίσκονται στο αρχείο που δίνεται ως ορίσμα (το αρχείο δημιουργείται με την archive).
0 Str(namefich),Seq(Var)
-1 archive
-2 Archive
-3 Unarchiv
unarchive("toto")
unarchive("aa.txt")

# CopyVar
1 Copie sans l'évaluer le contenu de var1 dans var2.
2 Copy the storage without evaluation of var1 into var2.
3 Copia sin evaluar el contenido de var1 en var2.
4 Αντιγράφει χωρίς να υπολογίζει το περιεχόμενο της var1 στη var2.
0 Var(var1),Var(var2)
-1 
CopyVar(A,B)

# csolve cSolve resoudre_dans_C
1 Renvoie la liste des solutions complexes d'une équation ou la matrice dont les lignes sont solutions dans ℂ d'un système d'équations polynomiales.
2 Returns the list of complex solutions of an equation or a matrix where the rows are ℂ-solutions of a system of polynomial equations.
3 Devuelve la matriz cuyas filas son soluciones en ℂ del sistema de ecuaciones polinomiales.
4 Επιστρέφει τον πίνακα όπου οι γραμμές είναι λύσεις στο ℂ ενός συστήματος πολυωνυμικών εξισώσεων.
0 LstEq,LstVar
-1 cZeros
-2 solve
-3 fslove
csolve(x^4-1,x)
csolve(x^4-y^4 and x+y=2,[x,y])
csolve(x^4-y^4 and x+y=0 and x^2=2*x,[x,y])
csolve(u*v-u=v and v^2=u,[u,v])

# arcLen arclen
1 Calcule la longueur de l'arc de courbe définie par y=Xpr(ou par x=Xpr1,y=Xpr2) pour les valeurs du paramètre comprises entre a et b.
2 Returns the length of the arc of the curve defined by y=Xpr(or by x=Xpr1,y=Xpr2) when the parameter values are between a and b.
3 Devuelve la longitud del arco de la curva definida por y=Xpr(o por x=Xpr1,y=Xpr2) cuando los valores de los parámetros están entre a y b.
4 Επιστρέφει το μήκος του τόξου της καμπύλης που ορίζεται ως y=Xpr (ή ως x=Xpr1, y=Xpr2), όταν οι τιμές της παραμέτρου είναι μεταξύ a και b.
0 Expr(Xpr) or Lst([Xpr1,Xpr2]),Var,Real(a),Real(b)
-1 int
arcLen(t^2,t,1,2)
arcLen([t,t^2],t,1,2)
arcLen([cos(t),sin(t)],t,1,2)

# cas_setup
1 Permet d'initialiser le cas, arguments: Approx,Cplx_var,Cplx,Angle,Format,Epsilon,Digit
2 Is the command for initialized the cas, arguments: Approx,Cplx_var,Cplx,Angle,Format,Epsilon,Digit
3 Es el comando que reinicia el cas, argumentos: Approx,Cplx_var,Cplx,Angle,Format,Epsilon,Digit
4 Είναι η εντολή για την ρύθμιση των εξής ορισμάτων στο cas: Approx,Cplx_var,Cplx,Angle,Format,Epsilon,Digit
0 Int,Int,Int,Int,Int,Real,Int
-1 complexe_mode
-2 angle_radian
cas_setup(0,0,0,1,0,1e-10,12)

# about
1 Renvoie les hypothèses faites avec assume sur la variable a.
2 Returns the hypothesis made with assume on the variable a.
3 Devuelve las hipótesis hechas con assume en la variable a.
4 Επιστρέφει τις υποθέσεις που έχουν γίνει με την assume για την μεταβλητή a.
0 Var(a)
-1 assume
-2 purge
about(a)
about(n)

# abscissa
1 Renvoie l'abscisse du point ou du vecteur.
2 Returns the abscissa of a point or a vector.
3 Devuelve la abscisa del punto o del vector.
4 Επιστρέφει την τετμημένη ενός σημείου ή ενός διανύσματος.
0 Pnt or Vect
-1 ordinate
-2 affix
-3 cote
-4 coordinates
abscissa(point(1+2*i))
abscissa(point(i)-point(1+2*i))
abscissa(-1-i)
abscissa(point(1,2,3))

# multinomial
1 Renvoie n!/(k0!*k1!*..;kj!)*(p0^k0*p1^k1..*pj^kj) (sum(p)=1 et sum(k)=n).
2 Returns n!/(k0!*k1!*..;kj!)*(p0^k0*p1^k1..*pj^kj) (sum(p)=1 et sum(k)=n).
3 Devuelve n!/(k0!*k1!*..;kj!)*(p0^k0*p1^k1..*pj^kj) (sum(p)=1 et sum(k)=n).
4 Επιστρέφει n!/(k0!*k1!*..;kj!)*(p0^k0*p1^k1..*pj^kj) (sum(p)=1 et sum(k)=n).
8 =n!/(k0!*k1!*..;kj!)*(p0^k0*p1^k1..*pj^kj) (sum(p)=1 et sum(k)=n)。
0 Intg(n),Vect(p),Vect(k)
-1 binomial
-2 randvector
-3 ranm
multinomial(10,[0.5,0.5],[3,7])
multinomial(10,[0.2,0.3,0.5],[1,3,6])
 randvector(3,multinomial,[1/2,1/3,1/6])
 ranm(4,3,multinomial,[1/2,1/3,1/6])

# binomial
1 Renvoie comb(n,k)*p^k*(1-p)^(n-k) ou comb(n,k) si pas de 3ème argument.
2 Returns comb(n,k)*p^k*(1-p)^(n-k) or comb(n,k) if no 3rd argument.
3 Devuelve comb(n,k)*p^k*(1-p)^(n-k) o comb(n,k) si no hay 3er argumento.
4 Επιστρέφει comb(n,k)*p^k*(1-p)^(n-k) ή comb(n,k) αν δεν υπάρχει 3ο όρισμα.
8 二项式概率密度函数。  计算 n 次试验 k 次成功的概率，其中每次试验成功的概率为 p。  如果没有第三个实参，则返回 Comb(n,k)。  注意 n 与 k 均为整数，并有 k=n。
0 Intg(n),Intg(k),[Real(p in 0..1)]
-1 binomial_cdf
-2 binomial_icdf
-3 multinomial
-4 randvector
-5 ranm
binomial(4,2)
binomial(4,0,0.5)
binomial(4,2,0.5)
 assume(p>=0 and p<=1);binomial(4,2,p)
 assume(p>=0 and p<=1);binomial(4,p,2)
 randvector(6,binomial,4,0.2)
 ranm(4,6,binomial,4,0.7)

# binomial_cdf
1 Renvoie Proba(X<=x) ou Proba(x<=X<=y) quand X suit la loi B(n,p).
2 Returns Proba(X<=x) or Proba(x<=X<=y) when X follows the B(n,p) law.
3 Devuelve Proba(X<=x) o Proba(x<=X<=y) cuando X sigue la ley B(n,p).
4 Επιστρέφει Proba(X<=x) όταν X ακολουθεί την κατανομή B(n,p).
8 累积二项式分布函数。  计算 n 次试验不超过 x 次成功的概率，其中每次试验成功的概率为 p。  注意 n 与 x 均为整数，并有 x=n。
0 Intg(n),Real(p),Real(x),[Real(y)]
-1 binomial
-2 binomial_icdf
binomial_cdf(4,0.5,2)
binomial_cdf(4,0.1,2)
binomial_cdf(4,0.5,2,3)

# binomial_icdf
1 Renvoie h tel que Proba(X<=h)=t quand X suit la loi B(n,p).
2 Returns h such as Proba(X<=h)=t when X follows the B(n,p) law.
3 Devuelve h tal que Proba(X<=h)=t cuando X sigue la ley B(n,p).
4 Επιστρέφει h τέτοιο ώστε Proba(X<=x) όταν X ακολουθεί την κατανομή B(n,p).
8 累积二项式分布函数的反函数。  返回 n 次试验的成功次数 k，其中每次试验成功的概率为 p，不超过 k 次成功的概率为 q。
0 Intg(n),Real(p),Real(t)
-1 binomial
-2 binomial_cdf
binomial_icdf(4,0.5,0.68)
binomial_icdf(4,0.1,0.95)

# negbinomial
1 Renvoie comb(n+k-1,k)*p^k*(1-p)^n.
2 Returns comb(n+k-1,k)*p^k*(1-p)^n.
3 Devuelve comb(n+k-1,k)*p^k*(1-p)^n.
4 Επιστρέφει comb(n+k-1,k)*p^k*(1-p)^n.
8 =comb(n+k-1,k)*p^k*(1-p)^n。
0 Intg(n),Intg(k),Real(p in 0..1)
-1 negbinomial_cdf
-2 negbinomial_icdf
-3 binomial
negbinomial(4,0,0.5)
negbinomial(4,2,0.6)
negbinomial(4,6,0.3)

# negbinomial_cdf
1 Renvoie Proba(X<=x) ou Proba(x<=X<=y) quand X suit la loi negbinomial(n,p).
2 Returns Proba(X<=x) or Proba(x<=X<=y) when X follows the negbinomial(n,p) law.
3 Devuelve Proba(X<=x) o Proba(x<=X<=y) cuando X sigue la ley negbinomial(n,p).
4 Επιστρέφει Proba(X<=x) όταν X ακολουθεί την κατανομή negbinomial(n,p).
0 Intg(n),Real(p),Real(x),[Real(y)]
-1 negbinomial
-2 negbinomial_icdf
negbinomial_cdf(4,0.5,2)
negbinomial_cdf(4,0.1,2)
negbinomial_cdf(4,0.5,2,3)

# negbinomial_icdf
1 Renvoie h tel que Proba(X<=h)=t quand X suit la loi negbinomial(n,p).
2 Returns h such as Proba(X<=h)=t when X follows the negbinomial(n,p) law.
3 Devuelve h tal que Proba(X<=h)=t cuando X sigue la ley negbinomial(n,p).
4 Επιστρέφει h τέτοιο ώστε Proba(X<=x) όταν X ακολουθεί την κατανομή negbinomial(n,p).
0 Intg(n),Real(p),Real(t)
-1 negbinomial
-2 negbinomial_cdf
negbinomial_icdf(4,0.5,0.68)
negbinomial_icdf(4,0.1,0.95)

# colspace
1 Renvoie une matrice dont les colonnes forment une base de l'espace vectoriel engendré par les colonnes de la matrice A [d est la dimension de cet espace].
2 Returns a matrix where the columns are a basis of the vector space generated by the columns of the matrix A [d is the dimension of this space].
3 Devuelve una matriz cuyas columnas constituyen una base del espacio de vectores generado por las columnas de la matriz A [d es la dimensión de este espacio].
4 Επιστρέφει έναν πίνακα όπου οι στήλες αποτελούν τη βάση του διανυσματικού χώρου που παράγεται από τις στήλες του πίνακα Α [d είναι η διάσταση αυτού του χώρου].
0 Mtrx(A), [Var(d)]
-1 rowspace
colspace([[1,2,3],[1,2,3],[1,2,4],[1,2,5]])
colspace([[1,2,3],[1,3,6],[2,5,9]],d)

# @@
1 f @@ n désigne la fonction : fof..of (n fois) (opérateur infixé).
2 f @@ n is the function fof..of (n times) (infixed operator).
3 f @@ n designa la función: fof...of (n veces) (operador infijo).
4 f @@ n Παριστάνει την εντολή fof..of (n φορές) (εντεθειμένος τελεστής).
0 Fnc(f),Intg(n)
-1 @
 sin@@3
 (sin@@3)(x)

# @
1 Désigne la composition de fonctions (opérateur infixé).
2 Is the infixed operator for composition of functions.
3 Es el operador infijo de la composición de funciones.
4 Είναι ο εντεθειμένος τελεστής για τη σύνθεση συναρτήσεων.
0 Fnc,Fnc
-1 @@
 sq@sin
 sin@sin
 (sq@sin)(x)

# angle_radian
1 Pseudo-variable pour travailler en radian (angle_radian:=1) ou en degré (angle_radian:=0).
2 Pseudo-variable to work with radian (angle_radian:=1) or degree (angle_radian:=0).
3 Nombre que permite trabajar con radianes (angle_radian:=1) o grados (angle_radian:=0).
4 Ορίζει αν οι πράξεις θα εκτελούνται σε ακτίνια (angle_radian:=1) ή σε μοίρες (angle_radian:=0).
0 :=Intg(0 or 1)
-1 cas_setup
 angle_radian:=1
 angle_radian:=0

# approx_mode
1 Pseudo-variable pour travailler en mode approximatif (approx_mode:=1) ou en mode exact (approx_mode:=0).
2 Pseudo-variable to work in approximative mode (approx_mode:=1) or in exact mode (approx_mode:=0).
3 Nombre que permite trabajar en modo aproximado (approx_mode:=1) o en modo exacto (approx_mode:=0).
4 Ορίζει αν οι πράξεις θα εκτελούνται προσεγγιστικά (approx_mode:=1) ή με ακρίβεια (approx_mode:=0).
0 :=Intg(0 or 1)
-1 cas_setup
 approx_mode:=1
 approx_mode:=0

# complex_mode
1 Pseudo-variable pour travailler en mode complexe (complex_mode:=1) ou en mode réel (complex_mode:=0).
2 Pseudo-variable to work in complex mode (complex_mode:=1) or in real mode (complex_mode:=0).
3 Nombre que permite trabajar en modo complejo (complex_mode:=1) o en modo real (complex_mode:=0).
4 Ορίζει αν οι πράξεις θα εκτελούνται στους μιγαδικούς (complex_mode:=1) ή στους πραγματικούς (complex_mode:=0).
0 :=Intg(0 or 1)
-1 cas_setup
 complex_mode:=1
 complex_mode:=0

# complex_variables
1 Pseudo-variable pour travailler avec des variables complexes (complex_variables:=1) ou avec des variables réelles (complex_variables:=0).
2 Pseudo-variable to work with complex variables (complex_variables:=1) or with real variables (complex_variables:=0).
3 Nombre que permite trabajar con variables complejas (complex_variables:=1) o con variables reales (complex_variables:=0).
4 Ορίζει αν οι πράξεις θα εκτελούνται με μιγαδικές μεταβλητές (complex_variables:=1) ή με πραγματικές μεταβλητές (complex_variables:=0).
0 :=Intg(0 or 1)
-1 cas_setup
 complex_variables:=1
 complex_variables:=0

# variables_are_files
1 Pseudo-variable pour spécifier si on veut sauver les différentes variables dans un fichier "nomdelavariable.cas".
2 Pseudo-variable to specify if you want to save the variables as file "nameofthevariable.cas".
3 Nombre que permite especificar si se quieren guardar las variables como "nombredevariable.cas".
4 Επιτρέπει να καθορίσουμε αν επιθυμούμε την αποθήκευση των μεταβλητών στο αρχείο "nameofthevariable.cas".
0 :=Intg(0 or 1)
-1 cas_setup
 variables_are_files:=1
 variables_are_files:=0

# all_trig_solutions
1 Pseudo-variable pour renvoyer la solution generale (all_trig_solutions:=1) ou la solution principale (all_trig_solutions:=0).
2 Pseudo-variable to return the general solution (all_trig_solutions:=1) or principal solution (all_trig_solutions:=0).
0 :=Intg(0 or 1)
-1 cas_setup
 all_trig_solutions:=1
 all_trig_solutions:=0

# with_sqrt
1 Pseudo-variable pour forcer la factorisation des polynomes de degre 2 (with_sqrt:=1)
2 Pseudo-variable to force factorization of polynomial of degree 2 (with_sqrt:=1)
0 :=Intg(0 or 1)
-1 cas_setup
 with_sqrt:=1
 with_sqrt:=0

# increasing_power
1 Pseudo-variable pour controler l'affichage en puissances croissantes (increasing_power:=1) ou decroissantes (increasing_power:=0) des polynomes
2 Pseudo-variable to control display of polynomial
0 :=Intg(0 or 1)
-1 cas_setup
 increasing_power:=1
 increasing_power:=0

# Digits DIGITS
1 Pseudo-variable pour modifier le nombre n de chiffres significatifs (Digits:=n).
2 Pseudo-variable to modify the number of significant digits (Digits:=n).
3 Nombre que permite modificar el número de dígitos significantes (Digits:=n).
4 Επιτρέπει την τροποποίηση του αριθμού n των σημαντικών ψηφίων (Digits:=n).
0 :=Intg(n)
-1 cas_setup
 Digits:=16
 Digits:=24

# function_diff fonction_derivee
1 Renvoie la fonction dérivée de la fonction f.
2 Returns the derivative function of the function f.
3 Devuelve la función derivada de la función f.
4 Επιστρέφει την παράγωγο της συνάρτησης f.
0 Fnc(f)
-1 diff
-2 '
-3 @
function_diff(sin+id)
function_diff(sq@sin+id)
function_diff(ln)(x,y)
function_diff(ln)([x,y])
 (function_diff @@3)(ln)('x') 

# id
1 Désigne la fonction identité (ℝ^n -> ℝ^n).
2 Is the name of the identity function (ℝ^n -> ℝ^n).
3 Es el nombre de la función identidad (ℝ^n -> ℝ^n).
4 Είναι η ταυτοτική συνάρτηση (ℝ^n -> ℝ^n).
8 识别函数。
0 Seq
-1 sq
-2 sqrt
id(1,2,3)

# ordinate
1 Renvoie l'ordonnée du point ou du vecteur.
2 Returns the ordinate of a point or a vector.
3 Devuelve la ordenada de un punto o de un vector.
4 Επιστρέφει την τεταγμένη ενός σημείου ή ενός διανύσματος.
0 Pnt or Vect
-1 abscissa
-2 affix
-3 cote
-4 coordinates
ordinate(point(1+2*i))
ordinate(point(i)-point(1+2*i))
ordinate(-1-i)
ordinate(point(1,2,3))

# poisson_cdf
1 Renvoie Proba(X<=x) quand X suit la loi de Poisson de moyenne mu.
2 Returns Proba(X<=x) when X follows the Poisson law with mu as mean.
3 Devuelve Proba(X<=x) cuando X sigue la ley de Poisson con promedio mu.
4 Επιστρέφει τη Proba(X<=x) όταν X ακολουθεί την κατανομή Poisson με μέση τιμή μ.
8 累积泊松分布函数。  返回给定时段内一个事件的发生次数不超过 x 次的概率，其中给定了预期（或平均）发生次数 mu。
0 Real(mu),Real(x)
-1 poisson
-2 poisson_icdf
poisson_cdf(4.0,7)
poisson_cpdf(2.5,4)

# poisson_icdf
1 Renvoie h tel que Proba(X<=h)=p quand X suit la loi de Poisson de paramètre mu.
2 Returns h such as Proba(X<=h)=p when X follows the Poisson law with mu as parameter.
3 Devuelve h tal que Proba(X<=h)=p cuando X sigue una ley de Poisson con mu como parámetro.
4 Επιστρέφει h τέτοιο ώστε Proba(X<=x)=p όταν X ακολουθεί την κατανομή Poisson με μέση τιμή μ.
8 累积泊松分布函数的反函数。  返回 x 值，以使一定时段内一个事件的发生次数不超过 x 次的概率为 p，其中给定了预期（或平均）发生次数 mu。
0 Real(mu),Real(p)
-1 poisson
-2 poisson_cdf
poisson_icdf(4.0,0.95)
poisson_icdf(2.5,0.9)

# poisson
1 Renvoie exp(-mu)*mu^k/k!
2 Returns exp(-mu)*mu^k/k!
3 Devuelve exp(-mu)*mu^k/k!
4 Επιστρέφει exp(-mu)*mu^k/k!
8 泊松概率质量函数。  计算一个事件在一定时段内发生 k 次的概率，其中给定了该时段内事件的预期发生次数（或平均数）mu。  对于该函数，k 是非负整数，mu 是实数。
0 Real(mu),Intg(k)
-1 poisson_cdf
-2 poisson_icdf
-3 randvector
-4 ranm
poisson(0.5,2)
poisson(4.0,2)
 randvector(3,poisson,0.5)
 ranm(4,3,poisson,0.5)

# rowspace
1 Renvoie une matrice dont les lignes forment une base de l'espace vectoriel engendré par les lignes de la matrice A [d est la dimension de cet espace].
2 Returns a matrix where the rows are a basis of the vector space generated with the rows of the matrix A [d is the dimension of this space].
3 Devuelve una matriz donde las filas constituyen una base del espacio vectorial generado por las filas de la matriz A [d es la dimensión de este espacio].
4 Επιστρέφει έναν πίνακα οι γραμμές του οποίου αποτελούν την βάση του διανυσματικού χώρου που παράγεται από τις γραμμές του πίνακα A [d είναι η διάσταση αυτού του χώρου].
0 Mtrx(A), [Var(d)]
-1 colspace
rowspace([[1,2,3],[1,2,3],[1,2,4],[1,2,5]])
rowspace([[1,2,3],[1,3,6],[2,5,9]],d)

# sq
1 Désigne le nom de la fonction (ℝ^n -> ℝ)=somme des carrés des arguments.
2 Is the name of the function (ℝ^n -> ℝ)=sum of the square of the arguments.
3 Es el nombre de la función (ℝ^n -> ℝ)=suma del cuadrado de los argumentos.
4 Είναι το όνομα της συνάρτησης (ℝ^n -> ℝ)=άθροισμα των τετραγώνων των ορισμάτων.
0 Seq
-1 sqrt
sq(5)
sq(1,2,3)

# linear_interpolate
1 Échantillonne de manière régulière une ligne polygonale définie par une matrice à 2 lignes
2 Make a regular sample from a polygonal line defined by a 2 rows matrix
3 Da una muestra regular de una línea polígonal definida por una matriz con 2 líneas.
4 Δημιουργεί ένα κανονικό δείγμα από μια πολυγωνική γραμμή που ορίζεται από έναν πίνακα 2 γραμμών.
0 Mtrx,xmin,xmax,xstep
-1 polygonplot
linear_interpolate([[1,2,6,9],[3,4,6,7]],1,9,1)

# logistic_regression
1 Renvoie y,y',C,y'max,xmax,R : y est une fonction logistique (sol de y'/y=a*y+b) telle que y(x0)=y0 et dont le y' approche au mieux les valeurs de L pour x=x0, x0+1...x0+k.
2 Returns y,y',C,y'max,xmax,R : y is a logistic function (sol of y'/y=a*y+b), such that y(x0)=y0 and where [y'(x0),y'(x0+1)...] is the best approximation of L.
3 Devuelve y,y',C,y'max,xmax,R : y es una función logística (sol de y'/y=a*y+b) tal que y(x0)=y0 y donde el y' es la mejor aproximación de los valores de L pour x=x0, x0+1...x0+k.
4 Επιστρέφει y,y',C,y'max,xmax,R : y είναι μια λογιστική συνάρτηση (λύση της y'/y=a*y+b), τέτοια ώστε y(x0)=y0 και όπου [y'(x0),y'(x0+1)...] είναι η βέλτιστη προσέγγιση της L.
0 Lst(L),Real(x0),Real(y0)
-1 polynomial_regression
-2 power_regression
-3 linear_regression
logistic_regression(evalf([1,2,4,6,8,7,5]),1,2)
logistic_regression([0.0,1.0,2.0,3.0,4.0],0.0,1.0)

# logistic_regression_plot
1 Renvoie le graphe de la fonction logistique y telle que y(x0)=y0 et dont le y' approche au mieux les valeurs de L pour x=x0, x0+1...x0+k.
2 Returns the plot of a logistic function y such that y(x0)=y0 and where [y'(x0),y'(x0+1)...] is the best approximation of L.
3 Devuelve el gráfico de la función logística y tal que y(x0)=y0 y donde el y' es la mejor aproximación de los valores de L para x=x0, x0+1...x0+k.
4 Επιστρέφει το γράφημα μιας λογιστικής συνάρτησης y τέτοιας ώστε y(x0)=y0 και όπου [y'(x0),y'(x0+1)...] είναι η βέλτιστη προσέγγιση της L.
0 Lst(L),Real(x0),Real(y0)
-1 polynomial_regression_plot
-2 power_regression_plot
-3 linear_regression_plot
logistic_regression_plot(evalf([1,2,4,6,8,7,5]),1,2)
logistic_regression_plot([0.0,1.0,2.0,3.0,4.0],0.0,1.0)

# linear_regression
1 Renvoie les coefficients a et b de y=a*x+b : c'est la droite qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes).
2 Returns the coefficients a and b of y=a*x+b ;it is the best line approx the points where the coordinates are the rows of A (or the 2 lists).
3 Devuelve los coeficientes a y b de y=a*x+b: la mejor aproximación de la recta cuyas coordenadas son las filas de A (o las 2 listas).
4 Επιστρέφει τους συντελεστές a και b της y=a*x+b; είναι η βέλτιστη γραμμική προσέγγιση των σημείων οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες).
0 Lst||Mtrx(A),[Lst]
-1 polynomial_regression
-2 power_regression
-3 logistic_regression
linear_regression([[0.0,0.0],[1.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]])
linear_regression([0.0,1.0,2.0,3.0,4.0],[0.0,1.0,4.0,9.0,16.0])

# linear_regression_plot
1 Renvoie le graphe de y=a*x+b : c'est la droite qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes).
2 Returns the plot of y=a*x+b ;it is the best line approx the points where the coordinates are the rows of A (or the 2 lists).
3 Devuelve el gráfico de y=a*x+b: la mejor aproximación de la recta cuyas coordenadas son las filas de A (o las 2 listas).
4 Επιστρέφει το γράφημα της y=a*x+b; είναι η βέλτιστη γραμμική προσέγγιση των σημείων οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες).
0 Lst||Mtrx(A),[Lst]
-1 polynomial_regression_plot
-2 power_regression_plot
linear_regression_plot([[0.0,0.0],[1.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]])
linear_regression_plot([0.0,1.0,2.0,3.0,4.0],[0.0,1.0,4.0,9.0,16.0])


# logarithmic_regression
1 Renvoie les coefficients (m, b) de y=m*ln(x)+b : c'est le logarithme qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes).
2 Returns the coefficients a and b of y=a*ln(x)+b : it is the best logarithm which approx the points where the coordinates are the rows of A (or the 2 lists).
3 Devuelve los coeficientes a y b de y=a*ln(x)+b: la mejor aproximación logarítmica cuyas coordenadas son las filas de A (o las 2 listas).
4 Επιστρέφει τους συντελεστές a και b της y=a*ln(x)+b; είναι ο βέλτιστος λογάριθμος που προσεγγίζει τα σημεία οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες).
0 Lst||Mtrx(A),[Lst]
-1 exponential_regression
logarithmic_regression([[1.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]])
logarithmic_regression([1.0,2.0,3.0,4.0],[1.0,4.0,9.0,16.0])

# logarithmic_regression_plot
1 Renvoie le graphe de y=m*ln(x)+b : c'est le logarithme qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes).
2 Returns the plot of y=a*ln(x)+b : it is the best logarithm which approx the points where the coordinates are the rows of A (or the 2 lists).
3 Devuelve la gráfica de y=a*ln(x)+b: la mejor aproximación logarítmica cuyas coordenadas son las filas de A (o las 2 listas).
4 Επιστρέφει το γράφημα της y=a*ln(x)+b; είναι ο βέλτιστος λογάριθμος που προσεγγίζει τα σημεία οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες).
0 Lst||Mtrx(A),[Lst]
-1 exponential_regression_plot
logarithmic_regression_plot([[1.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]])
logarithmic_regression_plot([1.0,2.0,3.0,4.0],[1.0,4.0,9.0,16.0])

# polynomial_regression
1 Renvoie les coefficients (an,...a1,a0) de y=an*x^n+..a1x+a0) : c'est le polynôme qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes) (n est le 2ème argument).
2 Returns the coefficients (an,...a1,a0) of y=an*x^n+..a1x+a0) : it is the best polynomial which approx the points where the coordinates are the rows of A (or the 2 lists) (n is the 2nd argument).
3 Devuelve los coeficientes (an,..,a1,a0) de y=an*x^n+..+a1*x+a0: la mejor aproximación polinomial para los puntos cuyas coordenadas están en las filas de A (o las 2 listas) (n es el segundo argumento).
4 Επιστρέφει τους συντελεστές (an,..,a1,a0) της y=an*x^n+..+a1*x+a0: είναι το βέλτιστο πολυώνυμο που προσεγγίζει τα σημεία οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες)(n είναι το 2ο όρισμα).
0 Lst||Mtrx(A),[Lst],Intg(n)
-1 linear_regression
-2 power_regression
polynomial_regression([[1.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]],3)
polynomial_regression([[0.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]],3)
polynomial_regression([0.0,2.0,3.0,4.0],[1.0,4.0,9.0,16.0],3)

# polynomial_regression_plot
1 Renvoie le graphe de y=an*x^n+..a1x+a0) : c'est le polynôme qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes) (n est le 2ème argument).
2 Returns the plot of y=an*x^n+..a1x+a0) : it is the best polynomial which approx the points where the coordinates are the rows of A (or the 2 lists) (n is the 2nd argument).
3 Devuelve la gráfica de y=an*x^n+..+a1*x+a0: la mejor aproximación polinomial para los puntos con coordenadas en las filas de A (o las 2 listas) (n es el segundo argumento).
4 Επιστρέφει το γράφημα της y=an*x^n+..+a1*x+a0: είναι το βέλτιστο πολυώνυμο που προσεγγίζει τα σημεία οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες)(n είναι το 2ο όρισμα).
0 Lst||Mtrx(A),[Lst],Intg(n)
-1 linear_regression_plot
-2 power_regression_plot
polynomial_regression_plot([[1.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]],3)
polynomial_regression_plot([[0.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]],3)
polynomial_regression_plot([0.0,2.0,3.0,4.0],[1.0,4.0,9.0,16.0],3)

# power_regression
1 Renvoie les coefficients (m,b) de y=b*x^m : c'est le monôme qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes).
2 Returns the coefficients (m,b) of y=b*x^m : it is the best monomial which approx the points where the coordinates are the rows of A (or the 2 lists).
3 Devuelve los coeficientes (m,b) de y=b*x^m: la mejor aproximación monomial para puntos con coordenadas en las filas de A (o las 2 listas).
4 Επιστρέφει τους συντελεστές (m,b) της y=b*x^m: είναι το βέλτιστο μονώνυμο που προσεγγίζει τα σημεία οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες)(n είναι το 2ο όρισμα).
0 Lst|Mtrx(A),[Lst]
-1 polynomial_regression
-2 linear_regressiont
power_regression([[1.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]])
power_regression([[1.0,2.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]])
power_regression([1.0,2.0,3.0,4.0],[2.0,4.0,9.0,16.0])

# power_regression_plot
1 Renvoie le graphe de y=b*x^m : c'est le monôme qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes).
2 Returns the plot of y=b*x^m : it is the best monomial which approx the points where the coordinates are the rows of A (or the 2 lists).
3 Devuelve la gráfica de y=b*x^m: la mejor aproximación monomial para puntos con coordenadas en las filas de A (o las 2 listas).
4 Επιστρέφει το γράφημα της y=b*x^m: είναι το βέλτιστο μονώνυμο που προσεγγίζει τα σημεία οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες)(n είναι το 2ο όρισμα).
0 Lst||Mtrx(A),[Lst]
-1 polynomial_regression_plot
-2 linear_regression_plot
power_regression_plot([[1.0,1.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]])
power_regression_plot([[1.0,2.0],[2.0,4.0],[3.0,9.0],[4.0,16.0]])
power_regression_plot([1.0,2.0,3.0,4.0],[2.0,4.0,9.0,16.0])

# parfrac fullparfrac
1 Option de la commande convert ou convertir (id à l'option partfrac).
2 Option of the convert or convertir command (id at the option partfrac).
3 Opción del comando convert o convertir (id a opción partfrac).
4 Επιλογή της εντολής convert ή convertir (id με eπιλογή partfrac).
0 Opt
-1 convert
 convert(1/(x^2-1),parfrac)
 convert(1/(x^2-1),fullparfrac)

# confrac
1 Option de la commande convert ou convertir (ex id L:=dfc(sqrt(2),1e-10)).
2 Option of the convert or convertir command (ex id L:=dfc(sqrt(2),1e-10)).
3 Opción del comando convert o convertir (ex id L:=dfc(sqrt(2),1e-10)).
4 Επιλογή της εντολής convert ή convertir (ex id L:=dfc(sqrt(2),1e-10)).
0 Opt
-1 convert
 convert(sqrt(2),confrac,'L'),L

# interval
1 Option de la commande convert ou convertir.
2 Option of the convert or convertir command.
3 Opción del comando convert o convertir.
4 Επιλογή της εντολής convert ή convertir.
0 Opt
-1 interval
 convert(sqrt(2),interval)
 convert(sqrt(2),interval,20)
 convert(sqrt(2)*sin(2)+sqrt(2)*cos(2),interval,20)

# convert convertir
1 Renvoie la valeur de cmd(Xpr) si cmd est le nom d'une commande spécifiée par le 2ème argument ou réécrit Xpr selon l'option cmd (par ex option sin=commande trigsin).
2 Returns the value of cmd(Xpr) cmd is the name of a command specified by the 2nd argument (for ex option sin=command trigsin).
3 Devuelve el valor de cmd(Xpr) cmd es el nombre de un comando especificado como 2o argumento (por ejemplo option sin=command trigsin).
4 Επιστρέφει την τιμή cmd(Xpr), όπου cmd είναι το όνομα μιας εντολής που καθορίζεται από το 2ο όρισμα ή ξαναγράφει την expr σύμφωνα με την επιλογή cmd (π.χ. option sin=command trigsin).
0 Expr(Xpr),Cmd(cmd)
-1 mksa
-2 list
-3 polynom
-4 table
convert(cos(x)^2,sin)
convert(exp(i*x),sincos)
convert(1/(x^4-1),parfrac)
convert(series(sin(x),x=0,6),polynom)
convert([[1,[2,0]],[2,[1,1]],[1,[0,2]]],polynom)
convert(%%%{1,[2,0]%%%}+%%%{2,[1,1]%%%}+%%%{1,[0,2]%%%},list)
convert(cos(x)^2+1,sin)
convert(3e10 _m,_au)
convert(pi _rad,_deg)
convert(9976/6961,confrac,'l');l
convert(sqrt(2),confrac,'dev');dev
convert(123,base,8)
convert([3,7,1],base,8)
convert([1,2,3],set[])
convert(pi,interval,20)
 A[2,1]:=1;convert(A,array)
 B[0..1,1..2]:=1;B[2,2]:=2;convert(B,array)

# base
1 Option de convert : convert(p,base,b)= [a0,a1,..an] ou convert([a0,a1,..an],base,b)=p avec p=a0+a1*b+....an*b^(n-1) et p écrit en base 10.
2 Option for convert : convert(p,base,b)= [a0,a1,..an] or convert([a0,a1,..an],base,b)=p with p=a0+a1*b+....an*b^(n-1).
3 Opción para convert : convert(p,base,b)=[a0,a1,..an] o convert([a0,a1,..an],base,b)=p con p=a0+a1*b+....an*b^(n-1).
4 Όρισμα της convert : convert(p,base,b)= [a0,a1,..an] ή convert([a0,a1,..an],base,b)=p όπου p=a0+a1*b+....an*b^(n-1) και p γραμμένο στην βάση 10.
0 Opt
-1 convert
-2 horner
-3 revlist
 convert(123,base,8)
 convert([3,7,1],base,8)
 horner(revlist([3,7,1]),8)

# array
1 Option de convert pour définir des matrices creuses.
2 Option for convert for definitions of sparse matrix definitions.
3 Opción para convert.
4 Όρισμα της convert.
0 Opt
-1 convert
-2 table
 A[0..2,0..2]:=1;A[0..1,1..2]:=2;convert(A,array)
 B[0..1,1..2]:=1;B[2,2]:=2;convert(B,array)

# lcoeff
1 Renvoie le coefficient du terme de plus haut degré d'un polynôme (l=leading=dominant).
2 Returns the coefficient of the term of highest degree of a polynomial (l=leading).
3 Devuelve el coeficiente del término de mayor grado de un polinomio (l=leading=dominante).
4 Επιστρέφει τον συντελεστή του όρου με το μέγιστο βαθμό σε ένα πολυώνυμο (l=leading=ηγετικό).
0 Poly||Lst
-1 tcoeff
lcoeff(-2*x^3+x^2+7*x)
lcoeff([-2,1,7,0])

# tcoeff
1 Renvoie le coefficient du terme de plus bas degré d'un polynôme (t=trailing).
2 Returns the coefficient of the term of lowest degree of a polynomial (t=trailing).
3 Devuelve el coeficiente del término de menor grado de un polinomio (t=trailing).
4 Επιστρέφει τον συντελεστή του όρου με τον ελάχιστο βαθμό σε ένα πολυώνυμο (t=trailing=τελευταίο).
0 Poly||Lst
-1 lcoeff
tcoeff(-2*x^3+x^2+7*x)
tcoeff([-2,1,7,0])

# list2mat
1 Renvoie la matrice ayant n colonnes dont les termes sont donnés par l complétée éventuellement par 0.
2 Returns the matrix with n columns and where terms are the list l completed eventually by 0.
3 Devuelve la matriz de n columnas cuyos términos están dados por l completada posiblemente por 0.
4 Επιστρέφει τον πίνακα με n στήλες τα στοιχεία των οποίων δίδονται από την λίστα l (συμπληρωμένη, αν χρειάζεται, με 0).
0 Lst(l),Intg(n)
-1 mat2list
list2mat([1,8,4,9],1)
list2mat([1,8,4,9],2)

# mat2list
1 Renvoie la liste contenant les termes de la matrice.
2 Returns the list of the terms of the matrix.
3 Devuelve la lista de términos de la matriz.
4 Επιστρέφει μια λίστα που περιέχει τους όρους του πίνακα.
0 Mtrx
-1 list2mat
-2 flatten
mat2list([[1,8],[4,9]])

# deltalist
1 Renvoie la liste obtenue en faisant la différence de deux termes consécutifs.
2 Returns the list of the difference of two terms in succession.
3 Devuelve una lista con las diferencias de términos consecutivos en una sucesión.
4 Επιστρέφει την λίστα με τις διαφορές 2 συνεχόμενων όρων σε μία ακολουθία.
8 列表。  创建数据列一阶差组成的新列； 即数据列中连续元素的差值。 新列中的元素比原数据列少一个。
0 Lst
-1 
deltalist([1,4,8,9])
deltalist([1,8,4,9])

# multiply
1 Renvoie le produit des 2 arguments.
2 Returns the product of the 2 arguments.
3 Devuelve el producto de 2 argumentos.
4 Επιστρέφει το γινόμενο των 2 ορισμάτων.
8  相乘。  对象可以是数值或返回数值结果的表达式。  对象也可以是列表或合适维数的矩阵。
0 Intg or Lst, Intg or Lst
-1 *
multiply(41,-4)
multiply([4,1],[-4,2])
multiply([[4,1],[-4,1]],[[4,1],[-4,1]])

# accumulate_head_tail
1 Renvoie la liste obtenue à partir de l, en remplaçant les p premiers et les q derniers éléments par leur somme.
2 Returns the list where the first p and the last q elements of l are replaced by their sum.
3 Devuelve la lista obtenida a partir de l, donde los primeros p y los últimos q elementos son reemplazados por su suma.
4 Επιστρέφει μια λίστα όπου οι πρώτοι p και οι τελευταίοι q όροι της l έχουν αντικατασταθεί από το άθροισμα τους.
0 Lst(l),Intg(p),Intg(q)
-1 
accumulate_head_tail([0,1,2,3,4,5,6,7,8,9],3,2)

# square
1 Renvoie et dessine le carré de coté AB (ABCD est direct) (dans le plan ABP).
2 Returns and draws the square of side AB (ABCD is direct) (in the plane ABP.
3 Devuelve y traza el cuadrado de lado AB (ABCD es directo) (en el plan ABP).
4 Επιστρέφει και σχεδιάζει ένα τετράγωνο πλευράς ΑΒ (ABCD αριστερόστροφο=is direct) (στο επίπεδο ΑΒΡ).
0 (Pnt(A) or Cplx),(Pnt(B) or Cplx),[Pnt(P),Var(C),Var(D)]
-1 rhombus
-2 quadrilateral
square(i,1+i)
square(i,1+i,C,D)
square(point(0,0,0),point(3,3,3),point(0,0,3))
square(point(0,0,0),point(3,3,3),point(0,0,3),C,D)

# hexagon
1 Renvoie et dessine l'hexagone de coté AB (ABCDEF est direct) (dans le plan ABP).
2 Returns and draws the hexagon of side AB (ABCDEF is direct) (in the plane ABP.
3 Devuelve y traza el hexágono de lado AB (ABCD es directo) (en el plan ABP).
4 Επιστρέφει και σχεδιάζει ένα εξάγωνο πλευράς ΑΒ (ABCDEF αριστερόστροφο=direct) (στο επίπεδο ΑΒΡ).
0 Pnt(A)||Cplx,Pnt(B)||Cplx,[Pnt(P)],[Var(C)],[Var(D)],[Var(E)],[Var(F)]
-1 isopolygon
-2 polygon
hexagon(i,1+i)
hexagon(i,1+i,C,D,E,F)
hexagon(point(0,0,0),point(3,3,3),point(0,0,3))
hexagon(point(0,0,0),point(3,3,3),point(0,0,3),C,D,E,F)

# rhombus
1 Renvoie et dessine le losange ABCD tel que angle (AB,AD)=a (ou dans le plan ABP angle(AB,AD)=angle(AB,AP) ou tel que angle(AB,AD)=a).
2 Returns and draws the rhombus ABCD such as the angle (AB,AD)=a (or in the plane ABP angle(AB,AD)=angle(AB,AP) or such that angle(AB,AD)=a).
3 Devuelve y traza el rombo ABCD tal que el ángulo (AB,AD)=a (o en el plano ABPangle(AB,AD)=angle(AB,AP) o angle(AB,AD)=a).
4 Επιστρέφει και σχεδιάζει τον ρόμβο ABCD έτσι ώστε η γωνία (AB,AD)=a (ή στο επίπεδο ABP γωνία(AB,AD)=γωνία(AB,AP) ή τέτοιο ώστε η γωνία(AB,AD)=a).
0 Pnt(A)||Cplx,Pnt(B)||Cplx,Angle(a)||Pnt(P)||Lst(P,a)),[Var(C)],[Var(D)]
-1 square
-2 quadrilateral
rhombus(i,1+i,pi/4)
rhombus(i,1+i,pi/4,C,D)
rhombus(point(0,0,0),point(3,3,3),[point(0,0,3),pi/4])
rhombus(point(0,0,0),point(3,3,3),point(0,0,3),C,D)
rhombus(point(0,0,0),point(3,3,3),[point(0,0,3),pi/4],C,D)

# polygon
1 Renvoie et dessine le polygone de sommets les éléments de l.
2 Returns and draws the polygon where its vertices are the element of l.
3 Devuelve y traza el polígono cuyos vértices son los elementos de l.
4 Επιστρέφει και σχεδιάζει το πολύγωνο με κορυφές τα στοιχεία της l.
8 多边形
0 LstPnt||LstCplx
-1 isopolygon
-2 quadrilateral
-3 convexhull
-4 hexagon
polygon(i,1+i,2-i,-1,-1+i/2)
polygon(point(0,0,0),point(3,3,3),point(0,0,3),point(3,0,0))

# open_polygon
1 Renvoie et dessine la ligne polygonale de sommets les éléments de l.
2 Returns and draws the polygonal line where its vertices are the element of l.
3 Devuelve y traza la línea poligonal cuyos vértices son los elementos de l.
4 Επιστρέφει και σχεδιάζει την πολυγωνική γραμμή με κορυφές τα στοιχεία της l.
0 LstPnt||LstCplx
-1 isopolygon
-2 quadrilateral
open_polygon(i,1+i,2-i,-1,-1+i/2)
open_polygon(point(0,0,0),point(3,3,3),point(0,0,3),point(3,0,0))

# quadrilateral
1 Renvoie et dessine le quadrilatère ABCD.
2 Returns and draws the quadrilateral ABCD.
3 Devuelve y traza el cuadrilátero ABCD.
4 Επιστρέφει και σχεδιάζει το τετράεδρο ABCD.
8 四边形
0 Pnt(A)||Cplx,Pnt(B)||Cplx,Pnt(C)||Cplx,Pnt(D)||Cplx
-1 polygon
-2 square
quadrilateral(i,1+i,2-i,-1)
quadrilateral(point(0,0,0),point(3,3,3),point(0,0,3),point(3,0,0))

# rectangle
1 Renvoie et dessine le rectangle ABCD, AD=k*AB, si k>0 ABCD est direct sinon indirect (dans le plan ABP AD=AP ou AD=k*AB).
2 Returns and draws the rectangle ABCD, AD=k*AB if k>0 ABCD is direct else indirect (in the plane ABP AD=AP or AD=k*AB).
3 Devuelve y traza el rectángulo ABCD, AD=k*AB si k>0 ABCD es directo si no, indirecto (en el plan ABP AD=AP o AD=k*AB).
4 Επιστρέφει και σχεδιάζει το ορθογώνιο ABCD, AD=k*AB αν k>0 ABCD είναι αριστερόστροφο(=direct) αλλιώς δεξιόστροφο(=indirect) (στο επίπεδο ABP AD=AP ή AD=k*AB).
0 Pnt(A)||Cplx,Pnt(B)||Cplx,Real(k)||Pnt(P)||Lst(P,k),[Var(D)],[Var(C)]
-1 quadrilateral
-2 square
rectangle(-i,1,2)
rectangle(-i,1,-2,D,C)
rectangle(point(0,0,0),point(3,3,3),point(0,0,3),D,C)
rectangle(point(0,0,0),point(3,3,3),2,D,C)

# Airy_Ai
1 Renvoie la valeur de la fonction Ai de Airy solution de w''-xw=0. Ai(x)=Ai(0)f(z)+Ai'(0)g(z)(f et g sont des séries entières sol de w''-xw=0).
2 Returns the value of Ai the Airy function solution of w''-xw=0. Ai(x)=Ai(0)f(z)+Ai'(0)g(z)(f et g are taylor's series sol of w''-xw=0).
3 Devuelve el valor de la función Ai de la función Airy solución de w''-wx=0. Ai(x)=Ai(0)f(z)+Ai'(0)g(z)(f y g son series de Taylor soluciones de w''-xw=0).
4 Επιστρέφει την τιμή της συνάρτησης Ai του Airy, λύση της w''-xw=0. Ai(x)=Ai(0)f(z)+Ai'(0)g(z)(f και g είναι σειρές taylor λύσεις της w''-xw=0).
0 Real
-1 Airy_Bi
Airy_Ai(0)
Airy_Ai(1.5)

# Airy_Bi
1 Renvoie la valeur de la fonction Bi de Airy solution de w''-xw=0. Bi(x)=sqrt(3)(Bi(0)f(z)-Bi'(0)g(z))(f et g sont des séries entières sol de w''-xw=0).
2 Returns the value of Ai the Airy function solution of w''-xw=0. Bi(x)=sqrt(3)(Bi(0)f(z)-Bi'(0)g(z))(f et g are taylor's series sol of w''-xw=0).
3 Devuelve el valor de la función Bi de Airy solución de w''-wx=0. Bi(x)=sqrt(3)(Bi(0)f(z)-Bi'(0)g(z)))(f y g son series de Taylor solución de w''-xw=0).
4 Επιστρέφει την τιμή της συνάρτησης Ai του Airy, λύση της w''-xw=0. Bi(x)=sqrt(3)(Bi(0)f(z)-Bi'(0)g(z))(f και g είναι σειρές taylor λύσεις της w''-xw=0).
0 Real
-1 Airy_Ai
Airy_Bi(1.5)
Airy_Bi(0)

# cycleinv
1 Renvoie le cycle inverse du cycle c.
2 Returns the inverse cycle of the cycle c.
3 Devuelve el ciclo inverso del ciclo c.
4 Επιστρέφει τον αντίστροφο κύκλο του κύκλου c.
0 Cycle(c)
-1 perminv
cycleinv([1,3,5])

# groupermu
1 Renvoie le groupe de permutations engendré par a et b.
2 Returns the group of permutations generated by a and b.
3 Devuelve el grupo de permutaciones generado por a y b.
4 Επιστρέφει την ομάδα των συνδυασμών που παράγονται από a και b.
0 Permut(a),Permut(b)
-1 
groupermu([1,2,0],[3,1,2,0])

# perminv
1 Renvoie la permutation inverse de la permutation a.
2 Returns the inverse permutation of the permutation a.
3 Devuelve la permutación inversa de la permutación a.
4 Επιστρέφει τον αντίστροφο συνδυασμό του συνδυασμού a.
0 Permut(a)
-1 cycleinv
perminv([1,3,2,4,0])

# permu2mat
1 Renvoie la matrice obtenue en permutant les lignes de la matrice identité avec la permutation p.
2 Returns the matrix where the lines of the identity matrix are permuted with the permutation p.
3 Devuelve la matriz donde las líneas de la matriz identidad son permutadas con la permutación p.
4 Επιστρέφει τον πίνακα που παράγεται από μετάθεση των γραμμών του ταυτοτικού πίνακα σύμφωνα με την διάταξη p.
0 Permut(p)
-1 
permu2mat([1,3,2,4,0])

# permuorder
1 Renvoie l'ordre de la permutation a.
2 Returns the order of the permutation a.
3 Devuelve el orden de la permutación a.
4 Επιστρέφει την τάξη της μετάθεσης a.
0 Permut(a)
-1 cycles2permu
permuorder([1,3,2,4,0])

# chisquare chisquared
1 Renvoie la densité de probabilité de la loi de Chi^2 en x0 (n est le nombre de degrés de liberté).
2 Returns the density of probability of the Chi^2 law at x0 (n is the number of degrees of freedom).
3 Devuelve la densidad de probabilidad de la ley Chi-cuadrada en x0 (n es el número de grados de libertad).
4 Επιστρέφει την πυκνότητα της πιθανότητας της κατανομής χ^2 ως προς x0 (n είναι ο αριθμός των βαθμών ελευθερίας).
8 卡方概率密度函数。  计算卡方分布在 x0 点的概率密度，其中 n 为自由度。
0 Intg(n),Real(x0)
-1 chisquare_cdf
-2 chisquare_icdf
-3 randvector
-4 ranm
chisquare(2,3.2)
chisquare(4,10.5)
 randvector(3,chisquare,2)
 ranm(4,3,chisquare,2)

# chisquare_cdf chisquared_cdf
1 Renvoie la probabilité qu'une variable aléatoire Chi^2 soit inférieure à x0 (n est le nombre de degrés de liberté).
2 Returns the probability that a Chi^2 random variable is lower than x0 (n is the number of degrees of freedom).
3 Devuelve la probabilidad que una variable aleatoria según Chi-cuadrado sea menor que x0 (n es el número de grados de libertad).
4 Επιστρέφει την πιθανότητα μια τυχαία μεταβλητή της κατανομής χ^2 να είναι μικρότερη του x0 (n είναι ο αριθμός των βαθμών ελευθερίας).
8 累积卡方分布函数。  返回卡方概率密度函数在 x0 点的下限尾部概率，其中 n 为自由度。
0 Intg(n),Real(x0)
-1 UTPC
-2 chisquare_icdf
-3 chisquared
chisquare_cdf(2,6.1)
chisquare_cdf(4,6.1)

# chisquare_icdf chisquared_icdf
1 Renvoie la valeur h telle que la probabilité qu'une variable aléatoire Chi^2 soit inférieure à h est p (n est le nombre de degrés de liberté et 0<=p<=1).
2 Returns h such as the probability that a Chi^2 random variable is lower than h is p (n is the number of degrees of freedom and 0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria según Chi-cuadrado sea menor que h es p (n es el número de grados de libertad y 0<=p<=1).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια τυχαία μεταβλητή της κατανομής χ^2 να είναι μικρότερη του h είναι p (n είναι ο αριθμός των βαθμών ελευθερίας και 0<=p<=1).
8 累积卡方分布函数的反函数。  返回数值 x，使 x 点的卡方下限尾部概率为 p，其中 n 为自由度 (0<=p<=1).
0 Intg(n),Real(p)
-1 chisquare_cdf
-2 chisquared
chisquare_icdf(2,0.95)
chisquare_icdf(4,0.05)

# fisher snedecor fisherd snedecord
1 Renvoie la densité de probabilité de la loi de Fisher-Snedecor (n et m sont les nombres de degrés de liberté).
2 Returns the density of probability of the Fisher-Snedecor law (n and m are the numbers of degrees of freedom).
3 Devuelve la densidad de probabilidad de la ley de Fisher-Snedecor (n y m son los grados de libertad).
4 Επιστρέφει την πυκνότητα της πιθανότητας της κατανομής Fisher-Snedecor (n και m είναι οι αριθμοί των βαθμών ελευθερίας).
8 Fisher（或 Fisher-Snedecor）概率密度函数。  给定分子 n 及分母 m 的自由度时，计算 x0 值的概率密度。
0 Intg(n),Intg(m),Real(x0)
-1 fisher_cdf
-2 fisher_icdf
-3 randvector
-4 ranm
fisher(4,10,2.1)
fisher(4,4,2.1)
 randvector(5,fisher,4,6)
 ranm(2,3,fisher,4,6)

# fisher_cdf snedecor_cdf fisherd_cdf snedecord_cdf
1 Renvoie la probabilité qu'une variable aléatoire Fisher-Snedecor soit inférieure à x0 (n et m sont les nombres de degrés de liberté).
2 Returns the probability that a Fisher-Snedecor random variable is lower than x0 (n and m are the numbers of degrees of freedom).
3 Devuelve la probabilidad que una variable aleatoria según ley Fisher-Snedecor sea menor que x0 (n y m son los grados de libertad).
4 Επιστρέφει την πιθανότητα μια τυχαίας μεταβλητής Fisher-Snedecor να είναι μικρότερη του x0 (n και m είναι οι αριθμοί των βαθμών ελευθερίας).
8 累积 Fisher 分布函数。  返回 Fisher 概率密度函数在 x0 点的下限尾部概率，其中给定了分子 n 及分母 m 的自由度。
0 Intg(n),Intg(m),Real(x0)
-1 UTPF
-2 fisher_icdf
-3 fisherd
fisher_cdf(4,4,2.1)
fisher_cdf(4,10,3.5)

# fisher_icdf snedecor_icdf fisherd_icdf snedecord_icdf
1 Renvoie la valeur h telle que, la probabilité qu'une variable aléatoire Fisher-Snedecor soit inférieure à h soit p (n et m sont les nombres de degrés de liberté et 0<=p<=1).
2 Returns h such as the probability that a Fisher-Snedecor random variable is lower than h is p (n and m are the numbers of degrees of freedom and 0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria según ley Fisher-Snedecor sea menor que h es p (n y m son los grados de libertad y 0<=p<=1).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια τυχαία μεταβλητή Fisher-Snedecor να είναι μικρότερη του h είναι p (n και m είναι οι αριθμοί των βαθμών ελευθερίας και 0<=p<=1).
8 累积 Fisher 分布函数的反函数。  在分子 n 及分母 m 的自由度给定情况下，返回数值 x，使 x 点的 Fisher 下限尾部概率为 p。
0 Intg(n),Intg(m),Real(p)
-1 fisher_cdf
-2 fisherd
fisher_icdf(4,10,0.95)
fisher_icdf(4,10,0.05)

# normald NORMALD
1 Renvoie la densité de probabilité de la loi normale (mu est la moyenne et sigma l'écart-type).
2 Returns the density of probability of the Normal law (mu is the mean and sigma the standard deviation).
3 Devuelve la densidad de probabilidad de la ley Normal (mu es el promedio y sigma la desviación estándar).
4 Επιστρέφει την πυκνότητα πιθανότητας της Κανονικής κατανομής (μ είναι η μέση τιμή και σ είναι η κανονική απόκλιση).
8 正态概率密度函数  给定正态分布的平均数 mu 及标准差 sigma 时，计算 x0 点的概率密度。  在单实参 x0 条件下，假设平均数为 0，标准差为 1，返回 x0 点的概率密度。
0 Real(mu),Real(sigma),Real(x0)
-1 normal_cdf
-2 normal_icdf
-3 randvector
-4 ranm
normald(1)
normald(1,2,3.5)
 randvector(3,normald,1,0.5)
 ranm(4,3,normald,1,0.5)

# normal_cdf normald_cdf
1 Renvoie la probabilité qu'une variable aléatoire Normale soit inférieure à x0 ou comprise entre x0 et y0 (mu est la moyenne et sigma l'écart-type).
2 Returns the probability that a Normal random variable is lower than x0 or between x0 and y0 (mu is the mean and sigma the standard deviation).
3 Devuelve la probabilidad que una variable aleatoria según la ley Normal sea menor que x0 o entre x0 y y0 (mu es el promedio y sigma la desviación estándar).
4 Επιστρέφει την πιθανότητα μιας τυχαίας μεταβλητής Κανονικής κατανομής να είναι μικρότερη από x0 (μ είναι η μέση τιμή και σ είναι η κανονική απόκλιση).
8 累积正态分布函数。  返回正态概率密度函数在 x0 点的下限尾部概率，其中给定了正态分布的平均数 mu 及标准差 sigma。   在单实参 x0 条件下，假设平均数为 0，标准差为 1，返回正态概率密度函数在 x0 点的下限尾部概率。
0 Real(mu),Real(sigma),Real(x0),[Real(y0)]
-1 UTPN
-2 normal_icdf
-3 normald
normal_cdf(1.96)
normal_cdf(1,2,2.96*sqrt(2))
normal_cdf(1,2,1.4*sqrt(2),2.96*sqrt(2))

# normal_icdf normald_icdf
1 Renvoie la valeur h telle que la probabilité qu'une variable aléatoire Normale soit inférieure à h soit p (mu est la moyenne, sigma l'écart-type et 0<=p<=1).
2 Returns h such as the probability that a Normal random variable is lower than h is p (mu is the mean and sigma the standard deviation and 0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria Normal sea menor que h es p (mu es el promedio y sigma la desviación estándar).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια Κανονική τυχαία μεταβλητή να είναι μικρότερη του h είναι p (μ είναι η μέση τιμή, σ η κανονική απόκλιση και 0<=p<=1).
8 累积正态分布函数的反函数。  给定正态分布的平均数 mu 及标准差 sigma 条件下，返回与下限尾部概率 p 相关的累积正态分布值 (0<=p<=1)。 在单实参条件下，已知概率 p，并假设平均数为 0，标准差为 1。
0 Real(mu),Real(sigma),Real(p)
-1 normal_cdf
-2 normald
normal_icdf(0.95)
normal_icdf(1,2,0.95)

# student studentd
1 Renvoie la densité de probabilité de la loi de Student (n est le nombre de degrés de liberté).
2 Returns the density of probability of the Student law (n is the number of degrees of freedom).
3 Devuelve la densidad de probabilidad de la ley de Student (n es el número de grados de libertad).
4 Επιστρέφει την πυκνότητα πιθανότητας της κατανομής Student (n είναι ο αριθμός των βαθμών ελευθερίας).
8 学生  概率密度函数。  计算学生  分布在 x0 点的概率密度，其中 n 为自由度。
0 Intg(n),Real(x0)
-1 student_cdf
-2 student_icdf
student(3,5.2)
student(1,5.2)

# student_cdf
1 Renvoie la probabilité qu'une variable aléatoire de Student soit inférieure à x0 (n est le nombre de degrés de liberté).
2 Returns the probability that a Student random variable is lower than x0 (n is the number of degrees of freedom).
3 Devuelve la probabilidad que una variable aleatoria según ley de Student sea menor que x0 (n es el número de grados de libertad).
4 Επιστρέφει την πιθανότητα μιας τυχαίας μεταβλητής Student να είναι μικρότερη του x0 (n είναι ο αριθμός των βαθμών ελευθερίας).
8 累积学生  分布函数。  返回学生  概率密度函数在 x0 点的下尾概率，其中 n 为自由度。
0 Intg(n),Real(x0)
-1 UTPT
-2 student_icdf
-3 studentd
student_cdf(3,2.35)
student_cdf(3,-3.2)

# student_icdf
1 Renvoie la valeur h telle que la probabilité qu'une variable aléatoire de Student soit inférieure à h soit p (n est le nombre de degrés de liberté, 0<=p<=1).
2 Returns h such as the probability that a Student random variable is lower than h is p (n is the number of degrees of freedom and 0<=p<=1).
3 Devuelve h tal que la probabilidad que una variable aleatoria según Student sea menor que h es p (n es el número de grados de libertad).
4 Επιστρέφει h τέτοιο ώστε η πιθανότητα μια Κανονική τυχαία μεταβλητή να είναι μικρότερη του h να είναι p (n είναι ο αριθμός των βαθμών ελευθερίας και 0<=p<=1).
8 累积学生  分布函数的反函数。  返回数值 x0，使 x 点的学生  下尾概率为 p，其中 n 为自由度。
0 Intg(n),Real(p)
-1 student_cdf
-2 studentd
student_icdf(3,0.95)
student_icdf(3,0.05)

# UTPC
1 Renvoie la probabilité qu'une variable aléatoire Chisquare soit supérieure à x0 (n est le nombre de degrés de liberté).
2 Returns the probability that a Chisquare random variable is greater than x0 (n is the number of degrees of freedom).
3 Devuelve la probabilidad que una variable aleatoria según ley Chi-cuadrado sea mayor que x0 (n es el número de grados de libertad).
4 Επιστρέφει την πιθανότητα μια χ^2-τυχαία μεταβλητή να είναι μεγαλύτερη του x0 (n είναι ο αριθμός των βαθμών ελευθερίας).
8 上尾  Chi-Squared 概率分布函数。  返回某一数值处的上尾卡方概率，其中给定了自由度。  返回卡方随机变量大于某一数值的概率。
0 Intg(n),Real(x0)
-1 chisquare_cdf
-2 chisquare_icdf
UTPC(2,6.1)
UTPC(4,6.1)

# UTPF
1 Renvoie la probabilité qu'une variable aléatoire Fisher-Snedecor soit supérieure à x0 (n et d sont les nombres de degrés de liberté).
2 Returns the probability that a Fisher-Snedecor random variable is greater than x0 (n and d are the numbers of degrees of freedom).
3 Devuelve la probabilidad que una variable aleatoria según ley de Fisher-Snedecor sea mayor que x0 (n y d son los grados de libertad).
4 Επιστρέφει την πιθανότητα μια τυχαία μεταβλητή Fisher-Snedecor να είναι μεγαλύτερη του x0 (n, d είναι οι βαθμοί ελευθερίας).
8 上尾 Snedecor F 概率分布函数。  返回某一数值处的上尾 Snedecor F 的概率，其中给定了分子自由度和分母自由度。 返回 Snedecor F 随机变量大于某一数值的概率。

0 Intg(n),Intg(d),Real(x0)
-1 fisher_cdf
-2 fisher_icdf
UTPF(4,10,3.5)
UTPF(4,4,2.1)

# UTPN
1 Renvoie la probabilité qu'une variable aléatoire Normale soit supérieure à x0 (mu est la moyenne et v la variance).
2 Returns the probability that a Normal random variable is greater than x0 (mu is the mean and v the variance).
3 Devuelve la probabilidad que una variable aleatoria Normal sea mayor que x0 (mu es el promedio y v la varianza).
4 Επιστρέφει την πιθανότητα μια Κανονική τυχαία μεταβλητή να είναι μεγαλύτερη του x0 (μ είναι η μέση τιμή και v η διακύμανση).
8 上尾正态概率分布函数。  返回上尾正态概率、给出的平均值和方差以及评估值。 返回正态随机变量大于值的概率。  注： 方差为标准差的平方。
0 Real(mu),Real(v),Real(x0)
-1 normal_cdf
-2 normal_icdf
UTPN(1.96)
UTPN(1,4,2.96)+normal_cdf(1,2,2.96)

# UTPT
1 Renvoie la probabilité qu'une variable aléatoire de Student soit supérieure à x0 (n est le nombre de degrés de liberté).
2 Returns the probability that a Student random variable is greater than x0 (n is the number of degrees of freedom).
3 Devuelve la probabilidad que una variable aleatoria según ley de Student sea mayor que x0 (n es el número de grados de libertad).
4 Επιστρέφει την πιθανότητα μια τυχαία μεταβλητή Student να είναι μεγαλύτερη του x0 (n είναι ο αριθμός των βαθμών ελευθερίας).
8 上尾学生 t 概率分布函数。  返回某一数值处上尾学生 t 的概率，其中给定了自由度。  返回学生 t 随机变量大于某一数值的概率。
0 Intg(n),Real(x0)
-1 student_cdf
-2 student_icdf
UTPT(3,2.35)
UTPT(3,-2.35)

# classes
1 Renvoie la matrice [[classe,effectif],..,] obtenue avec class_min et class_size: voir config de geo ou argument 2 et 3 ou avec la liste des centres des classes.
2 Returns the matrix [[class,number],...] get with class_min and class_size: see init of geo or argument 2 and 3 or with the list of centers.
3 Devuelve la matriz [[clase,número],...] obtenida con class_min y class_size: véase configuración de geo o argumento 2 y 3 o con la lista de centros.
4 Επιστρέφει τον πίνακα [[class,number],...] που αποκτείται από class_min και class_size: δες εντολή init της geo ή το όρισμα 2 και 3 ή με την λίστα των κέντρων.
0 Lst(l),[ClassMin],[ClassSize||Lst(Center)]
-1 histogram
-2 cumulated_frequencies
-3 bar_plot
-4 frequencies
classes([1,1.2,1.4,1.6,1.8,2,2.5])
classes([1,1.2,1.4,1.6,1.8,2,2.5],1.2,0.5)
classes([1,1.2,1.4,1.6,1.8,2,2.5],1,[1.2,1.6,2,2.4])
classes([1,1.2,1.4,1.6,1.8,2,2.5],1,[1.2,1.6,2.2])
classes([0,0.5,1,1.5,2,2.5,3,3.5,4],[0..2,2..4,4..6])

# primpart
1 Renvoie le polynôme P divisé par le pgcd de ses coefficients.
2 Returns the polynomial P divided by the gcd of its coefficients.
3 Devuelve el polinomio P dividido por el mcd de sus coeficientes.
4 Επιστρέφει το πολυώνυμο P διαιρεμένο με τον ΜΚΔ των συντελεστών του.
0 Poly(P),[Var]
-1 content
primpart(2x^2+10x+6)
primpart(2t^2+10t+6,t)

# content
1 Renvoie le pgcd des coefficients du polynôme P donné en argument.
2 Returns the gcd of the coefficients of the polynomial P given as argument.
3 Devuelve el mcd de los coeficientes del polinomio P dado como argumento.
4 Επιστρέφει τον ΜΚΔ των συντελεστών του πολυωνύμου P που δίνεται ως όρισμα.
0 Poly(P),[Var]
-1 primpart
-2 lgcd
content(2*x^2+10*x+6)
content([2,10,6])
content(2*t^2+10*t+6,t)

# genpoly
1 Renvoie la reconstruction d'un polynôme Q de n variables (-b/2<=coef(Q)<=b/2) à partir d'un polynôme P de n-1 variables et d'une base b (subst(Q,var=b)=P).
2 Returns the reconstruction of a n-variables polynomial Q(-b/2<=coef<=b/2) from a (n-1)-variable polynomial P and a base b (subst(Q,var=b)=P).
3 Devuelve la reconstrucción de un polinomio Q(-b/2<=coef<=b/2) de n variables a partir de un polinomio P de (n-1) variables y base b (subst(Q,var=b)=P).
4 Επιστρέφει την ανακατασκευή ενός πολυωνύμου Q n-μεταβλητών(-b/2<=coef<=b/2) από ένα πολυώνυμο P (n-1)-μεταβλητών και μια βάση b (subst(Q,var=b)=P).
0 Poly(P),Intg(b),Var
-1 
genpoly(15,4,x)
genpoly(7*y+5,6,x)
genpoly(7*y-5*z,10,x)

# left lhs gauche
1 Renvoie la partie gauche d'une égalité, d'un intervalle, d'une liste ou d'une chaîne.
2 Returns the left part of an equality, of an interval, of a list or of a string.
3 Devuelve la parte izquierda de una igualdad, de un intervalo, de una lista o de una cadena.
4 Επιστρέφει το αριστερό μέρος μια ισότητας, ενός διαστήματος, μιας λίστας ή μιας συμβολοσειράς.
8 左。
0 Equal(a=b) or Interval(a..b) or Str,Intg
-1 right
-2 mid
-3 tail
-4 head
left(a=b)
left(x^2+1=5)
left(1..5)
left("abcdefg",3)

# right rhs droit
1 Renvoie la partie droite d'une égalité, d'un intervalle, d'une liste ou d'une chaîne.
2 Returns the right part of an equality, of an interval, of a list or of a string.
3 Devuelve la parte derecha de una igualdad, de un intervalo, de una lista o de una cadena.
4 Επιστρέφει το δεξιό μέρος μια ισότητας, ενός διαστήματος, μιας λίστας ή μιας συμβολοσειράς.
8 右。
0 Equal(a=b) or Interval(a..b) or Str,Intg
-1 left
-2 mid
-3 tail
-4 head
right(a=b)
right(x^2+1=5)
right(1..5)
right("abcdefg",3)

# ord
1 Renvoie le code ASCII d'un caractère ou du premier caractère d'une chaîne.
2 Returns the ASCII code of a character or of the first character of a string.
3 Devuelve el código ASCII de un carácter o del primer carácter de una cadena.
4 Επιστρέφει τον κώδικα ASCII ενός χαρακτήρα ή του πρώτου χαρακτήρα μιας συμβολοσειράς.
0 Char||LstChar
-1 asc
-2 char
ord("A")
ord("ABC")
ord(["a","b","c"])

# rotate
1 Renvoie la liste obtenue en mettant le dernier élément [ou la fin de la liste à partir du n-ième élément] en premier (par défaut n=-1);L:=rotate(L,n) ou L.rotate(n)
2 Returns the list where the last element [or the tail beginning with the n-th element] is the first element (by default n=-1);L:=rotate(L,n) or L.rotate(n).
3 Devuelve la lista obtenida al cambiar el último elemento (o la cola a partir del n-ésimo elemento) por el primer elemento (por defecto n=-1);L:=rotate(L,n) o L.rotate(n).
4 Επιστρέφει τη λίστα που δημιουργείται θέτοντας το τελευταίο στοιχείο [ή την ουρά της λίστας που αρχίζει με το n-στο στοιχείο] ως πρώτο στοιχείο (προεπιλογή n =- 1);L:=rotate(L,n) ή L.rotate(n).
0 Lst||Str(L),[Intg(n)]
-1 tail
-2 mid
-3 shift
rotate([0,1,2,3],2)
rotate([[1,2,3],[4,5,6],[7,8,9]])
rotate([0,1,2,3,4])
rotate([0,1,2,3,4],-1)
 L:=[0,1,2,3,4];L:=rotate([0,1,2,3,4])
 L:=[0,1,2,3,4];L.rotate()
 L:=[0,1,2,3];L:=rotate([0,1,2,3],2)
 L:=[0,1,2,3];L.rotate(2)

# shift
1 Renvoie la liste obtenue en mettant le dernier élément [ou la fin de la liste à partir du n-ième élément] en premier en la complétant par 0 (par défaut n=-1);L:=shift(L,2) ou L.shift(2).
2 Returns the list where the last element [or the tail beginning with the n-th element] is the first element and then complete with 0 (by default n=-1);L:=shift(L,2) o L.shift(2).
3 Devuelve la lista obtenida al cambiar el último elemento (o la cola empezando al n-ésimo elemento) por el primer elemento y completada con 0 (por defecto n=-1);L:=shift(L,2) o L.shift(2).
4 Επιστρέφει τη λίστα που δημιουργείται θέτοντας το τελευταίο στοιχείο [ή την ουρά της λίστας που αρχίζει με το n-στο στοιχείο] ως πρώτο στοιχείο και αντικαθιστώντας το με 0 (προεπιλογή n =- 1);L:=shift(L,2) ή L.shift(2).
0 Lst,[Intg(n)]
-1 rotate
-2 tail
shift([0,1,2,3],2)
shift([0,1,2,3])
shift([0,1,2,3,4])
 L:=[0,1,2,3];L:=shift(L,2)
 L:=[0,1,2,3];L.shift(2)

# correlation
1 Renvoie la corrélation des éléments de l'argument.
2 Returns the correlation of the elements of its argument.
3 Devuelve la correlación de los elementos del argumento.
4 Επιστρέφει το βαθμό συσχέτισης των στοιχείων του ορίσματος
0 Lst||Mtrx,[Lst]
-1 covariance
-2 covariance_correlation
correlation([[1,2],[1,1],[4,7]])

# covariance
1 Renvoie la covariance des éléments de l'argument
2 Returns the covariance of the elements of its argument
3 Devuelve la covarianza de los elementos del argumento
4 Επιστρέφει τη συνδιακύμανση των στοιχείων του ορίσματος
0 Lst||Mtrx,[Lst]
-1 correlation
-2 covariance_correlation
covariance([[1,2],[1,1],[4,7]])

# covariance_correlation
1 Renvoie la liste formée de la covariance et de la corrélation des éléments de l'argument.
2 Returns the list of the covariance and the correlation of the elements of its argument.
3 Devuelve la lista de la covarianza y la correlación de los elementos del argumento.
4 Επιστρέφει τη λίστα της συνδιακύμανσης και της συσχέτισης των στοιχείων του ορίσματος
0 Lst||Mtrx,[Lst]
-1 covariance
-2 correlation
covariance_correlation([[1,2],[1,1],[4,7]])

# exponential_regression
1 Renvoie les coefficients (a,b) de y=b*a^x : c'est l'exponentielle qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes).
2 Returns the coefficients (a,b) of y=b*a^x : it is the best exponential which approx the points where the coordinates are the rows of A (or the 2 lists).
3 Devuelve los coeficientes (a,b) de y=b*a^x : es la exponencial que mejor aproxima los puntos donde las coordenadas son las filas de A (o las dos listas).
4 Επιστρέφει τους συντελεστές (a,b) της y=b*a^x : αυτή είναι η εκθετική που προσεγγίζει καλύτερα τα σημεία οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες).
0 Lst||Mtrx(A),[Lst]
-1 logarithmic_regression
exponential_regression([[1.0,2.0],[0.0,1.0],[4.0,7.0]])
exponential_regression([1.0,0.0,4.0],[2.0,1.0,7.0])

# exponential_regression_plot
1 Renvoie le graphe de y=b*a^x : c'est l'exponentielle qui approche le mieux les points ayant pour coordonnées les lignes de A (ou les 2 listes).
2 Returns the plot of y=b*a^x : it is the best exponential which approx the points where the coordinates are the rows of A (or the 2 lists).
3 Devuelve la gráfica de y=b*a^x : es la exponencial que mejor aproxima los puntos cuyas coordenadas son las filas de A (o de las 2 listas).
4 Επιστρέφει το γράφημα της y=b*a^x : αυτή είναι η εκθετική που προσεγγίζει καλύτερα τα σημεία οι συντεταγμένες των οποίων είναι οι γραμμές του Α (ή οι 2 λίστες).
0 Lst||Mtrx(A),[Lst]
-1 logarithmic_regression_plot
exponential_regression_plot([[1.0,2.0],[0.0,1.0],[4.0,7.0]])
exponential_regression_plot([1.0,0.0,4.0],[2.0,1.0,7.0])

# histogram
1 Trace l'histogramme des données de data, on peut préciser une liste d'effectifs, ou un nombre nc de classes ou le mimimum classmin des classes et la largeur classsize des classes.
2 Draws the histogram of data, optional arguments are eff (number of data for each data element) or nc the number of classes or the classes minimum and size
3 Traza el histograma del argumento.
4 Σχεδιάζει το ιστόγραμμα του ορίσματος
0 Lst(data),[Lst(eff) || Intg(nc) || Real(classmin)],[Real(classsize)]
-1 cumulated_frequencies
-2 classes
-3 bar_plot
-4 frequencies
histogram([1,2,1,1,2,1,2,4,3,3])
histogram([1,2,1,1,2,1,2,4,3,3],0.5,1)
histogram(seq(rand(1000),k,0,100),0,100)
histogram(binomial,10,.5)
histogram([[0,1],[1,4],[2,3],[3,2],[4,1]])
histogram([[1.5..1.65,50],[1.65..1.7,20],[1.7..1.8,30]])
histogram(seq(rand(1000),k,0,100),0,100)
histogram(seq(rand(1000),k,0,100),10)

# boxwhisker moustache
1 Boite à moustache pour une série statistique.
2 Box and Whisker plot for a statistical serie.
3 Gráfica BoxWhisker para una serie estadística.
4 Σχεδιάζει το θηκόγραμμα για μια στατιστική σειρά.
0 Lst,[Lst],[x=a..b||y=a..b]
-1 quartiles
boxwhisker([-1,1,2,2.2,3,4,-2,5])
boxwhisker([1,2,3,5,10,4],x=1..2)
boxwhisker([1,2,3,5,10,4],[1,2,3,1,2,3])
boxwhisker([[6,0,1,3,4,2,5],[0,1,3,4,2,5,6],[1,3,4,2,5,6,0],[3,4,2,5,6,0,1],[4,2,5,6,0,1,3],[2,5,6,0,1,3,4]])

# mean moyenne
1 Moyenne d'une liste pondérée par le deuxième argument ou des colonnes d'une matrice.
2 Mean of a list with the second argument as pound or of the columns of a matrix.
3 Promedio de una lista ponderada, con el segundo argumento como peso, o de las columnas de una matriz.
4 Μέση τιμή μιας λίστας με το δεύτερο όρισμα ως οδηγό ή των στηλών ενός πίνακα.
8 平均
0 Lst||Mtrx,[Lst]
-1 stddev
mean([1,2,3])
mean([1,2,3],[1,2,3])
mean([[1,2,3],[1,2,3]])

# median
1 Renvoie la médiane d'une liste pondérée par le deuxième argument ou des colonnes d'une matrice.
2 Returns the median of a list with the second argument as pound or of the columns of a matrix.
3 Devuelve la mediana de una lista, ponderada por el segundo argumento, o de las columnas de una matriz.
4 Διάμεση τιμή μιας λίστας με το δεύτερο όρισμα ως οδηγό ή των στηλών ενός πίνακα.
0 Lst||Mtrx,[Lst]
-1 quartiles
median([1,2,3,5,10,4])
median([1,2,3,5,10,4],[1,2,3,1,2,3])

# quantile
1 Renvoie le quantile des éléments de l correspondant à la valeur de p (0<p<1).
2 Returns the quantile of the elements of l corresponding to p (0<p<1).
3 Devuelve el quintil de los elementos de l correspondiente al valor de p (0<p<1).
4 Επιστρέφει το ποσοστιαίο σημείο των στοιχείων της l που αντιστοιχεί στην πιθανότητα p (0<p<1).
0 Lst(l),Real(p)
-1 quartile1
-2 median
-3 quartile3
quantile([0,1,3,4,2,5,6],0.25)
quantile([0,1,3,4,2,5,6],0.75)

# quartile1
1 Renvoie le 1er quartile des éléments (ou des colonnes) de l'argument.
2 Returns the 1st quartile of the elements (or of the columns) of its argument.
3 Devuelve el primer cuartil de los elementos (o de las columnos) del argumento.
4 Επιστρέφει το 1ο τεταρτημόριο των στοιχείων (ή των στηλών) του ορίσματος.
0 Lst||Mtrx,[Lst]
-1 quantile
-2 quartiles
quartile1([1,2,3,5,10,4])
quartile1([1,2,3,5,10,4],[1,2,3,1,2,3])
quartile1([[1,2],[5,4],[3,6],[7,8]])

# quartile3
1 Renvoie le 3ème quartile des éléments (ou des colonnes) de l'argument.
2 Returns the 3rd quartile of the elements (or of the columns) of its argument.
3 Devuelve el 3er cuartil de los elementos (o de las columnos) del argumento.
4 Επιστρέφει το 3ο τεταρτημόριο των στοιχείων (ή των στηλών) του ορίσματος.
0 Lst||Mtrx,[Lst]
-1 quartiles
-2 quantile
quartile3([1,2,3,5,10,4])
quartile3([[1,2,3,5,10,4],[2,3,4,4,5,6],[7,6,5,8,9,1]])
quartile3([[1,2],[5,4],[3,6],[7,8]])

# quartiles
1 Min, 1er quartile, médiane, 3ème quartile, max des éléments (ou des colonnes) de l'argument.
2 Min,1st quartile,the median,3rd quartile, max of the elements (or of the columns) of its argument.
3 Mínimo, 1er cuartíl, mediana, 3er cuartil, máximo de los elementos (o de las columnas) del argumento.
4 Το ελάχιστο, το 1ο τεταρτημόριο, η ενδιάμεση τιμή, το 3ο τεταρτημόριο και το μέγιστο των στοιχείων (ή των στηλών) του ορίσματος.
0 Lst||Mtrx,[Lst]
-1 boxwhisker
-2 quantile
-3 mean
quartiles([1,2,3,5,10,4])
quartiles([1,2,3,5,10,4],[1,2,3,5,10,4])
quartiles([[1,2],[5,4],[3,6],[7,8]])

# stddev ecart_type
1 Renvoie l'écart-type d'une liste pondérée par le deuxième argument ou la liste des écarts-types des colonnes d'une matrice.
2 Returns the standard deviation of the elements of its argument with an optionnal second argument as pound or the list of standard deviation of the columns of a matrix.
3 Devuelve la desviación estándar de una lista ponderada por el segundo argumento o la lista de las desviaciones estándares de las columnas de una matriz.
4 Επιστρέφει την τυπική απόκλιση των στοιχείων του ορίσματος με το 2ο όρισμα ως οδηγό ή τη λίστα των τυπικών αποκλίσεων των στηλών του πίνακα.
8 标准差。
0 Lst||Mtrx,[Lst]
-1 mean
-2 variance
-3 stddevp
stddev([1,2,3])
stddev([1,2,3],[1,2,1])
stddev([[1,2,3],[5,6,7]])

# stddevp stdDev ecart_type_population
1 Renvoie un estimateur non biaise de l'écart-type de la population dont est issu l'échantillon décrit par les éléments d'une liste pondérée par le deuxième argument.
2 Returns an unbiaised estimate of the population standard deviation of the sample (first argument) with an optionnal list of pounds as second argument.
3 Devuelve la desviación estándar de la población de la cual viene la muestra descrita por los elementos de una lista ponderada por el segundo argumento.
4 Επιστρέφει την πληθυσμιακή τυπική απόκλιση των στοιχείων του ορίσματος με το 2ο όρισμα ως οδηγό.
8 标准差为总体
0 Lst||Mtrx,[Lst]
-1 mean
-2 stddev
stddevp([1,2,3])
stddevp([1,2,3],[1,2,1])
stddevp([[1,2,3],[5,6,7]])

# sqrfree
1 Factorise l'argument en regroupant les termes de même exposant.
2 Factorization of the its argument gathering the terms with the same exponent.
3 Factorización del argumento, reagrupando términos con el mismo exponente.
4 Παραγωντοποίηση του ορίσματος και συλλογή των όρων με τον ίδιο εκθέτη.
0 Expr
-1 factor
sqrfree(x^4-2*x^2+1)
sqrfree((x-2)^7*(x+2)^7*(x^4-2*x^2+1))

# inv inverse
1 Inverse d'une expression ou d'une matrice.
2 Returns the inverse of an expression or matrix.
3 Devuelve la inversa de una matriz o de una expresión.
4 Επιστρέφει τον αντίστροφο ενός πίνακα ή μιας παράστασης.
8 矩形矩阵的逆运算 (或表达式的逆运算)。  转换矩形矩阵。  如果已启用复数模式，则矩阵可以含有复数元素。
0 Expr||Mtrx
-1 Inv
inv(9/5)
inv([[1,2],[3,4]])

# Inverse
1 Renvoie l'inverse d'une expression ou d'une matrice sans l'évaluer.
2 Returns the reciprocal or the matrix inverse without evaluation.
3 Devuelve la inversa de una matriz o de una expresión sin evaluarla.
4 Επιστρέφει τον αντίστροφο ενός πίνακα ή μιας παράστασης χωρίς υπολογισμό.
8 矩形矩阵的逆运算 (或表达式的逆运算) 不并求结果。
0 Expr||Mtrx
-1 inv
Inverse(9/5)
Inverse([[1,2],[3,4]])

# rowdim nrows rowDim
1 Nombre de lignes d'une matrice.
2 Number of rows of a matrix.
3 Número de filas de una matriz.
4 Ο αριθμός των γραμμών ενός πίνακα.
0 Mtrx
-1 ncols
rowdim([[1,2,3],[4,5,6]])
rowdim([[1,2],[3,4],[5,6]])

# coldim ncols colDim
1 Nombre de colonnes d'une matrice.
2 Number of columns of a matrix.
3 Número de columnas de una matriz.
4 Ο αριθμός των στηλών ενός πίνακα.
0 Mtrx
-1 rowdim
coldim([[1,2,3],[4,5,6]])
coldim([[1,2],[3,4],[5,6]])

# identity idn
1 Retourne la matrice identité de dimension n.
2 Returns the identity matrix of specified dimension n.
3 Devuelve la matriz identidad de la dimensión especificada n.
4 Επιστρέφει τον ταυτοτικό πίνακα με συγκεκριμένη διάσταση n.
8 识别矩阵。 创建维数为 n x n 的方阵，其对角元素为 1，非对角元素为 0。
0 Intg(n)
-1 ranm
identity(3)
identity(5)

# BlockDiagonal
1 Renvoie soit la matrice diagonale de diagonale l soit la diagonale de A.
2 Returns either the diagonal matrix with diagonal l or the diagonal of A.
3 Devuelve o bien la matrix diagonal con diagonal l, o bien la diagonal de A.
4 Αν η εισαγωγή είναι η λίστα l επιστρέφει τετραγωνικό πίνακα με διαγώνιο την l, αν η εισαγωγή είναι ο πίνακας Α επιστρέφει την διαγώνιό του.
0 Lst(l)||Mtrx(A)
-1 identity
-2 diag 
BlockDiagonal([[1,2],[3,4]])
BlockDiagonal([1,2,3])

# diag 
1 Avec 1 argument renvoie soit la matrice diagonale de diagonale l soit la diagonale de A, avec 2 arguments renvoie la partie gauche large de A ou la partie droite large de A ou découpe A en 3 parties : gauche stricte, diagonale, droite stricte, et avec 3 arguments renvoie la matrice tridiagonale de diagonales l,d,u.
2 With 1 argument returns either the diagonal matrix with diagonal l or the diagonal of A, with 2 arguments returns the large left part of A or the large right part of A or cuts A into 3 parts : strict left,diagonal,strict right  and with 3 arguments returns the tridiagonale matrix with diagonals l,d,u.
3 Con 1 argumento devuelve o bien la matrix diagonal con diagonal l, o bien la diagonal de A, con 2 argumentos devuelve la parte izquierda de A o la parte derecha de A ou cortar A en 3 partes : estricto izquierda,diagonal,estricto derecha y con 3 argumentos devuelve la matrix tridiagonal con diagonal l,d,u.
4 με 1 όρισμα η εισαγωγή είναι η λίστα l επιστρέφει τετραγωνικό πίνακα με διαγώνιο την l, αν η εισαγωγή είναι ο πίνακας Α επιστρέφει την διαγώνιό του,  και με 2 ορίσματα, επιστρέφει το αριστερό μέρος του A,διαγώνιό του Α, το δεξιό μέρος του A, και με 3 ορίσματα, η εισαγωγή είναι τις λίστες l,d,u επιστρέφει.
0 Lst(l)||(Mtrx(A),[left||right||lu])||Lst(l),Lst(d),Lst(u)
-1 identity
-2 lu
-3 BlockDiagonal
-4 upper
-5 lower
diag([[1,2],[3,4]])
diag([1,2,3])
diag([[1,2],[3,4]],left)
diag([[1,2],[3,4]],right)
diag([[1,2],[3,4]],lu)
diag([1,2],[3,4,5],[6,7])

# upper
1 Renvoie la partie de matrice au-dessus de la diagonale (incluse) ou met en majuscules
2 Returns the upper matrix (over the diagonal, included) or write uppercase
0 Mtrx||Strng
-1 diag
-2 lower
upper([[1,2,3],[4,5,6],[7,8,9]])
upper("hello")

# lower
1 Renvoie la partie de matrice en-dessous de la diagonale (incluse) ou met en majuscules
2 Returns the lower matrix (under the diagonal, included) or write lowercase
0 Mtrx||Strng
-1 diag
-2 upper
lower([[1,2,3],[4,5,6],[7,8,9]])
lower("HELLO")

# coeff coeffs
1 Renvoie la liste des coefficients d'un polynôme P par rapport au 2ème argument ou le coefficient de degré le 3ème argument.
2 Returns the list of coefficients of a polynomial with respect to the 2nd argument or the coefficient of degree the 3rd argument.
3 Devuelve la lista de los coeficientes de un polinomio con respecto al 2o argumento o el coeficiente de grado del 3er argumento.
4 Επιστρέφει τους συντελεστές ενός πολυωνύμου αναφορικά με το 2ο όρισμα ή τον συντελεστή του βαθμού του 3ου ορίσματος.
0 Expr(P),[Var]
-1 pcoeff
-2 fcoeff
coeff(x*3+2)
coeff(5*y^2-3,y)
coeff(5*y^2-3,y,2)

# taylor
1 Développement limité ou asymptotique (par défaut x=0 et ordre relatif=5).
2 Series expansion at finite or infinite points (by default x=0, and relative order=5).
3 Desarrollo en serie alrededor de puntos finitos o infinitos (por defecto x=0, orden relativo=5).
4 Ανάπτυγμα πεπερασμένο ή ασυμπτωτικό (προεπιλογή x=0 και τάξη=5).
0 Expr,[Var=limit_point],[Order]
-1 series
-2 limit
-3 pade
-4 polynom
taylor(sin(x)/x,x,0)
taylor(sin(x),x=0,5,polynom)
taylor(ln(y+y^2)-ln(y),y)
taylor(ln(x+x^2)-ln(x),x,2)
taylor(ln(x+x^2)-ln(x),x=0,2)
taylor(ln(x+x^2)-ln(x),x=1,2)
taylor((x^4+x+2)/(x^2+1),x,5)
taylor(sin(t*x+t*y)+cos(t*x*t*y),t=0,6,polynom)(h=1) 
taylor(sin((1+h*t)*(pi/2+k*t)),t=0,3,polynom)(t=1)
taylor((-1+k*t)^2/(1+h*t)^3,t=0,3,polynom)(t=1)

# dim
1 Retourne la liste donnant la dimension de la matrice donnée en argument.
2 Returns the list which gives the dimension of the matrix specified as argument.
3 Devuelve la lista que da la dimensión de la matriz dada como argumento.
4 Επιστρέφει την λίστα η οποία δίνει την διάσταση του πίνακα που δίνεται ως όρισμα.
8 求矩阵的大小。  将矩阵的维度作为列表返回。 ({行 , 列})。
0 Mtrx
-1 rowdim
-2 coldim
-3 sizes
-4 size
dim([[1,2,3],[4,5,6]])

# format
1 Transforme un nombre réel en une chaîne du format indiqué (f=flottant,s=scientifique,e=ingénieur).
2 Transforms the real into a string with the indicated format (f=float,s=scientific,e=engineering).
3 Transforma un número real en una cadena del formato indicado (f=flotante,s=científico,e=ingeniero).
4 Μετασχηματίζει έναν πραγματικό αριθμό σε μια συμβολοσειρά με την υποδεικνυόμενη μορφοποίηση (f=κινούμενης υποδιαστολής,s=επιστημονική,e=μηχανικών).
0 Real,Str("f4"||"s5"||"e6")
-1 string
format(9.3456,"f3")
format(9.3456,"s3")
format(9.3456,"e3")

# abs
1 Renvoie la valeur absolue ou le module de l'argument.
2 Returns the absolute value or the norm of its argument.
3 Devuelve el valor absoluto o la norma del argumento.
4 Επιστρέφει την απόλυτη τιμή ή τη νόρμα του ορίσματος.
8 绝对值函数。
0 Cplx||LstCplx
-1 arg
abs(-4)
abs(1+2*i)
abs((1+2*i)^2)
abs([-2,1+i,-4])

# acos arccos
1 Arc cosinus
2 Arccosine
3 Arcocoseno
4 Τόξο συνημιτόνου
8 反余弦函数。
0 Expr
-1 cos
-2 acosh
acos(0)

# acosh arccosh ACOSH
1 Arc cosinus hyperbolique.
2 Hyperbolic arccosine.
3 Arcocoseno hiperbólico.
4 Υπερβολικό τόξο συνημιτόνου
8 反双曲余弦。
0 Expr
-1 cosh
-2 acos
acosh(1)

# acot ACOT
1 Arc cotangente.
2 Arccotangent.
3 Arcocotangente.
4 Τόξο συνεφαπτομένης
8 反余切。 该函数由反余切函数推导而来。
0 Expr
-1 atan
-2 arccos
acot(0)

# acsc ACSC
1 Arc cosécante: acsc(x)=asin(1/x).
2 Arccosecant: acsc(x)=asin(1/x).
3 Arcocosecante: acsc(x)=asin(1/x).
4 Τόξο συντέμνουσας: acsc(x)=asin(1/x).
8 反余割。  该函数由反余割函数推导而来。
0 Expr
-1 asin
-2 csc
acsc(1)
acsc(2)

# adjoint_matrix
1 Renvoie le polynôme caractéristique de A et la comatrice de A-xI.
2 Returns the characteristic polynomial of A and the comatrix of A-xI.
3 Devuelve el polinomio característico de A y la comatriz de A-xI.
4 Επιστρέφει το χαρακτηριστικό πολυώνυμο του A και τον προσαρτημένο πίνακα του A-xI.
0 Mtrx
-1 pcar
adjoint_matrix([[1,i],[2,3]])

# affix
1 Nombre complexe égal à l'affixe d'un point ou d'un vecteur.
2 Complex number equal to the affix of a point or of a vector.
3 Número complejo igual al afijo de un punto o de un vector.
4 Μιγαδικός αριθμός ίσος με την προσθήκη ενός σημείου ή ενός διανύσματος.
0 Pnt||Vect
-1 point
-2 vector
affix(point(i))
affix(point(i)-point(1+2*i))
affix([1,2])

# algvar
1 Liste des variables par ordre d'extension algébrique.
2 List of the variables by ascending algebraic extension order.
3 Lista de las variables ordenadas por extensión algebraica.
4 Λίστα των μεταβλητών με διάταξη αυτή των αλγεβρικών επεκτάσεων.
0 Expr
-1 lvar
-2 lname
algvar(sqrt(x)+y)

# angle
1 angle(A,B,C) est égal à la valeur de la mesure de l'angle (AB,AC).
2 angle(A,B,C) is the value of the measure of the angle (AB,AC).
3 angle(A,B,C) es el valor de la medida del ángulo (AB,AC).
4 Γωνία(A,B,C) είναι η τιμή του μέτρου της γωνίας που ορίζουν οι πλευρές (AB,AC).
0 (Pnt or Cplx),(Pnt or Cplx),(Pnt or Cplx)
-1 triangle
-2 bissector
-3 legend
-4 labels
-5 angleat
-6 angleatraw
angle(point(0),point(i),point(1))
angle(0,1,i)
angle(0,1,i,"")
angle(0,1,i,"a")
angle(i,1,1+i,"b")

# angleat
1 angleat(A,B,C,z0) affiche au point(z0) avec une légende, la valeur de la mesure de l'angle (AB,AC).
2 angleat(A,B,C,z0) displays at point(z0) with a legend, the value of the measure of the angle (AB,AC).
3 angleat(A,B,C,z0) escribe en el punto point(z0) con una leyenda, el valor de la medida del ángulo (AB,AC).
4 angleat(A,B,C,z0) εμφανίζει στο σημείο z0, μαζί με ένα υπόμνημα, την τιμή του μέτρου της γωνίας (AB,AC).
0 Pnt(A),Pnt(B),Pnt(C),(Pnt or Cplx(z0))
-1 angle
-2 angleatraw
-3 legend
 A:=point(0);B:=point(1);C:=point(i);angleat(A,B,C,-2-i)

# angleatraw
1 angleat(A,B,C,z0) affiche au point(z0), la valeur de la mesure de l'angle (AB,AC).
2 angleatraw(A,B,C,z0) displays at point(z0), the value of the measure of the angle (AB,AC).
3 angleatraw(A,B,C,z0) escribe en el punto point(z0), el valor de la medida del ángulo (AB,AC).
4 angleatraw(A,B,C,z0) εμφανίζει στο σημείο z0, την τιμή του μέτρου της γωνίας (AB,AC).
0 Pnt(A)),Pnt(B),Pnt(C),(Pnt or Cplx(z0))
-1 angle
-2 angleat
 A:=point(0);B:=point(1);C:=point(i);angleatraw(A,B,C,-2-i)

# distanceat
1 distanceat(A,B,z0) affiche au point(z0), avec une légende, la distance entre 2 objets géométriques.
2 distanceat(A,B,z0) displays at point(z0), with a legend, the distance between 2 geometrical objects
3 distanceat(A,B,z0) escribe en el punto point(z0), con una leyenda, el valor de la distancia entre 2 puntos o entre 1 punto y una curva
4 distanceat(A,B,z0) εμφανίζει στο σημείο z0, μαζί με ένα υπόμνημα, την απόσταση 2 γεωμετρικών αντικειμένων.
0 GeoObj(A),GeoObj(B),(Pnt or Cplx)
-1 distance
-2 distanceatraw
 A:=point(0);B:=point(1+i);distanceat(A,B,(1+i)/2)
 A:=point(0);s:=segment(1-i,i);distanceat(A,s,1)

# distanceatraw
1 distanceatraw(A,B,point(z0)) affiche au point(z0), la distance entre 2 objets géométriques.
2 distanceatraw(A,B,z0) displays at the point(z0), the distance between 2 geometrical objects.
3 distanceatraw(A,B,z0) escribe en el punto point(z0), el valor de la distancia entre 2 objetos geométricos.
4 distanceatraw(A,B,z0) εμφανίζει στο σημείο z0, την απόσταση 2 γεωμετρικών αντικειμένων.
0 GeoObj(A),GeoObj(B),(Pnt or Cplx(z0))
-1 distance
-2 distanceat
 A:=point(0);B:=point(1+i);distanceatraw(A,B,(1+i)/2)
 A:=point(0);s:=segment(1-i,i);distanceatraw(A,s,1)

# slope
1 Renvoie la pente de la droite définie dans l'argument ou est un attribut de droite.
2 Returns the slope of the line defined in the argument or is an attribute of line.
3 Traza la pendiente de la recta definida en el argumento o es atributo de una recta.
4 Επιστρέφει την κλίση της ευθείας που ορίζεται στο όρισμα ή είναι χαρακτηριστικό της ευθείας.
8 斜率
0 Line||Pnt||Cplx,[Pnt||Cplx]
-1 line
-2 tangent
-3 LinTan
-4 slopeatraw
-5 slopeat
slope(line(1,2i))
slope(segment(1,2i))
slope(1,2i)
slope(line(y+2x=2))
slope(point(1),point(2i))
slope(tangent(plotfunc(sin(x)),pi/4))
slope(LineTan(sin(x),pi/4))
 line(point(1,2),slope=-1)

# slopeat
1 slopeat(d,z0) affiche au point(z0), avec une légende, la valeur de la pente de la droite ou segment d.
2 slopeat(d,z0) displays at the point(z0), with a legend, the value of the slope of the line or segment d.
3 slopeat(d,z0) escribe en el punto point(z0), con una leyenda, el valor de la pendiente de la recta o segmento d.
4 slopeat(d,z0) εμφανίζει στο σημείο z0, μαζί με ένα υπόμνημα, την τιμή της κλίσης της ευθείας ή του τμήματος d.
0 Line, Pnt||Cplx(z0)
-1 slope
-2 slopeatraw
 A:=point(0);B:=point(1+i);slopeat(droite(A,B),(1+i)/2)
 s:=segment(1-i,i);slopeat(s,point(0.4))
 t:=tangent(plotfunc(sin(x)),pi/4);slopeat(t,0)

# slopeatraw
1 slopeatraw(d,z0) affiche au point(z0), la valeur de la pente de la droite ou segment d.
2 slopeatraw(d,z0) displays at point(z0), the value of the slope of the line or segment d.
3 slopeatraw(d,z0) escribe en el punto point(z0), el valor de la pendiente de la recta o segmento d.
4 slopeatraw(d,z0) εμφανίζει στο σημείο z0, την τιμή της κλίσης της ευθείας ή του τμήματος d.
0 Line, Pnt||Cplx(z0)
-1 slope
-2 slopeat
 A:=point(0);B:=point(1+i);slopeatraw(droite(A,B),(1+i)/2)
 s:=segment(1-i,i);slopeatraw(s,point(0.4))
slopeatraw(tangent(plotfunc(sin(x)),pi/4),0)
slopeatraw((LineTan sin(x),pi/4),i)

# area
1 Aire algébrique d'un cercle d'un arc de cercle ou d'un polygone étoilé (par exemple triangle, carré, ...) ou de l'aire sous une courbe en option la méthode de quadrature (trapeze,rectangle_gauche,rectangle_droit,point_milieu,simpson,rombergt,rombergm).
2 Algebraic area of a circle, a circle arc or of a (star) polygon (e.g. triangle, square, ...)or of the area below a curve, optionally with a quadrature method (trapezoid,left_rectangle,right_rectangle,middle_point,simpson,rombergt,rombergm).
3 Área algebraica de una circunferencia, un arco de circunferencia o de un polígono estrella (por ejemplo triángulo, cuadrado,...) o el area bajo una curva, en opción el método de cuadratura.
4 αλγεβρική περιοχή ενός (αστεροειδούς) πολυγώνου (π.χ. τρίγωνο, τετράγωνο, ...) ή την περιοχή κάτω από μια καμπύλη, δυνητικά μέσω μιας μεθόδου αριθμητικής ολοκληρώσεως
8 有向面
0 Polygone || Expr,x=a..b,[n],[Method]
-1 trapezoid
-2 perimeter
-3 areaatraw
-4 areaat
-5 areaplot
area(triangle(0,1,i))
area(square(0,2))
area(circle(0,2))
area(0,1,i)
area(x^2,x=0..1,5,trapezoid)
area(x^2,x=0..1,5,simpson)
area(x^2,x=0..1,5,rombergm)

# areaat
1 Affiche au point(z0), avec une légende, l'aire algébrique d'un cercle ou d'un polygone étoilé (par exemple triangle, carré, ...)
2 Displays at point(z0), with a legend, algebraic area of a circle or of a (star) polygon (e.g. triangle, square, ...)
3 Escribe en el punto point(z0), con una leyenda, el área algebraica de una circunferencia o de un polígono estrella (por ejemplo triángulo, cuadrado, ...)
4 εμφανίζει στο σημείο z0, μαζί με ένα υπόμνημα, το εμβαδόν ενός (αστεροειδούς-) πολυγώνου (π.χ. τριγώνου, τετραγώνου, ...) ή κύκλου.
0 Polygone, Pnt||Cplx(z0)
-1 area
-2 areaatraw
-3 polygon
-4 perimeteratraw
-5 areaplot
 t:=triangle(0,1,i);areaat(t,(1+i)/2)
 c:=square(0,2);areaat(c,1+i)
 c2:=circle(0,2);areaat(c2,1+i)
 p:=polygon(0,1,i);areaat(p,1+i)
 A:=point(0);B:=point(1+i);c:=carre(A,B);areaat(c,i)

# areaatraw
1 Affiche au point(z0), l'aire algébrique d'un cercle ou d'un polygone étoilé (par exemple triangle, carré, ...)
2 Displays at point(z0), algebraic area of a circle or of a (star-)polygon (e.g. triangle, square, ...)
3 Escribe en el punto point(z0), el área algebraica de una circunferencia o de un polígono estrella (por ejemplo triángulo, cuadrado, ...)
4 εμφανίζει στο σημείο z0, το εμβαδόν ενός (αστεροειδούς-) πολυγώνου (π.χ. τριγώνου, τετραγώνου, ...) ή κύκλου.
0 Polygone, Pnt||Cplx(z0)
-1 area
-2 areaat
-3 polygon
-4 perimeteratraw
-5 areaplot
areaatraw(triangle(0,1,i),(1+i)/2)
areaatraw(square(0,2),1+i)
areaatraw(circle(0,2),1+i)
areaatraw(polygon(0,1,i),1+i)
 A:=point(0);B:=point(1+i);c:=carre(A,B);areaatraw(c,i)

# perimeter
1 Périmètre d'un polygone (par exemple triangle, carré, ...)
2 Perimeter of a polygon (e.g. triangle, square, ...)
3 Perímetro de una circunferencia o de un polígono (por ejemplo triángulo, cuadrado, ...)
4 Περίμετρος ενός πολυγώνου (π.χ. τριγώνου, τετραγώνου, ...) ή κύκλου.
0 Polygone
-1 polygon
-2 area
-3 perimeteratraw
-4 perimeterat
perimeter(triangle(0,1,i))
perimeter(square(0,2))
perimeter(circle(0,2))
perimeter(0,1,i)

# perimeterat
1 Affiche au point(z0), avec une légende, le périmètre d'un cercle ou d'un polygone (exemple triangle, carré,...)
2 Displays at point(z0), with a legend, the perimeter of a circle or of a polygon (e.g. triangle, square, ...)
3 Escribe en el punto point(z0), con una leyenda, el perímetro de una circunferencia o de un polígono (por ejemplo triángulo, cuadrado, ...)
4 εμφανίζει στο σημείο z0, μαζί με ένα υπόμνημα, την περίμετρο ενός πολυγώνου (π.χ. τριγώνου, τετραγώνου, ...) ή κύκλου.
0 Polygone, Pnt||Cplx(z0)
-1 perimeter
-2 perimeteratraw
-2 polygon
-3 areaatraw
 t:=triangle(0,1,i);perimeterat(t,1+i)
 c:=square(0,2);perimeterat(c,1+i)
 c2:=circle(0,2);perimeterat(c2,1+i)
 p:=polygon(0,1,i);perimeterat(p,1+i)
 A:=point(0);B:=point(1+i);c:=carre(A,B);perimeterat(c,i)

# perimeteratraw
1 Affiche au point(z0), le périmètre d'un cercle ou d'un polygone (exemple triangle, carré,...)
2 Displays at point(z0), the perimeter of a circle or of a polygon (e.g. triangle, square, ...)
3 Escribe en el punto point(z0), el perímetro de una circunferencia o de un polígono (por ejemplo triángulo, cuadrado, ...)
4 εμφανίζει στο σημείο z0, την περίμετρο ενός πολυγώνου (π.χ. τριγώνου, τετραγώνου, ...) ή κύκλου.
0 Polygone, Pnt||Cplx(z0)
-1 perimeter
-2 perimeterat
-3 polygon
-4 areaatraw
perimeteratraw(triangle(0,1,i),1+i)
perimeteratraw(square(0,2),1+i)
perimeteratraw(circle(0,2),1+i)
perimeteratraw(polygon(0,1,i),1+i)
 A:=point(0);B:=point(1+i);c:=carre(A,B);perimeteratraw(c,i)

# extract_measure
1 extract_measure donne comme réponse la valeur calculée par l'argument.
2 extract_measure gives as answer the value calculated by the argument.
3 extract_measure devuelve con respuesta el valor calculado por el argumento.
4 extract_measure επιστρέφει την τιμή που υπολογίζεται από το όρισμα.
0 Var
-1 angleatraw
-2 distanceatraw
-3 angleat
-4 distanceat
-5 slopeatraw
-6 areaatraw
-7 perimeteratraw
-8 slopeat
-5 areaat
-10 perimeterat
extract_measure(distanceatraw(0,1+i,(1+i)/2))
extract_measure(angleatraw(0,1,1+i,1))
 A:=point(0);B:=point(1+i);a:=distanceatraw(A,B,(1+i)/2);extract_measure(a)

# append
1 Rajoute un élément à un ensemble ou à la fin d'une liste ou d'une chaîne (L:=append(L,a) ou L.append(a)).
2 Append an element to a set or at the end of a list or of a string (L:=append(L,a) o L.append(a)).
3 Añade un elemento a una lista (conjunto o cadena)(L:=append(L,a) ou L.append(a)).
4 Προσθήκη ενός στοιχείου στο τέλος μιας λίστας (σύνολο ή συμβολοσειράς)(L:=append(L,a) ή L.append(a)).
0 (Lst||Set||Str(L),Elem)
-1 concat
-2 prepend
append([1,2,4],6)
append(%{1,2,4%},6)
 L:=[1,2,4];L:=append(L,6)
 L:=[1,2,4];L.append(6)
 S:=set[1,2,4];S:=append(S,6)
 S:=set[1,2,4];S.append(6)

# arg
1 Argument d'un nombre complexe.
2 Returns the argument of a complex number.
3 Devuelve el argumento de un número complejo.
4 Επιστρέφει το όρισμα ενός μιγαδικού αριθμού.
8 参数。arg 函数可查找复数确定的角度。
0 Expr
-1 abs
arg(1+i)
arg(1+2*i)
arg((1+2*i)^2)

# args
1 Dans un programme args(NULL) désigne la liste formée par la fonction et ses arguments.
2 Inside a program args(NULL) is the list of the function and its arguments.
3 Dentro de un programa args(NULL) es la lista constituida por la función y sus argumentos.
4 Σε ένα πρόγραμμα args(NULL) είναι η λίστα της συνάρτησης και των ορισμάτων της.
0 NULL
-1 
 f(a,b):={local y; y:=args(NULL); print(y); return a+b;};f(12,5)

# asin arcsin ASIN
1 Arc sinus.
2 Arcsine.
3 Arcoseno.
4 Τόξο ημιτόνου
8 反正弦函数。
0 Expr
-1 sin
asin(0)

# asc
1 Renvoie la liste des codes ASCII d'une chaîne.
2 Returns the list of the ASCII codes of a string.
3 Devuelve la lista de los códigos ASCII de una cadena.
4 Επιστρέφει τη λίστα των κωδικών ASCII μιας συμβολοσειράς
8 返回一个含有 ASCII 码字符串的矢量。
0 Str
-1 char
-2 ord
asc("bonjour")
asc("A")

# asec ASEC
1 Arc sécante: asec(x)=acos(1/x).
2 Arcsecant: asec(x)=acos(1/x).
3 Arcosecante: asec(x)=acos(1/x).
4 Τόξο τέμνουσας: asec(x)=acos(1/x).
8 反正割。  该函数来源于反正割函数。
0 Expr
-1 acos
-2 sec
asec(1)
asec(2)

# asinh arcsinh ASINH
1 Arc sinus hyperbolique.
2 Hyperbolic arcsine.
3 Arcoseno hiperbólico.
4 Υπερβολικό τόξο ημιτόνου.
8 反双曲正弦。
0 Expr
-1 sinh
-2 asin
asinh(0)

# assume
1 Hypothèse sur une variable.
2 Make an assumption on a variable.
3 Asigna una hipótesis a una variable.
4 Κάνει μια υπόθεση για μια μεταβλητή.
0 Expr
-1 purge
-2 about
-3 additionally
assume(a>0)
assume(a=0.3)
assume(a:=[pi/4,0,pi/2])
assume(a:=[pi/4,0,pi/2,0.1])
assume(n,integer);
assume(n,integer);additionally(n>6)
assume(a>-10 and a<10)
assume((a>=2 and a<4) or a>6)
assume(a>=2);additionally(a<6)
assume(a)

# additionally
1 Rajout d'une hypothèse sur une variable.
2 Make an additionally assumption on a variable.
3 Agrega una hipótesis a una variable.
4 Κάνει ακόμα μία υπόθεση για μία μεταβλητή.
0 Expr
-1 purge
-2 about
-3 assume
 assume(n,integer);additionally(n>5)
 assume(n,integer);assume(n>=2,additionally)

# at
1 at(l,j) (ou at(m,[j,k])) désigne l'élément de la liste l (ou matrice m) d'indice j (ou d'indice j,k).
2 at(l,j) (or at(m,[j,k])) is the element of the list l (or matrix m) for index=j (or for index j,k).
3 at(l,j) (ó at(m,[j,k])) es el elemento de la lista l (o matriz m) de índice j (o de índice j,k).
4 at(l,j) (ή at(m,[j,k])) είναι το στοιχείο της λίστας l (ή του πίνακα m) με δείκτη=j (ή με δείκτες j,k).
0 Lst(l)||Mtrx(m),Index(j)||Lst([j,k])
-1 of
at([10,11,12],1)
at([[1,2],[3,4]],[1,0])

# atan arctan ATAN
1 Arc tangente.
2 Arctangent.
3 Arcotangente.
4 Τόξο εφαπτομένης.
8 反正切函数。
0 Expr
-1 tan
-2 atanh
atan(0)

# atan2acos
1 Remplace arctan(x) par pi/2-arccos(x/sqrt(1+x^2)) dans l'argument.
2 Replaces arctan(x) by pi/2-arccos(x/sqrt(1+x^2)) in the argument.
3 Reemplaza arctan(x) por pi/2-arccos(x/sqrt(1+x^2)) en el argumento.
4 Αντικατάσταση του arctan(x) στο όρισμα με pi/2-arccos(x/sqrt(1+x^2)).
0 Expr
-1 atan2acos(atan(x))

# atan2asin
1 Remplace arctan(x) par arcsin(x/sqrt(1+x^2)) dans l'argument.
2 Replaces arctan(x) by arcsin(x/sqrt(1+x^2))in the argument.
3 Reemplaza arctan(x) por arcsin(x/sqrt(1+x^2)) en el argumento.
4 Αντικατάσταση arctan(x) στο όρισμα με arcsin(x/sqrt(1+x^2)).
0 Expr
-1 atan2asin(atan(x))

# atanh arctanh ATANH
1 Arc tangente hyperbolique.
2 Hyperbolic arctangent.
3 Arcotangente hiperbólico.
4 Υπερβολικό τόξο εφαπτομένης.
8 反双曲正切。
0 Expr
-1 atan
-2 tanh
atanh(0)

# a2q
1 a2q(A,X)= la forme quadratique q associée à A, X =vecteur de variables.
2 a2q(A,X)=the quadratic form q associated to A, X=vector of variables.
3 a2q(A,X)=la forma cuadrática q asociada a A, X=vector de variables.
4 a2q(A,X)=η τετραγωνική μορφή q συσχετισμένη με το Α, Χ=διάνυσμα των μεταβλητών.
0 Mtrx,VectVar
-1 q2a
a2q([[1,2],[4,4]],[x,y])
a2q([[1,3],[3,4]],[x,y])

# backquote
1 ``
2 ``
3 ``
4 `` Αναστολή υπολογισμών
0 Expr
-1 quote

# basis
1 Extrait une base d'une famille génératrice de vecteurs.
2 Extract a basis from a spanning set of vectors.
3 Extrae una base de una familia generadora de vectores.
4 Υπολογισμός μίας βάσης του χώρου του παραγόμενου από ένα σύνολο διανυσμάτων.
0 Lst(vector1,..,vectorn)
-1 ker
-2 ibasis
basis([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])

# bisector
1 Trace la bissectrice de l'angle (AB,AC) donné par 3 points A,B,C.
2 Draws the bisector of the angle (AB,AC) given by 3 points A,B,C.
3 Traza la bisectriz del ángulo (AB,AC) dado por 3 puntos A,B,C.
4 Σχεδιάζει την διχοτόμο της γωνίας (AB, AC) που δίνεται από 3 σημεία Α, Β, C.
0 (Pnt(A) or Cplx),(Pnt(B) or Cplx),(Pnt(C) or Cplx)
-1 angle
-2 exbisector
bisector(0,1,i)

# exbisector
1 Trace la bissectrice extérieure de l'angle (AB,AC) donné par 3 points A,B,C.
2 Draws the exterior bisector of the angle (AB,AC) given by 3 points A,B,C.
3 Traza la bisectriz exterior del ángulo (AB,AC) dado por 3 puntos A,B,C.
4 Σχεδιάζει την εξωτερική διχοτόμο της γωνίας (AB, AC) που δίνεται από 3 σημεία Α, Β, C.
0 (Pnt(A) or Cplx),(Pnt(B) or Cplx),(Pnt(C) or Cplx)
-1 angle
-2 bisector
exbisector(0,1,i)

# bloc
1 Mot réservé.
2 Reserved word.
3 Palabra reservada.
4 Δεσμευμένη λέξη
0 
-1 begin
-2 end
-3 {}
 if (2>1) begin print("ifactor(154)=",ifactor(154));ifactor(154);end
 if (2>1) {print("ifactor(154)=",ifactor(154));ifactor(154);}

# begin
1 Début de bloc.
2 Bloc begin.
3 Comienzo de bloque.
4 Αρχή μπλοκ
8 
0 
-1 end
-2 bloc
-3 {}
 if (2>1) begin print("ifactor(154)=",ifactor(154));ifactor(154);end

# bernoulli
1 bernoulli(n) désigne le n-ième nombre de Bernoulli et bernoulli(n,x) désigne le n-ième polynôme de Bernoulli de variable le deuxième argument.
2 bernoulli(n) is the n-th number of Bernoulli and bernoulli(n,x) is the n-th polynomial of Bernoulli and the second argument is the variable.
3 bernoulli(n) es el n-ésimo número de Bernoulli y bernoulli(n,x) es el n-ésimo polinomio de Bernoulli de variable el segundo argumento.
4 bernoulli(n) είναι ο n-στός αριθμός Bernoulli και bernoulli(n,x) είναι ο n-στός  πολυώνυμο Bernoulli με μεταβλητή το 2ο όρισμα.
0 Intg||(Intg,Var)
-1 
bernoulli(6)
bernoulli(6,x)

# break
1 Pour interrompre une boucle: while (cond) {inst1; if (cond) {inst2;break;}}.
2 Interrupts a loop: while (cond) {inst1; if (cond) {inst2;break;}}.
3 Interrumpe un bucle: while (cond) {inst1; if (cond) {inst2;break;}}.
4 Διακόπτει έναν βρόχο: while (cond) {inst1; if (cond) {inst2;break;}}.
8 退出循环结构。
0 
-1 continue
  f(a,b):={local r;while (1==1){if (b==0){break;} r:=irem(a,b);a:=b;b:=r;}a;}

# breakpoint
1 Ajoute un point d'arrêt.
2 Adds a breakpoint.
3 Añade un punto de ruptura.
4 Προσθήκη ενός σημείου διακοπής
0 Intg
-1 rmbreakpoint
breakpoint(1)

# canonical_form
1 Forme canonique du trinôme de degré 2.
2 Canonical_form of a 2 degree polynomial.
3 Forma canónica de un polinomio de grado 2.
4 Κανονική μορφή ενός πολυωνύμου 2ου βαθμού.
0 Trinom(a*x^2+b*x+c),[Var]
-1 
canonical_form(2*x^2-12*x+1)
canonical_form(2*a^2-12*a+1,a)

# case
1 Test (choix multiple): switch(variable){case 1: {bloc1;} default: {bloc2;}};
2 Test (multiple choice): switch(variable){case 1: {bloc1;} default: {bloc2;}};
3 Test (selección múltiple): switch(variable){case 1: {bloc1;} default: {bloc2;}};
4 Έλεγχος (πολλαπλή επιλογή): switch(variable){case 1: {bloc1;} default: {bloc2;}};
8 启动一个 "switch...{case...defauft:..}" 分支结构。
0 
-1 if
-2 switch
-3 default
 a:=1;switch(a){case 0:{b:=1;break;} case 1:{b:=3;break;} default:{b:=0;}};b;

# catch
1 Protection contre les erreurs: try {instructions} catch(variable) {error_instructions} (dans un programme).
2 Error protection: try {instructions} catch(variable) {error_instructions}(in a program).
3 Protección contra errores: try {instructions} catch (variable) {error_instructions}(dentro de un programa).
4 Προστασία από λάθη: try {instructions} catch (variable) {error_instructions}(σε ένα πρόγραμμα).
0 Var
-1 try
 essai(x):={local y,err;try {y:=[[1,2]]*x;}catch(err){y:="erreur fatale :"+err;} return y;};essai([1,2,3])

# cd
1 Change de répertoire.
2 Change directory.
3 Cambia de directorio.
4 Αλλαγή καταλόγου εργασίας
0 Str
-1 pwd
cd("toto")

# ceil ceiling
1 Renvoie le plus petit entier >= à l'argument.
2 Returns the smallest integer >= to the argument.
3 Devuelve el menor entero >= que el argumento.
4 Επιστρέφει τον ελάχιστο ακέραιο >= του ορίσματος.
8 大于或等于该值的最小整数。
0 Real or Cplx
-1 floor
-2 round
ceil(-4.2)
ceil(4.3+2.4*i)

# center
1 Désigne le centre d'un cercle.
2 Shows the center of a circle.
3 Muestra el centro de una circunferencia.
4 Σχεδιάζει το κέντρο ενός κύκλου.
0 Crcle
-1 circle
-2 radius
center(circle(1+i,2))
center(circumcircle(0,1,1+i))

# orthocenter
1 Désigne l'orthocentre d'un triangle ou du triangle formé par 3 points.
2 Shows the orthocenter of a triangle or of the triangle made with 3 points.
3 Muestra el ortocentro de uno triángulo o del triángulo formado por 3 puntos.
4 Σχεδιάζει το ορθόκεντρο ενός τριγώνου ή του τριγώνου που ορίζεται από 3 σημεία.
0 (Pnt or Cplx),(Pnt or Cplx),(Pnt or Cplx)
-1 altitude
-2 triangle
orthocenter(1+i,2,i)
orthocenter(point(1+i),point(2),point(i))
orthocenter(triangle(0,1,1+i))

# changebase
1 Renvoie la matrice B=inv(P)*A*P.
2 Returns the matrix B=inv(P)*A*P.
3 Devuelve la matriz B=inv(P)*A*P.
4 Επιστρέφει τον πίνακα B=inv(P)*A*P.
0 Mtrx(A),Mtrx(P)
-1 
changebase([[1,2],[1,3]],[[1,1],[0,1]])
changebase([[1,2],[1,3]],[[1,0],[1,1]])

# char chr
1 Renvoie la chaîne correspondant aux codes des caractères contenus dans l'argument.
2 Returns the string corresponding to the character code of the argument.
3 Devuelve la cadena correspondiente a los códigos de caracteres contenidos en el argumento.
4 Επιστρέφει την συμβολοσειρά που αντιστοιχεί στους χαρακτήρες στο όρισμα.
8 返回与矢量的 ASCII 字符码相对应的字符串，或返回与该整数相关的单个字符。
0 Intg or Lst(Intg)
-1 asc
-2 ord
char(65)
char([65,66,67])

# continue
1 Dans un programme, ne fait pas la fin de l'itération et passe à l'itération suivante: while (cond) {i1; if(cond) continue; i2;}.
2 In a program, don't do the end of the iteration but do the next iteration: while (cond) {i1; if(cond) continue; i2;}.
3 En un programa, no finaliza la iteración, sino que pasa a la iteración siguiente: while (cond) {i1; if(cond) continue; i2;}.
4 Σε ένα πρόγραμμα, δεν πραγματοποιείται η λήξη της επανάληψης αλλά εκτελείται η επόμενη επανάληψη: while (cond) {i1; if(cond) continue; i2;}.
8 使循环程序的执行过程转移到循环程序下一次迭代的开始位置
0 
-1 break
-2 cont
 a:=10;while (a>0) {a:=a-3; if (a>0) {continue;} print(a);}

# cont
1 Continue un programme arrêté.
2 Continues execution of a stopped program.
3 Continua la ejecución de un programa detenido.
4 Συνεχίζει ένα πρόγραμμα που διακόπηκε.
0 NULL
-1 continue
cont()

# chinrem
1 Reste chinois pour des polynômes écrits sous forme symbolique ou de listes.
2 Chinese remainder for polynomials written as lists or no.
3 Resto chino para polinomios escritos como listas o no.
4 Κινέζικο υπόλοιπο για πολυώνυμα που δόθηκαν ως λίστες.
8 ：多项式的中国余数
0 [Lst||Expr,Lst||Expr],[Lst||Expr,Lst||Expr]
-1 ichinrem
chinrem([x+2,x^2+1],[x+1,x^2+x+1])
chinrem([[1,2],[1,0,1]],[[1,1],[1,1,1]])

# conic
1 Définit une conique par son équation de variables x,y par défaut et la trace.
2 Defines a conic by its equation with x,y as default variables and draws it.
3 Define una cónica por su ecuación con x,y como variables por defecto, y la traza.
4 Ορίζει μια κωνική από την εξίσωσή της με x,y ως προεπιλεγμένες μεταβλητές και την σχεδιάζει.
0 Expr,[LstVar]
-1 circle
-2 ellipse
-3 hyperbola
-4 parabola
-5 reduced_conic
conic(x^2+y^2-x*y-3)
conic(x^2+2*y^2-x*y-3,x,y)
conic(u^2-2*v^2-2*u*v-1,[u,v])
conic(y^2-x*y+3,[x,y])

# quadric
1 Définit une quadrique par son équation cartésienne de variables x,y,z par défaut et la trace.
2 Defines a quadric by its cartesian equation with x,y,z as default variables and draws it.
3 Define una cuádrica por su ecuación cartesiana con x,y como variables por defecto, y la traza.
4 Ορίζει και σχεδιάζει μια τετραγωνική από την εξίσωσή της με x,y,z ως προεπιλεγμένες μεταβλητές.
0 Expr,[Lst(Var)]
-1 reduced_quadric
quadric(4*x^2+y^2+z^2-4*x*y+4*x*z-2*y*z+8*x-4*y+4*z+2)
quadric(x^2+3*y^2-3*z^2-8*y*z+2*z*x-4*x*y-1,x,y,z,affichage=vert+rempli)
quadric((u+v)*(v-w)+3*u-5*v,[u,v,w],affichage=cyan)
quadric(7*x^2+4*y^2+4*z^2+4*x*y-4*x*z-2*y*z-4*x+5*y+4*z-18,[x,y,z])

# circle
1 Définit en 2-d un cercle par un diamètre MN (arg1=M ou zM,arg2=N) ou par centre et rayon (arg1=M ou zM,arg2=zN) et (centre=M et rayon=abs(zN)) [ou l'arc AB, A d'angle a, B d'angle b, (MN=angle 0) ou M(M+zN)=angle 0] ou par son équation et en 3-d par son diamètre et un 3ème point.
2 Define for 2-d a circle with a diameter MN (arg1=M ou zM,arg2=N) or  with center and radius (arg1=M ou zM,arg2=zN) et (center=M et radius=abs(zN)) [or the arc AB, A angle a, B angle b, (MN=angle 0) or M(M+zN)=angle 0] or by its equation and for 3-d with a diameter and a third point.
3 Define una circunferencia por un diámetro MN (arg1=M o zM,arg2=N) o por sus centro y radio (centr0=M et radi0=abs(zN)) [o arc0 AB, A ángulo a, B ángulo b, (MN=ángulo 0) or M(M+zN)=ángulo 0)] o por su ecuación.
4 Ορίζει έναν κύκλο με διάμετρο (arg1=M o zM,arg2=N=σημείο) ή με κέντρο και ακτίνα (arg2=μιγαδικού, abs(arg2)=ακτίνα) [ή με τόξο AB, A γωνία a, B γωνία b (MN=angle 0) or M(M+zN)=angle 0] ή με βάση την εξίσωσή του.
8 圆
0 (Pnt(M) or Cplx(M),(Pnt(N) or Cplx(zN)),[Real(a)],[Real(b)],[Var(A)],[Var(B)]
-1 circumcircle
-2 incircle
-3 excircle
-4 center
-5 radius
-6 sphere
-7 Circle
circle(0,point(2*i))
circle(i,i)
circle(i,1)
circle(0,i,pi/4,pi/2)
circle(0,i,pi/4,pi/2,A,B)
circle(x^2+y^2-x-y)
cercle(point([-1,0,0]),point([1,0,0]),point([0,2,0]))
cercle([-1,0,0],point([1,0,0]),[0,2,0])

# cholesky
1 Pour A matrice symétrique numérique, renvoie L, matrice telle que A=L*tran(L).
2 For a numerical symmetric matrix A, returns L matrix such that A=L*tran(L).
3 Para un matriz numérica simétrica A, devuelve L, matriz tal que A=L*tran(L).
4 Για έναν αριθμητικό πίνακα Α, επιστρέφει τον πίνακα L έτσι ώστε A=L*tran(L).
0 Mtrx
-1 lu
-2 qr
-3 gauss
cholesky([[3,1],[1,4]])

# circumcircle
1 circonscrit(A,B,C)=cercle circonscrit au triangle ABC.
2 circumcircle(A,B,C)=circumcircle of the triangle ABC.
3 circumcircle(A,B,C)=circunferencia circunscrita al triángulo ABC.
4 circumcircle(A,B,C)=περιγεγραμμένος κύκλος τριγώνου ABC.
8 外接圆(A,B,C)
0 (Pnt or Cplx),(Pnt or Cplx),((Pnt or Cplx)
-1 circle
-2 incircle
-3 excircle
circumcircle(0,1,1+i)

# click
1 Entrée interactive d'un nombre complexe en cliquant dans un écran géométrique.
2 Interactive input of a complex number with a click on a geometric screen.
3 Entrada interactiva de un número complejo con un click en una pantalla de geometría.
4 Διαδραστική είσοδος.
0 NULL
-1 
click()
 A:=point(click())
 a:=click()

# comb nCr
1 comb(n,r)=nombre de combinaisons de r objets pris parmi n : n!/(r!(n-r)!) (Si n<0 comb(n,r)=n(n-1)..(n-r+1)/r!).
2 comb(n,r)=number of combinations of r objects taken among n : n!/(r!(n-r)!) (If n<0 comb(n,r)=n(n-1)..(n-r+1)/r!).
3 comb(n,r)=número de combinaciones de r objetos tomados dentro de n : n!/(r!(n-r)!) (si n<0 comb(n,r)=n(n-1)..(n-r+1)/r!). 
4 comb(n,r)=ο αριθμός των συνδυασμών των p αντικειμένων από n : n!/(r!(n-r)!) (n<0 comb(n,r)=n(n-1)..(n-r+1)/r!).
8 组合。  返回从 n 个元素中一次取 r 个元素的组合数（不考虑顺序）。 comb(n,r)=n!/(r!(n-r)!) (n<0 comb(n,r)=n(n-1)..(n-r+1)/r!)。
0 Intg(n),Intg(r)
-1 factorial
-2 perm
comb(4,2)

# comment
1 Commentaire dans un programme.
2 Comment in a program.
3 Comentario dentro de un programa.
4 Σχόλια σε ένα πρόγραμμα.
0 Expr
-1 
comment("my_comment")

# concat augment extend
1 Concatène deux listes ou deux chaînes ou deux séquences ou 2 matrices (les 2 matrices doivent avoir le même nombre de lignes et seront concaténées ligne par ligne); L:=concat(L,L1) ou L.concat(L1).
2 Concatenates two lists or two strings or two sequences or 2 matrix; L:=concat(L,L1) or L.concat(L1).
3 Concatena 2 listas o 2 cadenas o 2 secuencias o dos matrices; L:=concat(L,L1) o L.concat(L1).
4 Συνένωση 2 λιστών ή 2 συμβολοσειρών ή 2 ακολουθιών ή 2 πινάκων; L:=concat(L,L1)  ή L.concat(L1).
8 连结  将两个列表连接成一个新列表。
0 Lst,Lst||Seq,Seq||Str,Str||Mtrx,Mtrx
-1 append
-2 cat
-3 semi_augment
-4 border
-5 +
concat([1,2],[3,4,5])
concat("bon","jour")
concat([[1,2],[3,4]],[[4,5,6],[6,7,8]])
 L:=[1,2];L.concat([3,4,5])
 S:="abcd";S.concat("efghi")

# conj
1 Conjugué d'un nombre complexe.
2 Returns the conjugate of a complex number.
3 Devuelve el conjugado de un número complejo.
4 Επιστρέφει τον συζυγή ενός μιγαδικού αριθμού.
0 Cplx
-1 re
-2 im
-3 tran
conj(1+i)
conj(1+2*i)
conj((1+2*i)^2)
conj([[1+i,2,3],[1,3,6],[2,5,9-i]])

# inString
1 Teste si e est dans la chaîne l (renvoie -1 ou k si l[k]=e).
2 Tests if e is in the string l (returns -1 or k if l[k]=e).
3 Comprueba si e está en la cadena l (devuelve -1, o k si l[k]=e).
4 Ελέγχει εάν το e είναι στη συμβολοσειρά l (=-1 ή k με l[k]=e).
0 Str(l),Elem(e)
-1 contains
inString("abcd","b")
inString("abcd","e")

# member
1 Teste si e est dans la liste ou ensemble l (=0 ou k+1 avec l[k]=e).
2 Tests if e is in the list or set l (=0 or k+1 with l[k]=e).
3 Comprueba si e está en la lista o conjunto l (=0, o k+1 con l[k]=e).
4 Ελέγχει εάν e είναι στη λίστα ή στο σύνολο l (=0 ή k+1 με l[k]=e).
8 测试。
0 Elem(e),(Lst(l) or Set(l))
-1 contains
-2 est_element
-3 find
-4 index
member(1,[4,3,1,2])
member(1,%{4,3,1,2%})

# contains
1 Test d'appartenance (renvoie l'indice+1 ou 1 pour un intervalle ou 0)
2 Tests if a set contains an expression (returns the index+1 or 1 for intervals or 0).
3 Comprueba si uno conjunto contiene una expresión (devuelve el índice+1 o 0).
4 Ελέγχει εάν ένα σύνολο περιέχει μια έκφραση (επιστρέφει το δείκτη+1 ή 0).
8 列表位置。  返回列表中元素的位置和 1。  如果列表元素多次出现，则返回第一次出现的位置和 1。 如果未出现指定的元素，返回 0 值。
0 (Lst(l) or Set(l)),Elem(e)
-1 inString
-2 member
-3 est_element
contains(%{0,1,2,3%},2)
contains([0,1,2,3],4)
contains([1..2],1.5)

# cos COS
1 Cosinus ou Option de la commande convert ou convertir (id trigcos).
2 Cosine or Option of the convert or convertir command (id trigcos).
3 Coseno o Opción del comando convert o convertir (id trigcos).
4 Συνημίτονο ή Επιλογή της εντολής convert ή convertir (id trigcos).
8 COS（余弦）： 余弦函数。返回数值的余弦。  数值可以是度或弧度，取决于主视图模式或符号设置中“角度单位”的设置。
0 Expr or Opt
-1 acos
-2 convert
-3 trigsin
cos(0)
 convert(cos(x)^4+sin(x)^2,cos)

# cosh COSH
1 Cosinus hyperbolique.
2 Hyperbolic cosine.
3 Coseno hiperbólico.
4 Υπερβολικό συνημίτονο
8 双曲余弦。
0 Expr
-1 acosh
cosh(0)

# cot COT
1 Cotangente.
2 Cotangent.
3 Cotangente.
4 Συνεφαπτομένη
8 余切  余切函数； 即 cos(x)/sin(x)。
0 Expr
-1 acot
-2 tan
cot(pi/2)

# cross crossproduct crossP
1 Produit vectoriel.
2 Wedge product.
3 Producto vectorial.
4 Εξωτερικό γινόμενο διανυσμάτων.
8 向量积。  查找 v1 与 v2 的向量积。
0 Vect(v1),Vect(v2)
-1 dot
cross([1,2],[3,4])
cross([1,2,3],[4,5,6])

# csc CSC
1 Cosécante: csc(x)=1/sin(x).
2 Cosecant: csc(x)=1/sin(x).
3 Cosecante: csc(x)=1/sin(x).
4 Συντέμνουσα:csc(x)=1/sin(x).
8 余割。  余割函数； 即 1/sin(x)。
0 Expr
-1 sin
-2 acsc
csc(pi/2)

# curl
1 Rotationnel=[dC/dy-dB/dz,dA/dz-dC/dx,dB/dx-dA/dy].
2 curl([A,B,C],[x,y,z])=[dC/dy-dB/dz,dA/dz-dC/dx,dB/dx-dA/dy].
3 rotacional=[dC/dy-dB/dz,dA/dz-dC/dx,dB/dx-dA/dy].
4 Στροβιλισμός ή περιστροφή:curl([A,B,C],[x,y,z])=[dC/dy-dB/dz,dA/dz-dC/dx,dB/dx-dA/dy].
0 Lst(A,B,C),Lst(x,y,z)
-1 derive
-2 divergence
curl([2*x*y,x*z,y*z],[x,y,z])

# curve
1 Mot réservé.
2 Reserved word.
3 Palabra reservada.
4 Δεσμευμένη λέξη.
0 Expr
-1 

# cycle2perm
1 Convertit le cycle c en une permutation.
2 Converts the cycle c to a permutation.
3 Convierte el ciclo c en una permutación.
4 Μετατρέπει τον κύκλο c σε μία μετάθεση.
0 Cycle
-1 cycles2permu
-2 permu2cycles
cycle2perm([1,3,5])

# cycles2permu
1 Convertit un produit de cycles en une permutation.
2 Converts a product of cycles into a permutation.
3 Convierte un producto de ciclos c en una permutación.
4 Μετατρέπει γινομένο κύκλων c σε μία μετάθεση.
0 Lst(Cycle)
-1 permu2cycles
-2 cycle2perm
cycles2permu([[1,3,5],[3,4]])

# cyclotomic
1 N-ième polynôme cyclotomique.
2 N-th cyclotomic polynomial.
3 N-ésimo polinomio ciclotómico.
4 Ν-στό κυκλοτομικό πολυώνυμο.
0 Expr
-1 none
cyclotomic(20)

# c1oc2
1 Renvoie la permutation égale au produit des deux cycles.
2 Returns the permutation product of the two cycles.
3 Devuelve la permutación producto de dos ciclos.
4 Επιστρέφει την μετάθεση που ισούται με το γινόμενο 2 κύκλων.
0 Cycle,Cycle
-1 c1op2
-2 p1oc2
c1oc2([3,4,5],[0,3])

# c1op2
1 Renvoie la permutation égale au produit du cycle et de la permutation.
2 Returns the permutation product of the cycle and the permutation.
3 Devuelve la permutación igual al producto del ciclo con la permutación.
4 Επιστρέφει την μετάθεση που ισούται με το γινόμενο του κύκλου και της μετάθεσης.
0 Cycle,Permut
-1 c1oc2
-2 p1oc2
c1op2([3,4,5],[0,3,2,1,5,4])

# debug
1 Lance le débogueur.
2 Launch a debugging session.
3 Comienza una sesión de depuración.
4 Έναρξη αποσφαλμάτωσης.
0 Expr
-1 
debug(pgcd(25,15))

# default otherwise
1 Cas par défaut dans une instruction switch.
2 Default case in a switch instruction.
3 Selección por defecto en una instrucción switch.
4 Προεπιλεγμένη επιλογή στην εντολή switch.
0 
-1 switch
-2 case
-3 if
 default: print("Default case!")
 a:=1;switch(a){case 0:{b:=1;break;} case 1:{b:=3;break;} default:{b:=0;}};

# degree
1 Degré du polynôme P par rapport à la variable var.
2 Degree of the polynomial P with respect to the second argument.
3 Grado del polinomio P con respecto al segundo argumento.
4 Βαθμός του πολυωνύμου P αναφορικά με το 2ο όρισμα.
0 Poly(P),Var(Var)
-1 valuation
-2 size
-3 total_degree
degree(x^3+x)
degree([1,0,1,0])
degree(x^3+x*y,y)

# total_degree
1 Degré total du polynôme P par rapport à la liste de variable Vars.
2 Total degree of the polynomial P with respect to the second argument.
0 Poly(P),Lst(Vars)
-1 valuation
-2 size
-3 degree
total_degree(x^3*y+x*y,[x,y])

# desolve deSolve dsolve
1 Résout une équation différentielle ou un système différentiel linéaire à coefficients constants.
2 Solves a differential equation or a differential linear system with constant coefficients.
3 Resuelve una ecuación diferencial o un sistema diferencial lineal con coeficientes constants.
4 Επίλυση μιας διαφορικής εξίσωσης.
0 Eq,[TimeVar],FncVar
-1 integrate
-2 diff
-3 odesolve
-4 plotode
-5 plotfiefd
desolve(y'+x*y=0)
desolve(y'+x*y=0,y)
desolve(y'+x*y=0,[0,1])
desolve([y'+x*y=0,y(0)=1],y)
desolve([y'=[[1,2],[2,1]]*y+[x,x+1],y(0)=[1,2]]) 
desolve(y''+y=0,y)
desolve([y''+y=sin(x),y(0)=1,y'(0)=2],y)
desolve([y''+y=sin(x),y(0)=1,y'(0)=2],x,y)
desolve([y''+y=sin(x),y(0)=1,y'(0)=2],[x,y])
desolve(diff(y(t),t)+t*y(t)=0,t,y)
desolve(diff(y(t),t)+t*y(t)=0,[t,y])
desolve((y''+y=sin(x)) and (y(0)=1) and (y'(0)=2),y)
desolve([z''+2*z'+z,z(0)=1,z'(0)=0],u,z)
desolve([z''+2*z'+z,z(0)=1,z'(0)=0],z(u))
desolve([z'=[[1,2],[2,1]]*z+[t,t+1],z(0)=[1,2]],t,z)
desolve([z'=[[1,2],[2,1]]*z+[t,t+1],z(0)=[1,2]],z(t))

# det
1 Déterminant d'une matrice carrée M.
2 Determinant of a square matrix M.
3 Determinante de una matriz cuadrada M.
4 Ορίζουσα ενός τετραγωνικού πίνακα M.
8 矩形矩阵的行列式。
0 Mtrx
-1 rref
-2 det_minor
-3 Det
det([[1,2],[3,4]])
det([[1,2,3],[1,3,6],[2,5,7]])

# Det
1 Renvoie le déterminant d'une matrice carrée M, sans l'évaluer.
2 Determinant of a square matrix M, without evaluation.
3 Determinante de una matriz cuadrada M, sin evaluarla.
4 Ορίζουσα ενός τετραγωνικού πίνακα M, χωρίς αποτίμηση.
0 Mtrx
-1 det
Det([[1,2],[3,4]])
Det([[1,2,3],[1,3,6],[2,5,7]])

# divergence
1 divergence([A,B,C],[x,y,z])=dA/dx+dB/dy+dC/dz.
2 divergence([A,B,C],[x,y,z])=dA/dx+dB/dy+dC/dz.
3 Divergencia: divergence([A,B,C],[x,y,z])=dA/dx+dB/dy+dC/dz.
4 Απόκλιση: divergence([A,B,C],[x,y,z])=dA/dx+dB/dy+dC/dz.
0 Lst(A,B,C),Lst(x,y,z)
-1 derive
-2 curl
divergence([x^2+y,x+z+y,z^3+x^2],[x,y,z])

# divpc
1 Division d'ordre n de 2 polynômes selon les puissances croissantes.
2 n-degree Taylor-poly for the quotient of 2 polynomials.
3 Polinómio de Taylor de grado n del cociente de 2 polinomios.
4 Taylor-πολυώνυμο βαθμού n για το πηλίκο 2 πολυωνύμων.
0 Poly,Poly,Intg(n)
-1 series
-2 quorem
divpc(x^4+x+2,x^2+1,5)

# dot dotP scalarProduct scalar_product dotprod
1 Produit scalaire de v1 et de v2 ou de 2 matrices aplaties selon 2 vecteurs.
2 Scalar product.
3 Producto escalar.
4 Εσωτερικό γινόμενο διανυσμάτων.
8 标量积。  查找两个阵列 v1 和 v2 的标量积。
0 Vect(v1),Vect(v2)
-1 *
-2 cross
-3 .*
-4 hadamard
dot([1,2],[3,4])
dot([3,2,4],[3,2,4])
dot([[1,2],[3,4]],[[3,2],[4,5]])

# *
1 Produit, ou produit scalaire de 2 vecteurs ou produit de 2 expressions ou produit de 2 matrices. C'est un opérateur infixé.
2 Scalar product infixed (or product of 2 expressions or 2 matrix).
3 Producto escalar infijo (o producto de 2 expressiones o 2 matrices).
4 Εσωτερικό γινόμενο διανυσμάτων, εντεθειμένο.
8  相乘。 对象可以是数值或返回数值结果的表达式。  对象也可以是列表或合适维数的矩阵。
0 Vect,Vect||Mtrx,Mtrx,||Xpr,Xpr
-1 dot
-2 cross
-3 .*
-4 hadamard
 [1,2]*[3,4]

# diff derive deriver
1 Dérivée par rapport au second argument.
2 Returns the derivative with respect to the 2nd argument.
3 Devuelve la derivada con respecto al segundo argumento.
4 Παραγωγίζει αναφορικά με το 2ο όρισμα.
8 微分。
0 Expr or Fnc,[SeqVar or LstVar]
-1 '
-2 function_diff
-3 integrate
-4 taux_accroissement
-5 implicitdiff
diff(x^3-x)
diff(x^3-x,x,3)
diff(x^3-x,quote(x)$3)
(diff@@3)('x^3-x')
diff(x*y+z*y,y)
diff(x*y+z*y,y,z)
diff(x*y+z*y,[y,z])
 f(x):=sin(2x);g:=diff(f);h:=diff(diff(f))

# '
1 Dérivée par rapport au second argument (version postfixée de diff).
2 Returns the derivative with respect to the 2nd argument (postfixed version of diff).
3 Devuelve la derivada con respecto al segundo argumento (versión postfija de diff).
4 Παραγωγίζει αναφορικά με το 2ο όρισμα (postθειμένη εκδοχή του diff).
0 Expr or Fnc,[SeqVar or LstVar]
-1 diff
-2 function_diff
-3 integrate
 (x^3-x)'
 (x^3-x,x$3)'
 (x*y+z*y,y)'
 (x*y+z*y,y,z)'
 (x*y+z*y,[y,z])'
 f(x):=sin(2x);g:=f';h:=f''

# symb2poly e2r
1 Renvoie la liste des coefficients d'un polynôme par rapport au 2ème argument ou si le 2ème argument est une liste renvoie le format interne du polynôme.
2 Returns the coefficients of a polynomial with respect to the 2nd argument or if the second argument is a list the internal format of the polynomial.
3 Devuelve los coeficientes de un polinomio con respecto al segundo argumento.
4 Επιστρέφει την λίστα των συντελεστών ενός πολυωνύμου αναφορικά με το 2ο όρισμα.
0 Expr, LstVar or [Var]
-1 poly2symb
-2 r2e
symb2poly(x*3+2.1)
symb2poly(3*x*y+2*y+1,y)
symb2poly(3*x*y+2*y+1,x,y)
symb2poly(3*x*y+2*y+1,[x,y])
symb2poly(-x^4+x*3*y+2+y^2*z,[x,y,z])
symb2poly(-x^4+x*3*y+2+y^2*z,[x,y,z])

# poly2symb r2e
1 Renvoie le polynôme (ou sa valeur) de coefficients le premier argument et de variable le deuxième argument (par défaut x).
2 Gives the polynomial (or its value) : the first argument is the vector of coefficients and the second argument is the variable (by default x).
3 Devuelve el polinomio (o su valor) de coeficientes el primer argumento y de variable el segundo argumento (por defecto x).
4 Επιστρέφει το πολυώνυμο με συντελεστές το 1ο όρισμα και με μεταβλητή το 2ο όρισμα.
0 Lst,Var
-1 e2r
-2 symb2poly
poly2symb([1,2,3])
poly2symb([1,2,3],x)
poly2symb([1,2,3],-1)
poly2symb([1,2,-1],y)

# egcd gcdex
1 Identité de Bézout pour 2 polynômes.
2 Extended greatest common divisor of 2 polynomials.
3 Máximo común divisor extendido de 2 polinomios.
4 Επεκταμένος μέγιστο κοινός διαιρέτης δύο πολυωνύμων.
0 (Poly or Lst),(Poly or Lst),[Var]
-1 gcd
-2 iegcd
egcd((x-1)^2,x^3-1)
egcd((X-1)^2,X^3-1,X)
egcd([1,-2,1],[1,0,0,-1])
egcd([1,-2,1],[1,-1,2])

# egv eigenvectors eigenvects eigVc
1 Calcule les vecteurs propres d'une matrice diagonalisable.
2 Computes the eigenvectors of a diagonalizable matrix.
3 Calcula los vectores propios de una matriz diagonalizable.
4 Υπολογίζει τα ιδιοδιανύσματα (ως στήλες) ενός διαγωνιοποιήσιμου πίνακα.
0 Mtrx
-1 egvl
-2 jordan
egv([[-2,-2,1],[-2,1,-2],[1,-2,-2]])
egv([[1,1,3],[1,3,1],[3,1,1]])

# egvl eigVl
1 Renvoie la matrice de Jordan associée à A si les valeurs propres sont calculables.
2 Returns the Jordan matrix associated to A when the eigenvalues are calculable.
3 Devuelve la matriz de Jordan asociada a A si los valores propios son calculables.
4 Επιστρέφει τον πίνακα Jordan που σχετίζεται με τον πίνακα Α όταν οι ιδιοτιμές είναι υπολογίσιμες.
0 Mtrx(A)
-1 egv
-2 jordan
egvl([[4,1],[-4,0]])
egvl([[-2,-2,1],[-2,1,-2],[1,-2,-2]])
egvl([[1,1,3],[1,3,1],[3,1,1]])

# eigenvals eigenvalues
1 Renvoie la séquence des valeurs propres (calculables) d'une matrice.
2 Returns the sequence of the (calculable) eigenvalues of a matrix.
3 Devuelve la secuencia de valores propios (calculables) de una matriz.
4 Επιστρέφει μια λίστα με τις (υπολογίσιμες) ιδιοτιμές ενός πίνακα.
8 以列表形式显示矩阵的特征值。
0 Mtrx
-1 egv
-2 jordan
eigenvals([[-2,-2,1],[-2,1,-2],[1,-2,-2]])
eigenvals([[1,1,3],[1,3,1],[3,1,1]])
eigenvals([[4,1],[-4,0]])

# else
1 Marque le début des instructions quand la condition d'un "if" est fausse; if (condition){instruction1;} else {instruction2;}
2 Starts false clause of an "if" statement: if (condition){instruction1;} else {instruction2;}
3 Comienza los comandos de la opción falsa de un "if": if (condition){instruction1;} else {instruction2;}
4 Σημαδεύει την αρχή των εντολών της επιλογής λάθος ενός "if" : if (condition){instruction1;} else {instruction2;}
8 属于 "if...then...else...end" 分支结构的一部分。
0 
-1 if
 if (a>b) {a;} else {b;}

# elif
1 Écriture condensée de else if qui est utilisée lorsqu'il y a plusieurs if...else if... à la suite: if condition1 then instruction1; elif condition2 then instruction2;...[else instruction;] end
2 Uses elif when you execute a series of tests (elif=else if). if condition1 then instruction1; elif condition2 then instruction2;...[else instruction;] end
3 FIXME elif =else if). if condition1 then instruction1; elif condition2 then instruction2;...[else instruction;] end
4 FIXME elif =else if. if condition1 then instruction1; elif condition2 then instruction2;...[else instruction;] end
0 
-1 if
-2 else
 if a>4 then [4,inf]; elif a>2 then [2,4]; elif a>0 then [0,2]; else [-inf,0];end;

# element
1 Désigne un point pris sur une courbe ou un réel pris dans un intervalle
2 Shows a point chosen on a curve or a real chosen in an interval
3 Muestra un punto seleccionado de una curva o un real escogido dentro de un intervalo
4 Είναι ένα σημείο επιλεγμένο πάνω σε μια καμπύλη ή ένας πραγματικός αριθμός σε ένα διάστημα.
0 (Curve or Real_interval),[Val]
-1 is_element
 t:=element(0..1)
 t:=element(0..1,0.3)
 t:=element(0..1,0.3,0.02)
 P:=element(circle(i,1),t)
 M:=element(circle(i,1))
 N:=element(circle(i,1),pi/2)

# ellipse
1 ellipse(F1,F2,M)=ellipse de foyers F1,F2 passant par M ou tel que MF1+MF2=2*a (geo2d) et ellipse(p(x,y)) dessine la conique si deg(p)=2.
2 ellipse(F1,F2,M)=ellipse focus F1,F2 through M or such as MF1+MF2=2*a (geo2d) and ellipse(p(x,y)) draws the conic if deg(p)=2.
3 ellipse(F1,F2,M)=elipse de focos F1,F2 que pasa por M o MF1+MF2=2*a (geo2d) y ellipse(p(x,y)) traza la cónica si deg(p)=2.
4 ellipse(F1,F2,M)=έλλειψη με εστίες F1,F2 που διέρχεται από το M ή τέτοια ώστε MF1+MF2=2*a (γεω2Δ) και ellipse(p(x,y)) σχεδιάζει την κωνική αν deg(p)=2.
8 椭圆。
0 Pnt(F1),Pnt(F2),(Pnt(M) or Real(a))
-1 hyperbola
-2 parabola
ellipse(-1,1,point(1+i))
ellipse(-1,1,1+sqrt(5))
ellipse(2x^2+3y^2-x*y-10)
ellipse(point(-1,0,0),point(1,0,0),point(1,1,1))
ellipse(x^2+2y^2-y-2)

# epsilon2zero
1 Remplace par zéro les valeurs < epsilon
2 Values < epsilon are replaced by zero
3 Sustituye por 0 los valores < epsilon
4 Τιμές < ε αντικαθίστανται από το μηδέν.
0 Expr
-1 evalf
epsilon2zero(1e-13+x+5)

# =
1 Symbole infixé pour relier les 2 membres d'une équation.
2 Infixed symbol that connects the 2 members of an equation.
3 Símbolo infijo para vincular los dos miembros de una ecuación.
4 Εντεθειμένο σύμβολο που συνδέει τα 2 μέλη μιας εξίσωσης
0 Expr,Expr
-1 equal
-2 equal2diff
-3 equal2list
-4 left
-5 right
 x+4=2
 x^2-3x+2=0
 equal(x+4,2)

# equal
1 Version préfixé de =
2 Prefixed version of =
3 Versión prefijo de =
4 Προτεθειμένη εκδοχή της =
0 Expr,Expr
-1 =
-2 equal2diff
-3 equal2list
-4 left
-5 right
 2*x=4
equal(2*x,4)
equal(x^2-3x+2,0)

# equal2diff
1 Transforme l'égalité A=B ou equal(A,B) en la différence A-B
2 A=B or equal(A,B) is converted into the difference A-B
3 Transforma A=B o equal(A,B) en la diferencia A-B
4 Μετασχηματισμός της ισότητας Α=Β σε διαφορά Α-Β
0 Equal
-1 left
-2 right
-3 equal2list
-4 equal
-5 =
equal2diff(x=2)
equal2diff(equal(x,2))

# equal2list
1 Transforme l'égalité A=B ou equal(A,B) en la liste [A,B]
2 A=B or equal(A,B)is converted into the list [A,B]
3 Transforma la igualdad A=B o equal(A,B) en la lista [A,B]
4 Μετασχηματισμός της ισότητας Α=Β σε λίστα [Α,Β]
0 Equal
-1 left
-2 right
-3 equal2diff
-4 equal
-5 =
equal2list(x=2)
equal2list(equal(x,2))

# equation
1 equation renvoie l'équation cartésienne d'une courbe
2 equation returns the cartesian equation of a curve
3 equation devuelve la ecuación cartesiana de una curva
4 equation επιστρέφει την καρτεσιανή εξίσωση μιας καμπύλης.
0 GeoObj, VectParam
-1 parameq
equation(line(1-i,i),[x,y])

# erase
1 Efface l'écran graphique
2 Erase the graphic screen
3 Borra la pantalla gráfica
4 Σβύνει την οθόνη γραφικών
0 NULL
-1 ClrGraph
-2 erase3d
erase()

# error ERROR throw
1 Génère l'affichage d'une erreur dans un programme
2 Generates the display of an error in a program
3 Genera un mensaje de error dentro de un programa
4 Προβάλλει ένα σφάλμα σε ένα πρόγραμμα
0 Str
-1 try
-2 catch
error("Argument should be integer")
error("je provoque une erreur")

# is_collinear
1 Renvoie 1 si les points sont alignés, 2 si les points sont confondus et 0 sinon.
2 Returns 1 if the points are aligned,2 if the points are the same and 0 otherwise.
3 Devuelve 1 si los puntos están alineados, 2 si los puntos están confundidos y 0 si no.
4 Επιστρέφει 1 αν τα σημεία είναι συγγραμμικά, 2 αν τα σημεία είναι τα ίδια και αλλιώς 0.
0 LstPnt
-1 is_concyclic
is_collinear(0,i,1+i,2*i)
is_collinear(point(0),point(1+i),point(2,2),point(-1-i))
is_collinear(point(0,0,0),point(1,1,0),point(2,2,0),point(-1,-1,1))

# is_concyclic
1 Renvoie 1 si les points sont cocycliques et 0 sinon.
2 Returns 1 if the points are on a circle and 0 otherwise.
3 Devuelve 1 si los 4 puntos forman una circunferencia, y 0 si no.
4 Επιστρέφει 1 αν τα σημεία είναι συγκυκλικά, και αλλιώς 0.
0 LstPnt
-1 is_collinear
is_concyclic(0,i,1+i,1,1/2+i*(1/2+sqrt(2)/2))
is_concyclic(1,-1,i,-i,1+i,-1-i)

# is_cycle
1 Renvoie 1 si l'argument est un cycle et 0 sinon.
2 Returns 1 if the argument is a cycle and 0 otherwise.
3 Deveulve 1 si el argumento es un ciclo y 0 si no.
4 Επιστρέφει 1 αν το όρισμα είναι κύκλος και 0 αλλιώς.
0 Lst
-1 is_permu
-2 cycle2perm
-3 cycles2permu
is_cycle([1,0,5])
is_cycle([1,0,5,1])

# is_parallel
1 Renvoie 1 si 2 droites sont parallèles et 0 sinon.
2 Returns 1 if 2 lines are parallel and 0 otherwise.
3 Devuelve 1 si 2 líneas son paralelas y 0 si no.
4 Επιστρέφει 1 αν οι 2 γραμμές είναι παράλληλες και 0 αλλιώς.
0 Line or Plan ,Line or Plan
-1 is_perpendicular
is_parallel(line(0,i),line(1,1+i))
is_parallel(line([2,3,-2],[-1,-1,-1]),plane([-1,-1,-1],[1,2,-3],[0,0,0]))
is_parallel(line([0,0,0],[-1,-1,-1]),line([2,3,-2],[-1,-1,-1]))

# is_permu est_permu
1 Renvoie 1 si l'argument est une permutation de [0,1..s-1] et 0 sinon
2 Returns 1 if the argument is a permutation and 0 otherwise
3 Devuelve 1 si el argumento es una permutación y 0 si no
4 Επιστρέφει 1 αν το όρισμα είναι μια μετάθεση και 0 αλλιώς.
0 Lst
-1 is_cycle
-2 permu2cycles
is_permu([4,2,3,1])
is_permu([4,2,3,1,0])

# is_perpendicular
1 Renvoie 1 si 2 droites sont perpendiculaires
2 Returns 1 if 2 lines are perpendicular
3 Devuelve 1 si dos líneas son perpendiculares
4 Επιστρέφει 1 αν οι 2 γραμμές είναι κάθετες μεταξύ τους.
0 Line or Plan,Line or Plan
-1 is_parallel
-2 is_orthogonal
is_perpendicular(line(0,i),line(1,1+i))
is_perpendicular(line([2,3,-2],[-1,-1,-1]),line([1,0,0],[1,2,8]))
is_perpendicular(plane([0,0,0],[1,2,-3],[1,1,-2]),plane([-1,-1,-1],[1,2,-3],[0,0,0]))
is_perpendicular(line([2,3,-2],[-1,-1,-1]),plane([0,0,0],[1,2,-3],[1,1,-2]))

# euler Phi
1 Indicatrice d'Euler (euler(n)=card({p<n,gcd(n,p)=1})).
2 Euler's function (euler(n)=card({p<n,gcd(n,p)=1})).
3 Función de Euler (eluler(n)=card({p<n,gcd(n,p)=1})).
4 Συνάρτηση του Euler (euler(n)=card({p<n,gcd(n,p)=1})).
8 欧拉 phi 函数（或 φ 函数）  取一个正数 n，则小于等于 n 的正整数中与 n 互质的数值的个数。
0 Intg(n)
-1 gcd
euler(11)
euler(6)

# euler_gamma
1 Constante d'Euler=euler_gamma=limit(sum(1/k,k,1,n)-ln(n),n,+infinity).
2 Euler's constant=euler_gamma=limit(sum(1/k,k,1,n)-ln(n),n,+infinity).
3 Constante de Euler=euler_gamma=limit(sum(1/k,k,1,n)-ln(n),n,+infinity).
4 Σταθερά του Euler=euler_gamma=limit(sum(1/k,k,1,n)-ln(n),n,+infinity).
0 
 evalf(euler_gamma)

# eval evalm
1 Évaluation de l'argument.
2 Evaluates its argument.
3 Evalua su argumento.
4 Αποτίμηση του ορίσματος.
0 Expr
-1 evalf
eval(2*sin(pi))

# evalf approx
1 Évaluation numérique du premier argument (le nombre de digits peut être donné comme second argument)
2 Numerical evaluation of the first argument (we can give the number of digits as second argument)
3 Evaluación numérica del primer argumento (se puede dar el número de dígitos como segundo argumento)
4 Αριθμητική αποτίμηση του ορίσματος.
0 Expr,[Int]
-1 evalb
-2 eval
evalf(2/3)
evalf(2/3,2)
evalf(2*sin(1))
evalf(2*sin(1),40)
evalf(sqrt(2)+pi)
evalf(sqrt(2)+pi,30)

# evalb
1 Évaluation booléenne de l'argument
2 Boolean evaluation of the argument
3 Evaluación booleana del argumento
4 Λογική αποτίμηση του ορίσματος.
0 Expr
-1 evalf
-2 eval
evalb(a==2)
evalb(sqrt(2)+pi>a)

# exp EXP
1 Exponentielle ou Option de la commande convert ou convertir (id trig2exp).
2 Exponential or Option of the convert or convertir command (id trig2exp).
3 Exponencial o Opción del comando convert o convertir (id trig2exp).
4 Εκθετική συνάρτηση ή Επιλογή της εντολής convert ή convertir (id trig2exp).
8 自然指数函数。
0 Expr or Opt
-1 ln
-2 convert
-3 trig2exp
exp(0)
 convert(cos(x),exp)

# factor factoriser
1 Factorisation d'un polynôme.
2 Factorizes a polynomial.
3 Factoriza un polinomio.
4 Παραγοντοποίηση ενός πολυωνύμου.
0 Expr
-1 ifactor
-2 partfrac
-3 normal
factor(x^4-1)
factor(x^4-4,sqrt(2))
factor(x^4+12*x^3+54*x^2+108*x+81)

# Factor
1 Renvoie la factorisation d'un polynôme, sans l'évaluer.
2 Factorizes a polynomial without evaluation.
3 Factoriza un polinomio, sin evaluar.
4 Παραγοντοποίηση ενός πολυωνύμου χωρίς αποτίμηση.
0 Expr
-1 factor
-2 ifactor
-3 normal
Factor(x^4-1)
Factor(x^4+12*x^3+54*x^2+108*x+81)

# factor_xn
1 Mise en facteur dans P de x^n (n=degré du polynôme P).
2 Factorizes x^n in P (n=degree of polynomial P).
3 Factoriza x^n en P (n=grado del polinomio P).
4 Βγάζει παράγοντα το x^n στο P (n=βαθμός του πολυωνύμου P).
0 Poly(P)
-1 ifactor
-2 partfrac
-3 normal
factor_xn(x^4-1)
factor_xn(x^4+12*x^3+54*x^2+108*x+81)

# factorial
1 factorial(n)=n! et factorial(a)=a!= valeur de la fonction Gamma en a+1.
2 factorial(n)=n!. For non-integers,factorial(a)=a! = G(a + 1). This calculates the Gamma function.
3 factorial(n)=n! o a! = G(a + 1).
4 Παραγοντικό: factorial(n)=n! σε factorial(a)=a! = G(a + 1).
8 阶乘。   返回正整数的阶乘。对于非整数，a! = G(a + 1)。 计算伽马函数
0 Intg(n)|| Real(a)
-1 comb
-2 perm
factorial(4)
factorial(1.2)

# fcoeff
1 Renvoie le polynôme décrit par la liste (racine ou pôle, multiplicité).
2 Returns the polynomial describe by the list (root or pole, order).
3 Devuelve el polinomio descrito por la lista (raíz o polo, multiplicidad).
4 Επιστρέφει το πολυώνυμο που περιγράφεται από τη λίστα (ρίζα ή πόλος, πολλαπλότητα).
0 Lst(root||pole,order)
-1 pcoeff
-2 froot
-3 proot
fcoeff([1,2,0,1,3,-1])

# expand fdistrib developper
1 Distribue totalement * et / par rapport à + et -
2 Full distribution of * and / over + and -
3 Distribuye totalmente * y / sobre + y -
4 Ανάπτυγμα του ορίσματος, πλήρης επιμερισμός του * και / στα + και -
8 展开
0 Expr
-1 texpand
-2 normal
-3 simplify
-4 ratnormal
expand((x+y)*(z+1))
expand((a+b+c)/d)
expand((y+x)*(z+y)*(x+z))
expand((x+3)^4)
expand((2*x-2*1)*(x^2-3*x+2)+(x^2-2*x+3)*(2*x-3*1))

# for
1 Boucle: for (init;do_if_true;increment) {action;}
2 Loop: for (init;do_if_true;increment) {action;}
3 Bucle: for (init;do_if_true;increment) {action;}
4 Βρόχος: for (init;do_if_true;increment) {action;}
8 开始执行一个 "for..." 循环结构。
0 
-1 from
-2 to
-3 pour
-4 by
-5 {}
  fact10():={local j,n:=1; for(j:=0;j<=10;j++) n:=n*j;}
  g():={local j,s:=0; for(j:=1;j<=10;j:=j+2) s:=s*j;}
  s:=0;for j from 1 to 10 by 2 do s:=s+j end_for;

# feuille op
1 Renvoie les arguments d'un opérateur sous forme d'une suite.
2 Returns the arguments of an operator as a sequence.
3 Devuelve el argumento de un operador en forma de secuencia.
4 Επιστρέφει τα ορίσματα ενός τελεστή υπό μορφή ακολουθίας.
0 Op or Fnc
-1 sommet
-2 quote
-3 makesuite
feuille(quote(gcd(45,126)))
feuille('gcd(45,126)')
feuille('1+2')[1]
feuille([1,2,3])
feuille(set[1,2,3])

# float2rational exact
1 Convertit l'expression en une expression rationnelle ou réelle.
2 Converts the expression to a rational or real expression.
3 Convierte una expresión en una expresión real o racional.
4 Μετατρέπει μια πραγματική παράσταση σε ρητή.
0 Expr
-1 
-2
float2rational(1.5)
float2rational(1.4141)
float2rational(0.156381102937)

# floor
1 Renvoie le plus grand entier <= à l'argument (partie entière)
2 Returns the greatest integer <= to the argument
3 Devuelve el mayor entero <= que el argumento
4 Επιστρέφει τον μεγαλύτερο ακέραιο <= του ορίσματος (το ακέραιο μέρος)
8 小于或等于值的最大整数。
0 Real or Cplx
-1 round
-2 ceil
-3 iPart
-4 trunc
floor(-2.5)
floor(2.5-4.2*i)

# froot
1 Renvoie la liste des racines et des pôles de F avec leur multiplicité.
2 Returns the list of roots and poles of F with their multiplicity.
3 Devuelve la lista de raíces y polos de F con su multiplicidad.
4 Επιστρέφει την λίστα των ριζών και πόλων του F μαζί με την πολλαπλότητά τους
0 RatPoly(F)
-1 proot
-2 fcoeff
-3 pcoeff
-4 realroot
-5 complexroot
-6 rationalroot
-7 crationalroot
froot((x^5-2*x^4+x^3)/(x-3))
froot((x^5-2*x^4+x^3)/(x-1))

# fsolve
1 Résolution numérique d'une équation ou d'un système.
2 Numerical solution of an equation or a system of equation.
3 Resolución numérica de una ecuación o de un sistema de ecuaciones.
4 Αριθμητική επίλυση μιας εξίσωσης ή ενός συστήματος εξίσωσεων.
8 函数求根（类似于“求解”应用程序）。  所求变量值能使表达式的值最接近零。 使用猜测值作为初始估算值。
0 Expr,Var,[Guess or Interval],[Method]
-1 cfsolve
-2 nSolve
-3 solve
-4 csolve
-5 lpsolve
-6 nlpsolve
fsolve(cos(x)=x,x,-1..1,bisection_solver)
fsolve(cos(x)=x,x,0,newton_solver)
fsolve([x^2+y-2,x+y^2-2],[x,y],[0,0],newtonj_solver)
fsolve([x^2+y-2,x+y^2-2],[x,y])

# cfsolve
1 Résolution numérique sur ℂ d'une équation ou d'un système.
2 Numerical solution of an equation or a system of equation on ℂ.
3 Resolución numérica de una ecuación o de un sistema de ecuaciones en ℂ.
4 Αριθμητική επίλυση μιας εξίσωσης ή ενός συστήματος εξίσωσεων στο ℂ.
8 函数求根（类似于“求解”应用程序）。  所求变量值能使表达式的值最接近零。 使用猜测值作为初始估算值。
0 Expr,Var,[Guess or Interval],[Method]
-1 fsolve
-2 nSolve
-3 csolve
-4 solve
cfsolve(cos(x)=2)
cfsolve([x^2+y+2,x+y^2+2],[x,y])


# nSolve
1 Résolution numérique d'une équation ou d'un système
2 Numerical solution of an equation or a system of equation
3 Resolución numérica de una ecuación o de un sistema de ecuaciones
4 Αριθμητική επίλυση μιας εξίσωσης ή ενός συστήματος
0 Expr,Var,[Guess or Interval],[Method]
-1 solve
-2 fsolve
-3 csolve
nSolve(cos(x)=x,x)
nSolve(cos(x)=x,x=1.3)

# Gamma
1 Calcule les valeurs de la fonction Gamma au point a (Gamma(n+1)=n! pour n entier) si a>0, Gamma(a)=int(e^{-t}*t^{a-1},t=0..inf) et Gamma(a)=Gamma(a+1)/a et Gamma(a,b)=ugamma(a,b).
2 Calculus of Gamma at a point a (Gamma(n+1)=n! for n integer) if a>0, Gamma(a)=int(e^{-t}*t^{a-1},t=0..inf)) and Gamma(a)=Gamma(a+1)/a and Gamma(a,b)=ugamma(a,b).
3 Calcula los valores de la función Gamma en el punto a (Gamma(n+1)=n! para n entero) si a>0, Gamma(a)=int(e^{-t}*t^{a-1},t=0..inf)) y Gamma(a)=Gamma(a+1)/a y Gamma(a,b)=ugamma(a,b).
4 Υπολογισμός τιμών της συνάρτησης Gamma στο σημείο a (Gamma(n+1)=n! για n ακέραιο) αν a>0, Gamma(a)=int(e^{-t}*t^{a-1},t=0..inf))  και Gamma(a)=Gamma(a+1)/a και Gamma(a,b)=ugamma(a,b).
0 Real(a),[Real(b)]
-1 Psi
-2 Beta
-3 ugamma
-4 igamma
Gamma(5)
Gamma(1/2)
gamma(-5.1)
Gamma(-5.1,2.1)

# ugamma
1 Calcule les valeurs de la fonction gamma supérieure au point (a,x):si a et x>=0 ugamma(a,x)=int(e^{-t}*t^{a-1},t=x..inf)),(igamma(a,x)+ugamma(a,x)=Gamma(a))
2 Calculus of ugamma function at a point (a,x):if a and x>=0 ugamma(a,x)=int(e^{-t}*t^{a-1},t=x..inf),(ugamma(a,x)+igamma(a,x)=Gamma(a)).
3 Calcula los valores de la función ugamma en el punto (a,x):si a,x>=0 ugamma(a,x)=int(e^{-t}*t^{a-1},t=..inf),(ugamma(a,x)+igamma(a,x)=Gamma(a)).
4 Υπολογισμός τιμών της συνάρτησης gamma στο σημείο (a,x):αν a,x>0, igamma(a,x)=int(e^{-t}*t^{a-1},t=x..inf),(ugamma(a,x)+igamma(a,x)=Gamma(a)).
0 Real(a),Real(x),[1]
-1 Psi
-2 Beta
-3 Gamma
-4 igamma
ugamma(5.0,2.0)
ugamma(-5.1,2.1)

# igamma
1 Calcule les valeurs de la fonction gamma au point (a,x) : c'est la fonction Gamma incomplète. Si a et x>0, igamma(a,x)=int(e^{-t}*t^{a-1},t=0..x), (igamma(a,x,1)=igamma(a,x)/Gamma(a))
2 Calculus of gamma at a point (a,x). If a and x>0, igamma(a,x)=int(e^{-t}*t^{a-1},t=0..x), (igamma(a,x,1)=igamma(a,x)/Gamma(a)).
3 Calcula los valores de la función gamma en el punto (a,x). Si a,x>0, igamma(a,x)=int(e^{-t}*t^{a-1},t=0..x), (igamma(a,x,1)=igamma(a,x)/Gamma(a)).
4 Υπολογισμός τιμών της συνάρτησης gamma στο σημείο (a,x). αν a,x>0, igamma(a,x)=int(e^{-t}*t^{a-1},t=0..x),(igamma(a,x,1)=igamma(a,x)/Gamma(a)).
0 Real(a),Real(x),[1]
-1 Psi
-2 Beta
-3 Gamma
-3 ugamma
igamma(5.0,2.0)
igamma(-5.1,2.1)
igamma(5.0,2.0,1)

# LambertW
1 Renvoie une solution en t de t*exp(t)=x
2 Returns a solution in t of t*exp(t)=x
0 Real(x),[Intg(n)]
LambertW(1.0)
LambertW(ln(4))
LambertW(-0.1,-1)

# gauss
1 Décompose une forme quadratique en somme/différence de carrés
2 Split a quadratic form as a sum/difference of square
3 Descompone una forma cuadrática como suma/diferencia de cuadrados
4 Διάσπαση μιας τετραγωνικής μορφής σε άθροισμα και διαφορά τετραγώνων
0 Expr,VectVar
-1 cholesky
gauss(x^2+2*a*x*y,[x,y])

# Gcd
1 Renvoie le PGCD de 2 polynômes ou de 2 entiers ou de 2 rationnels sans l'évaluer
2 Returns the greatest common divisor of 2 polynomials or of 2 integers without evaluation
3 Devuelve el máximo común divisor de 2 polinomios o de 2 enteros sin evaluar
4 Επιστρέφει τον μέγιστο κοινό διαιρέτη 2 πολυωνύμων ή 2 ακεραίων χωρίς αποτίμηση
0 (Intg or Poly),(Intg or Poly)
-1 gcd
Gcd(45,75)
Gcd(x^2-2*x+1,x^3-1)
Gcd(x^2-2*x+1,x^2+x-2)

# gcd igcd
1 PGCD de 2 polynômes de plusieurs variables ou de 2 entiers ou de 2 rationnels.
2 Returns the greatest common divisor of 2 polynomials of several variables or of 2 integers or of 2 rationals.
3 Devuelve el máximo común divisor de 2 polinomios de varias variables o de 2 enteros de 2 racionales.
4 Επιστρέφει τον μέγιστο κοινό διαιρέτη 2 πολυωνύμων ή 2 ακεραίων
8 整数或多项式的最大公约数。  最大公约数 (或 多项式)。  返回整数 a 与 b 的最大公约数整数。
0 (Intg(a) or Poly),(Intg(b) or Poly)
-1 lcm
-2 euler
-2 modgcd
-3 ezgcd
-4 psrgcd
-5 heugcd
-6 Gcd
gcd(45,75)
gcd(15/7,50/9)
gcd(x^2-2*x+1,x^3-1)
gcd(t^2-2*t+1,t^2+t-2)
gcd((x^2-1)*(y^2-1)*z^2,x^3*y^3*z+(-(y^3))*z+x^3*z-z)


# gramschmidt
1 Renvoie une base orthonormale de E de base B pour le produit scalaire Sp
2 Returns an orthonormal base of E of base B for the scalar product Sp
3 Devuelve una base ortonormal de E de base B para el producto escalar Sp
4 Επιστρέφει μια ορθοκανονική βάση του Ε βάσης Β για το εσωτερικό γινόμενο Sp
0 Basis(B),ScalarProd(Sp)
-1 
-2
gramschmidt([1,1+x],(p,q)->integrate(p*q,x,-1,1))

# graph2tex
1 Convertit le graphique en fichier LaTeX
2 Converts the graph screen to a LaTeX file
3 Convierte el gráfico en archivo LaTeX
4 Μετατρέπει ένα γράφημα σε αρχείο LaTeX
0 [Str("filename")]
-1 graph3d2tex
graph2tex("graph.tex")
graph2tex()

# graph3d2tex
1 Convertit le graphe 3D en fichier LaTeX
2 Converts the 3d graph screen to a LaTeX file
3 Convierte el gráfico 3D en archivo LaTeX
4 Μετατρέπει ένα 3-Δ γράφημα σε αρχείο LaTeX
0 [Str"filename")]
-1 graph2tex
graph3d2tex("graph.tex")
graph3d2tex()

# hadamard
1 Borne de Hadamard d'une matrice ou produit terme à terme de 2 matrices
2 Hadamard bound of a matrix or element by element multiplication of 2 matrix
3 Realiza el producto término a término de 2 matrices
4 Εκτελεί το γινόμενο 2 πινάκων στοιχείο-στοιχείο
0 Mtrx,Mtrx
-1 .*
-2 *
hadamard([[1,2],[3,4]])
hadamard([[1,2],[3,4]],[[3,4],[5,6]])

# halftan_hyp2exp
1 Transforme les fonctions trigonométriques en tan(x/2) et les fonctions hyperboliques en exp
2 Transforms the trigonometric functions in tan(x/2) and hyperbolic functions in exp
3 Transforma las funciones trigonométricas en tan(x/2) y las funciones hiperbólicas en exp
4 Μετασχηματίζει τις τριγωνομετρικές συναρτήσεις σε tan(x/2) και τις υπερβολικές σε εκθετικά
0 ExprTrig
-1 hyp2exp
-2 halftan
halftan_hyp2exp(sin(x)+sinh(x))

# halt
1 Place un programme en exécution pas-à-pas
2 Put a program in step-by-step debug mode
3 Pone un programa en modo de depuración paso a paso
4 Βάζει ένα πρόγραμμα σε λειτουργία βήμα προς βήμα
0 NULL
-1 
halt()

# has
1 Teste la présence d'une variable dans une expression
2 Checks if a variable is in an expression
3 Comprueba si una variable está en una expresión
4 Ελέγχει αν μια μεταβλητή είναι σε μια παράσταση
0 Expr,Var
-1 lname
-2 lvar
has(x+y,x)
has(x+y,n)

# altitude
1 hauteur(A,B,C) trace la hauteur issue de A du triangle ABC
2 altitude(A,B,C) draws the altitude through A of the triangle ABC
3 altitude(A,B,C) traza la altura en A del triángulo ABC
4 altitude(A,B,C) σχεδιάζει το ύψος ενός τριγώνου ΑΒC που διέρχεται από το Α
0 (Pnt or Cplx),(Pnt or Cplx),(Pnt or Cplx)
-1 perpendicular
-2 orthogonal
-3 orthocenter
-4 common_perpendicular
altitude(-1,1-i,i)

# barycenter
1 barycentre([point1,coeff1],...) trace le barycentre de point1 poids coeff1...
2 barycenter([point1,coeff1],...) draws the barycenter of point1 with weight coeff1...
3 barycenter([point1,coeff1],...) traza el baricentro de point1 con peso coeff1...
4 barycenter([point1,coeff1],...) σχεδιάζει το βαρύκεντρο του point1 με βάρος coeff1...
0 [Pnt,Real],[Pnt,Real],[Pnt,Real]
-1 isobarycenter
-2 midpoint
barycenter([point(-1),1],[point(1+i),2],[point(1-i),1])
barycenter([[point(-1),1],[point(1+i),2],[point(1-i),1]])
barycenter([point(-1),point(1+i),point(1-i)],[1,2,1])

# isobarycenter
1 isobarycentre(A,B,C,...) trace l'isobarycentre des n points A,B,C,...
2 isobarycenter(A,B,C,...) draws the isobarycenter of the n points A,B,C,...
3 isobarycenter(A,B,C,....) traza el isobaricentro de n puntos A,B,C,...
4 isobarycenter(A,B,C) σχεδιάζει το κέντρο βάρους του τριγώνου ABC
0 (Pnt or Cplx),(Pnt or Cplx),(Pnt or Cplx)
-1 barycenter
-2 midpoint
isobarycenter(-1,1-i,i)

# median_line
1 mediane(A,B,C) trace la médiane issue de A du triangle ABC
2 median_line(A,B,C) draws the median-line through A of the triangle ABC
3 median_line(A,B,C) traza la mediana en A del triángulo ABC
4 median_line(A,B,C) σχεδιάζει τη διάμεσο από το Α του τρίγωνο ABC
0 (Pnt or Cplx),(Pnt or Cplx),(Pnt or Cplx)
-1 midpoint
-2 perpen_bisector
median_line(-1,1-i,i)

# perpen_bisector
1 mediatrice(A,B) trace la médiatrice (droite ou plan) du segment AB.
2 perpen_bisector(A,B) draws the bisection (line or plane) of the segment AB.
3 perpen_bisector(A,B) dibuja la mediatriz (línea o plano) del segmento AB
4 perpen_bisector(A,B) σχεδιάζει τη μεσοκάθετο (γραμμή ή επίπεδο) ενός τμήματος ΑΒ.
0 (Pnt or Cplx),(Pnt or Cplx)
-1 midpoint
-2 median_line
perpen_bisector(1-i,i)
perpen_bisector([0,0,0],[5,5,0])

# midpoint
1 milieu(A,B) trace le milieu du segment AB
2 midpoint(A,B) draws the midpoint of the segment AB
3 midpoint(A,B) traza el punto medio del segmento AB
4 midpoint(A,B) σχεδιάζει το μέσο του τμήματος ΑΒ
0 (Pnt or Cplx),(Pnt or Cplx)
-1 median_line
-2 perpen_bisector
midpoint(-2,2i)

# head
1 Désigne le premier élément d'un vecteur ou d'une suite d'éléments ou d'une chaîne.
2 Shows the first element of a vector or a sequence or a string.
3 Muestra el primer elemento de un vector o secuencia o cadena.
4 Είναι το πρώτο στοιχείο ενός διανύσματος ή μιας ακολουθίας στοιχείων ή μιας συμβολοσειράς
0 Vect or Seq or Str
-1 back
-2 tail
-3 mid
-4 left
-5 right
head(1,2,3)
head([1,2,3])
head("bonjour")

# hermite
1 Renvoie le polynôme de Hermite de degré n ou la forme normale de Hermite d'une matrice a coefficients polynomiaux (I,U tels que I*A=U)
2 Returns the Hermite polynomial of degree n or the Hermite normal form for a polynomial coefficients matrix (I,U such that I*A=U)
3 Devuelve el polinómio de Hermite de grado n
4 Επιστρέφει το πολυώνυμο Hermite βαθμού n
0 Intg(n)||Matr(A)
-1 legendre
-2 laguerre
-3 smith
-4 ihermite
-5 ismith
hermite(3)
 n:=5; a:=ranm(n,n) % 17; l,u:=hermite(x-a);normal(l*(x-a)-u);

# smith
1 Renvoie la forme normale de Smith d'une matrice a coefficients polynomiaux (U,D,V tels que U*A*V=D)
2 Returns the Smith normal form of a polynomial coefficients matrix (U,D,V tels que U*A*V=D)
0 Matr(A)
-1 hermite
-2 ismith
-3 ihermite
 n:=10; a:=ranm(n,n) % 17; u,b,v:=smith(x-a);normal(u*(x-a)*v-b); diag(b);
 GF(3,5,g); n:=3; a:=ranm(n,n,g); u,b,v:=smith(x-a);normal(u*(x-a)*v-b); diag(b);

# grad
1 Renvoie le gradient de l'expression Xpr
2 Returns the gradient of the expression Xpr
3 Devuelve el gradiente de Xpr
4 Επιστρέφει την κλίση της Xpr
0 Expr(Xpr),LstVar
-1 hessian
grad(2*x^2*y-x*z^3,[x,y,z])

# hessian
1 Renvoie la hessienne de l'expression Xpr
2 Returns the hessian of the expression Xpr
3 Devuelve el hessiano de Xpr
4 Επιστρέφει τον Hessian-ό πίνακα της Xpr
0 Expr(Xpr),LstVar
-1 grad
hessian(2*x^2*y-x*z,[x,y,z])

# hilbert
1 Renvoie la n-ième matrice de Hilbert : Hjk=1/(j+k+1) j,k=1..n
2 Returns the order n Hilbert matrix : Hjk=1/(j+k+1) j,k=1..n
3 Devuelve la matriz n-ésima de Hilbert: Hjk=1/(j+k+1) j,k=1..n
4 Επιστρέφει τον n-στής τάξης πίνακα Hilbert : Hjk=1/(j+k+1) j,k=1..n
0 Intg(n)
-1 
hilbert(4)

# homothety
1 homothetie(C,k,A)=point A1 tel que vect(C,A1)=k*vect(C,A) i.e en 2d est la similitude de centre C, de rapport abs(k) et d'angle arg(k).
2 homothety(C,k,A)=point A1 such as vect(C,A1)=k*vect(C,A) i.e in 2d it is the similarity center C, coeff abs(k) and angle arg(k).
3 homothety(C,k,A)=punto A1 tal que vect(C,A1)=k*vect(C,A) es decir, en 2o es la semejanza de centro C, de coeficiente abs(k) y de ángulo arg(k).
4 homothety(C,k,A)=σημείο Α1 τέτοιο ώστε vect(C,A1)=k*vect(C,A) π.χ. σε 2-Δ είναι το κέντρο ομοιότητας C, αναφορικά με abs(k) και γωνίας arg(k).
0 Pnt(C),Real(k),Pnt(A)
-1 similarity
-2 inversion
homothety(1+i,1/3,i)
homothety(point(1,1,1),1/3,point(0,1,0))
 h:=homothety(1+i,1/3);h(i)
 h:=homothety(point(1,1,1),1/3);h(point(0,1,0))

# inversion
1 inversion(C,k,A)=point(A1) avec A1 sur la droite(C,A) et mes_alg(CA1*CA)=k
2 inversion(C,k,A)=point A1 such as A1 on line(C,A) and mes_alg(CA1*CA)=k
3 inversion(C,k,A)=punto A1 tal que A1 en line(C,A) y mes_alg(CA1*CA)=k
4 inversion(C,k,A)=σημείο(A1) με A1 στην ευθεία (C,A) και mes_alg(CA1*CA)=k
0 Pnt(C),Real(k),Pnt(A)
-1 homothety
inversion(i,1/2,1+i)
inversion([1,1,1],-1/2,point(-1,-1,-1))
 inver:=inversion(i,1/2);inver(i)
 inver:=inversion([1,1,1],-1/2);inver(point(-1,-1,-1))

# hyp2exp
1 Transforme les fonctions hyperboliques en exponentielle
2 Transforms the hyperbolic functions with the exponential function
3 Transforma las funciones hiperbólicas en exponenciales
4 Μετασχηματίζει τις υπερβολικές συναρτήσεις σε εκθετικές
0 ExprHyperb
-1 halftan_hyp2exp
hyp2exp(cosh(x))

# hyperbola
1 hyperbole(F1,F2,M)=hyperbole de foyers F1,F2 passant par M ou (|MF1-MF2|=2*a geo2d) et hyperbole(p(x,y)) dessine la conique si deg(p)=2.
2 hyperbola(F1,F2,M)=hyperbole focus F1,F2 through M or (|MF1-MF2|=2*a geo2d) and hyperbola(p(x,y)) draws the conic if deg(p)=2.
3 hyperbola(F1,F2,M)=hipérbola de focos F1,F2 y pasa por M (o |MF1-MF2|=2*a geo2d) y hyperbola(p(x,y))=conic si deg(p)=2.
4 hyperbola(F1,F2,M)=υπερβολή με εστίες F1,F2 διερχόμενη από το M ή (|MF1-MF2|=2*a γεω2Δ) και hyperbola(p(x,y)) σχεδιάζει την κωνική αν deg(p)=2.
0 Focus(F1),Focus(F2),(Pnt(M) or Real(a))
-1 ellipse
-2 parabola
hyperbola(-1,1,point(1+i))
hyperbola(-1,1,sqrt(5)-1)
hyperbola(point(-1,0,0),point(1,0,0),point(1,1,1))
hyperbola(x^2-y^2+y+2)

# i
1 Racine carrée de -1
2 Square root of -1
3 Raíz cuadrada de -1
4 Τετραγωνική ρίζα του -1
0 
-1 pi
-2 e
 i*i

# e
1 exp(1)
2 exp(1)
3 exp(1)
4 exp(1)
0 
-1 i
-2 pi
 evalf(e)

# pi Pi
1 Le nombre pi
2 pi
3 El número pi
4 Ο αριθμός π
0 
-1 e
-2 i
 pi/4
 Pi/4
 evalf(pi)
 evalf(Pi)

# ibasis
1 Base d'une intersection de deux espaces vectoriels
2 Basis of the intersection of two vector spaces
3 Base de la intersección de dos espacios vectoriales
4 Βάση της τομής 2 διανυσματικών χώρων
0 Lst(Vect,..,Vect),Lst(Vect,..,Vect)
-1 basis
ibasis([[1,0,0],[0,1,0]],[[1,1,1],[0,0,1]])

# infinity
1 Infini non signé
2 Unsigned infinity
3 Infinito, sin signo
4 Απρόσημο άπειρο
0 
-1 +infinity
-2 -infinity

# +infinity inf
1 Plus infini
2 Plus infinity
3 Mas infinito
4 Συν άπειρο
0 
-1 infinity
-2 -infinity

# -infinity
1 Moins infini
2 Minus infinity
3 Menos infinito
4 Πλην άπειρο
0 
-1 infinity
-2 +infinity
-3 inf

# ibpdv
1 Intégration par parties de f(x)=u(x)*v'(x) avec f(x) comme 1er argument et v(x) (ou 0 pour intégrer directement) comme 2ème argument. On peut rajouter comme argument la variable et aussi les bornes a et b pour une intégrale définie.
2 Integration by parts of f(x)=u(x)*v'(x) with f(x) as 1st argument and v(x) (or 0) as 2nd argument. You can specify a variable of integration and also the calculus of the integrate (bounds a and b).
3 Integración por partes de f(x)=u(x)*v'(x) con f(x) como 1º argumento y v(x) (o 0) como 2º argumento. Hay que especificar la variable de integración y cálculo de la integral (entre a y b).
4 Ολοκλήρωση κατά παράγοντες του f(x)=u(x)*v'(x) με το f(x) ως 1ο όρισμα και v(x) (or 0) ως 2ο όρισμα (με όρια a και b).
0 Expr(f(x)),Expr(v(x)),[Var(x)],[Real(a)],[Real(b)]
-1 ibpu
-2 int
ibpdv(ln(x),x)
ibpdv(ln(x),x,x,1,3)
ibpdv(x*ln(x),x^2/2)
ibpdv([x*ln(x),-1],0)
ibpdv(ibpdv(ln(x),x,x,2,3),0,x,2,3)

# ibpu
1 Intégration par parties de f(x)=u(x)*v'(x) avec f(x) comme 1er argument et u(x) (ou 0 pour intégrer directement) comme 2ème argument. On peut rajouter comme argument la variable et aussi les bornes a et b pour une intégrale définie.
2 Integration by parts of f(x)=u(x)*v'(x) with f(x) as 1st argument and u(x) (or 0) as 2nd argument. You can specify a variable of integration and also the calculus of the integrate (bounds a and b).
3 Integración por partes con f(x)=u(x)*v'(x) con f(x) como 1º argumento y u(x) (o 0) como 2º argumento. Hay que especificar la variable de integración y cálculo de la integral (entre a y b).
4 Ολοκλήρωση κατά παράγοντες του f(x)=u(x)*v'(x) με το f(x) ως 1ο όρισμα και u(x) (or 0) ως 2ο όρισμα (με όρια a και b).
0 Expr(f(x)),Expr(u(x)),[Var(x)],[Real(a)],[Real(b)]
-1 ibpdv
-2 int
ibpu(ln(x),ln(x))
ibpu(ln(x),ln(x),x,1,3)
ibpu(x*ln(x),ln(x))
ibpu([x*ln(x),-1],0)
ibpu(ibpu(ln(x),ln(x),x,2,3),0,x,2,3)

# ichinrem ichrem
1 Restes chinois pour des entiers.
2 Chinese remainders for integers.
3 Restos chinos de enteros.
4 Κινέζικο υπόλοιπο για τους ακεραίους.
8 整数的中国余数。 取 [a, p] 和 [b, q] 两a列，返回一个双整数列 [r, n]，使 x=r mod n。在该例中，x 有 x=a mod p，并且 x=b mod q； 并有 n=p*q。
0 LstIntg(a,p),LstIntg(b,q)
-1 gcd
-2 fracmod
-3 chinrem
-4 chrem
ichinrem([2,7],[3,5])
ichinrem([2%7,3%5])
ichinrem([2%7,3%5,1%9])
ichinrem([(x+1)%2,(x+2)%3,(3*x-1)%5])

# if
1 Test: if (condition){ true_action; } else { false_action; }
2 Test: if (condition){ true_action; } else { false_action; }
3 Test: if (condition){ true_action; } else { false_action; }
4 Τεστ: if (condition){ true_action; } else { false_action; }
8 开始执行 "if...then...end" 或 "if...then...else...end" 分支结构。
0 
-1 switch
-2 for
-3 local
-4 si
-5 {}
-6 ->
 if (x<0) print("x negatif");
 x:=1;if (x>0) {x:=x+1; print("x est strictement plus grand que 1");x}
 if x<0 then print("x negatif"); end_if;
 x:=1;if x<0 then print("x negatif"); else print("x positif"); end_if;
 if (j<0) cos(j); else cosh(j);
 x:=0.1;if (x>0) {x:=x+1; print("x est strictement plus grand que 1");} else {x:=x-1;print("x est plus petit ou égal à -1");};x

# ifactor factoriser_entier
1 Factorisation d'un entier en facteurs premiers.
2 Factorization of an integer into prime factors.
3 Factorización de un entero en factores primos.
4 Παραγοντοποίηση ενός ακεραίου σε πρώτους παράγοντες.
8 素数分解。  以乘积的形式返回整数 a 的素数分解。 是否可与 STO 一起使用？
0 Intg(a)
-1 factor
-2 ecm_factor
ifactor(50)
ifactor(123456789)

# ecm_factor
1 Factorisation d'un entier n par la methode des courbes elliptiques, B1 parametre optionnel de friabilite
2 Factorization of integer n by the Elliptic Curve Method algorithm, B1 smoothness optional parameter
0 Intg(a),[Intg(B1)]
ecm_factor(1000000000000000003000000000000000000000000000000000031000000000000000093)

# ilaplace invlaplace
1 Transformée de Laplace inverse d'une fraction rationnelle
2 Inverse Laplace transform of a rational fraction
3 Anti-Transformada de Laplace de una fracción racional
4 Αντίστροφος μετασχηματισμός Laplace μιας ρητής παράστασης
0 Expr,[Var],[IlapVar]
-1 laplace
-2 ztrans
-3 invztrans
-4 Heaviside
ilaplace(1/(x^2+1)^2)
ilaplace(s/(s^4-1),s,x)
ilaplace(exp(-s)/s,s,x)

# im imag
1 Partie imaginaire d'un nombre complexe
2 Returns the imaginary part of a complex number
3 Devuelve la parte imaginaria de un número complejo
4 Επιστρέφει το φανταστικό μέρος ενός μιγαδικού αριθμού
0 Cplx
-1 re
-2 conj
im(1+2*i)
im((1+2*i)^2)
im([1+2*i,(1+2*i)^2])

# image
1 Image d'une application linéaire de matrice M
2 Image of a linear application of matrix M
3 Imagen de una aplicación lineal de matriz M
4 Εικόνα μιας γραμμικής εφαρμογής ενός πίνακα Μ
0 Mtrx(M)
-1 ker
-2 rref
image([[1,2],[3,6]])
image([[1,2,3],[1,3,6],[2,5,9]])

# in
1 Itération for...end_for dans un ensemble ou une liste ou une plage de valeurs
2 Iteration for ...end_for in a set or a list
3 Iteración for ...end_for en uno conjunto o una lista.
4 Επανάληψη for ...end_for σε ένα σύνολο ή μια λίστα.
0 
-1 for
-2 set[]
 s:=0;for k in 1..5 do s:=s+k; end_for;
 s:=0;for k in %{ 1,5,7 %} do s:=s+k; end_for;
 for k in %{2,1,3%} do print(k); end_for;
 pour k in  %{2,1,3%} faire print(k);fpour;
 P:=[1,3,7];L:=NULL;for k in P do L:=L,k^2 end_for; 
 P:=[1,3,7];L:=NULL;pour k in P faire L:=L,k^2; fpour;


# incircle
1 inscrit(A,B,C) trace le cercle inscrit au triangle ABC.
2 incircle(A,B,C) draws the incircle of the ABC triangle.
3 incircle(A,B,C) dibuja la circunferencia inscrita en el triángulo ABC.
4 incircle(A,B,C) σχεδιάζει τον εγγεγραμμένο κύκλο στο τρίγωνο ΑΒC.
0 (Pnt or Cplx),(Pnt or Cplx),(Pnt or Cplx)
-1 excircle
-2 circumcircle
incircle(0,1,1+i)

# excircle
1 exinscrit(A,B,C) trace le cercle exinscrit au triangle ABC relatif à A.
2 excircle(A,B,C) draws the A-excircle of the ABC triangle.
3 excircle(A,B,C) dibuja la circunferencia exinscrita relativa al punto A.
4 excircle(A,B,C) σχεδιάζει τον παραγεγραμμένο κύκλο στο τριγώνου ABC αναφορικά με το σημείο Α.
0 (Pnt or Cplx),(Pnt or Cplx),(Pnt or Cplx)
-1 incircle
-2 circumcircle
excircle(0,1,1+i)

# int integrate integrer
1 Primitive (la variable d'intégration est le 2ème argument) ou valeur de l'intégrale (bornes a et b).
2 Indefinite integral, you can specify a variable of integration or the calculus of the integrate (bounds a and b).
3 Integral indefinida, hay que especificar la variable de integración (entre a y b).
4 Αόριστο ολοκλήρωμα, (η μεταβλητή ολοκλήρωσης είναι το 2ο όρισμα) ή η τιμή του ολοκληρώματος (με όρια a και b).
8 积分。返回表达式的积分，其中变量从 a 取值到 b。
0 Expr,[Var(x)],[Real(a)],[Real(b)]
-1 Int
-2 diff
-3 plotarea
-4 romberg
-5 gaussquad
int(1/x)
int(1/(4+t^2),t)
int(1/(1-x^4),x,2,3)

# inter
1 Avec 2 arguments (resp 3 arguments) donne l'intersection de 2 courbes ou surfaces sous la forme d'un vecteur (resp d'un point proche du point donné en 3iéme argument).
2 With 2 arguments (resp 3 arguments) gives the intersection of 2 curves or surfaces as a vector (resp a point close to the point given as third argument).
3 Devuelve la intersección de 2 cruvas o superficies como un vector o un punto cercano de al tercero argumentole argumento.
4 Δίνει την τομή 2 καμπυλών ή επιφανειών υπό μορφή διανύσματος.
8 (点列表)
0 Curve,Curve,[Pnt]
-1 intersect
-2 head
inter(line(i,1-i),circle(0,1))
inter(line(i,1-i),circle(0,1),point(-i))
inter(plane(x=y+3),cone([0,0,0],[0,0,1],pi/6))
inter(plane(x=y+3),cone([0,0,0],[0,0,1],pi/6))
inter(line(i,1-i),circle(0,1))[0]


# single_inter line_inter
1 Donne l'une des intersections de 2 courbes ou surfaces (ou l'intersection le plus près de A ou qui n'est pas dans L).
2 Gives one of the intersections of 2 curves or surfaces (or the intersection near A or not in L).
3 Devuelve una entre las interseccións de 2 cruvas o superficies.
4 Δίνει μια εκ των τομών 2 καμπύλων ή επιφανειών.
0 Curve,Curve,[Pnt(A)||LstPnt(L)]
-1 intersect
-2 head
single_inter(line(i,1-i),line(0,1))
single_inter(line(i,1-i),circle(0,1))
single_inter(line(i,1+2*i),circle(0,1),[point(i)])
single_inter(line(-1-i,1+2*i),circle(0,1),point(-1))
single_inter(circle(1,sqrt(2)),circle(0,1))
single_inter(plane(x=y),plane(y=z))
single_inter(line(x=y+1,y=2*z),plane(y=z))

# iquo intDiv
1 Quotient euclidien de 2 entiers ou de 2 entiers de Gauss.
2 Euclidean quotient of 2 integers.
3 Cociente euclídeo de 2 enteros.
4 Ευκλείδιο πηλίκο 2 ακεραίων
8  整数的欧几里德商。  整数 a 除以整数 b 时，返回整数商。
0 Intg(a),Intg(b)
-1 irem
-2 smod
-3 quo
iquo(125,15)
iquo(125,41)
iquo(-7,3)
iquo(25+12*i,5+7*i)

# /%
1 Quotient euclidien de 2 entiers ou de 2 entiers de Gauss : c'est la version infixée de iquo.
2 Euclidean quotient of 2 integers : it is the infixed version of iquo.
3 Cociente euclídeo de 2 enteros : es la versión infija de iquo.
4 Ευκλείδιο πηλίκο 2 ακεραίων : εντεθειμένη μορφή του iquo.
8  整数的欧几里德商。  整数 a 除以整数 b 时，返回整数商。 a/%b
-4 mod
irem(125,15)
irem(125,41)
irem(-7,3)
irem(25+12*i,5+7*i)

# %/
1 Reste euclidien de 2 entiers ou de 2 entiers de Gauss : c'est la version infixée de irem).
2 Euclidean remainder of 2 integer : it is the infixed version of irem.
3 Resto euclídeo de 2 enteros : es la versión infija de irem.
4 Ευκλείδιο υπόλοιπο 2 ακεραίων : εντεθειμένη μορφή του irem.
8 整数的欧几里德余数。  整数 a 除以整数 b 时，返回整数余数 : 
0 Intg(a),Intg(b)
-1 irem
-2 smod
-3 quo
iquo(125,15)
iquo(125,41)
iquo(-7,3)
iquo(25+12*i,5+7*i)

# div
1 Quotient euclidien de 2 entiers ou de 2 entiers de Gauss (opérateur infixé)
2 Euclidean quotient of 2 integers (infixed operator).
3 Cociente euclídeo de 2 enteros (operador infijo).
4 Το ευκλείδειο πηλίκο 2 ακεραίων ή 2 ακεραίων του Gauss (εντεθειμένος τελεστής).
0 Intg,Intg
-1 iquo
-2 mod
 125 div 15
 125 div 41
 -7 div 3
 (25+12*i) div (5+7*i)

# iquorem divmod
1 Quotient et reste euclidien de 2 entiers ou de 2 entiers de Gauss.
2 Euclidean quotient and remainder of 2 integers.
3 Cociente euclídeo y resto de 2 enteros.
4 Ευκλείδιο πηλίκο και υπόλοιπο 2 ακεραίων
8 整数的欧几里德商/余数。  整数 a 除以整数 b 时，返回整数商及余数
0 Intg(a),Intg(b)
-1 irem
-2 iquo
-3 quorem
iquorem(125,15)
iquorem(125,41)
iquorem(25+12*i,5+7*i)

# irem remain
1 Reste euclidien de 2 entiers ou de 2 entiers de Gauss.
2 Euclidean remainder of 2 integers.
3 Resto euclídeo de 2 enteros.
4 Ευκλείδιο υπόλοιπο 2 ακεραίων
8 整数的欧几里德余数。  整数 a 除以整数 b 时，返回整数余数
0 Intg(a),Intg(b)
-1 iquo
-2 smod
-3 rem
-4 mod
irem(125,15)
irem(125,41)
irem(-7,3)
irem(25+12*i,5+7*i)

# %/
1 Reste euclidien de 2 entiers ou de 2 entiers de Gauss : c'est la version infixée de irem).
2 Euclidean remainder of 2 integer : it is the infixed version of irem.
3 Resto euclídeo de 2 enteros : es la versión infija de irem.
4 Ευκλείδιο υπόλοιπο 2 ακεραίων : εντεθειμένη μορφή του irem.
8 整数的欧几里德余数。  整数 a 除以整数 b 时，返回整数余数 : a%/b
0 Intg(a),Intg(b)
-1 iquo
-2 smod
-3 rem
-4 mod
 125 %/ 15
 125 %/ 41
 -7 %/ 3
 25+12*i %/ 5+7*i


# is_pseudoprime
1 Test de pseudo-primalité (0 non premier, 1 probablement premier, 2 premier)
2 Pseudo-prime test (0 not prime, 1 probably prime, 2 prime)
3 Test de pseudo-primalidad (0 no primo, 1 probablemente primo, 2 primo)
4 Έλεγχος ψευτο-πρώτου αριθμού (0 όχι πρώτος, 1 πιθανόν πρώτος, 2 πρώτος)
0 Intg
-1 prevprime
-2 nextprime
-3 is_prime
is_pseudoprime(1999)
is_pseudoprime(9856989898997)
is_pseudoprime(9856989898997789789)

# is_prime
1 Test mixte, "p-1" de Pocklington [1] ou APRCL [2] (renvoie les coefficients prouvant la primalité, 1 ou 0)
2 Mixed or "p-1" Pocklington [1] or APRCL test [2] (returns the coefficients for a proof of primality, 1 or 0)
3 Test mixed/"p-1" Pocklington [1]/ APRCL [2] (devuelve los coeficientes demostrando la primalidad, 1 o 0)
4 Τεστ mixed/"p-1" του Pocklington [1] /APRCL [2] (επιστρέφει τους συντελεστές για μια απόδειξη περί πρώτου, 1 or 0)
0 Intg,[1 || 2]
-1 prevprime
-2 nextprime
-3 is_pseudoprime
-4 isprime
is_prime(1999)
is_prime(9856989898997)
is_prime(9856989898997789789)
is_prime(9856989898997789789,1)

# isprime isPrime
1 Test de primalité (=true ou false).
2 Primality testing (=true or false).
3 Test de primalidad (=true o false).
4 Πιθανοτικός έλεγχος πρώτου (= true ή false).
8 素数测试。  如果整数 a 为素数，则返回 1； 否则，返回 0。
0 Intg(a)
-1 prevprime
-2 nextprime
-3 is_prime
-4 is_pseudoprime
isprime(1999)
isprime(9856989898997)
isprime(9856989898997789789)

# isom
1 Recherche des éléments propres d'une isométrie 2-d ou 3-d
2 Find elements of a 2-d or 3-d isometry
3 Encuentra los elementos de un isometría 2-d y 3-d
4 Εύρεση στοιχείων μιας 2-Δ ή 3-Δ ισομετρίας
0 Mtrx
-1 mkisom
isom([[0,1],[1,0]])

# lgcd
1 PGCD d'une liste de polynômes ou d'entiers
2 Returns the greatest common divisor of a list of polynomials or of integers
3 Devuelve el máximo común divisor de una lista de polinomios o de enteros
4 Επιστρέφει τον μέγιστο κοινό διαιρέτη μιας λίστας πολυωνύμων ή ακεραίων
0 Seq or Lst
-1 gcd
-2 lcm
-3 euler
-4 content
lgcd([45,75,20,15])
lgcd([x^2-2*x+1,x^3-1,x-1])
lgcd(x^2-2*x+1,x^3-1,x-1)

# jacobi_symbol
1 Symbole de Jacobi
2 Jacobi symbol
3 Símbolo de Jacobi
4 Σύμβολο Jacobi
0 Intg,Intg
-1 legendre_symbol
jacobi_symbol(132,5)
jacobi_symbol(132,25)

# jordan
1 Renvoie la liste formée par la matrice de passage et la forme de Jordan d'une matrice.
2 Returns the list made by the matrix of passage and the Jordan form of a matrix.
3 Devuelve la lista formada por la matriz de pasaje y la forma de Jordan de una matriz.
4 Επιστρέφει τη λίστα που ορίζεται από τον πίνακα μετάβασης και τη μορφή Jordan ενός πίνακα.
8 显示两个阵列的列表。 第一个矩阵包含特征向量，第二个矩阵包含特征值。
0 Mtrx
-1 egv
-2 egvl
-3 rat_jordan
jordan([[0,2],[1,0]])
jordan([[-2,-2,1],[-2,1,-2],[1,-2,-2]])
jordan([[1,1,-1,2,-1],[2,0,1,-4,-1],[0,1,1,1,1],[0,1,2,0,1],[0,0,-3,3,-1]])

# rat_jordan
1 Renvoie la liste formée par la matrice de passage et la forme de Jordan rationnelle d'une matrice.
2 Returns the list made by the matrix of passage and the rational Jordan form of a matrix.
3 Devuelve la lista formada por la matriz de pasaje y la forma de Jordan racional de una matriz.
4 Επιστρέφει την λίστα που ορίζεται από τον πίνακα μετάβασης και τη ρητή μορφή Jordan ενός πίνακα.
0 Mtrx
-1 egv
-2 egvl
-3 jordan
-4 companion
rat_jordan([[0,2],[1,0]])
rat_jordan([[-2,-2,1],[-2,1,-2],[1,-2,-2]])
rat_jordan([[1,1,-1,2,-1],[2,0,1,-4,-1],[0,1,1,1,1],[0,1,2,0,1],[0,0,-3,3,-1]])

# ker kernel nullspace
1 Noyau d'une application linéaire de matrice M
2 Kernel of a linear application of matrix M
3 Núcleo de una aplicación lineal de matriz M
4 Πυρήνας μιας γραμμικής εφαρμογής με πίνακα Μ
0 Mtrx
-1 image
-2 rref
-3 Nullspace
ker([[1,2],[3,6]])
ker([[1,2,3],[1,3,6],[2,5,9]])

# Nullspace
1 Forme inerte de nullspace pour calculs modulaires (irem/mod)
2 Inert form of nullspace for modular computation (irem/mod)
3 Forma inerta de nullspace para cálculos modulares (irem/mod)
4 Αδρανής μορφή του μηδενόχωρου για υπολογισμούς modulo (irem/mod)
0 Mtrx
-1 image
-2 rref
-3 nullspace
Nullspace([[1,2],[3,6]])
Nullspace([[1,2,3],[1,3,6],[2,5,9]])

# Resultant
1 Forme inerte de résultant pour calculs modulaires (irem/mod)
2 Inert form of resultant for modular computation (irem/mod)
3 Forma inerta de resultante para cálculos modulares (irem/mod)
4 Αδρανής μορφή της απαλείφουσας για υπολογισμούς modulo (irem/mod)
0 Poly,Poly,Var
-1 resultant
Resultant(x^3+x+1,x^2-x-2,x)

# kill tuer
1 Arrête l'exécution d'un programme en mode pas-à-pas (avec debug)
2 Stop step-by-step execution of a program (with debug)
3 Para la ejecución paso a paso de un programa
4 Διακοπή της εκτέλεσης ενός προγράμματος σε λειτουργία βήμα προς βήμα.
0 NULL
-1 
kill()

# lagrange interp
1 Renvoie le polynôme de degré n-1 tel que P(xk)=yk=f(x_k) k=0..n-1 ou la liste des differences divisees si le dernier argument est lagrange
2 Returns the polynomial of degree n-1 such that P(xk)=yk=f(x_k) k=0..n-1 or the list of divided differences if the last argument is lagrange
3 Devuelve el polinomio de grado n-1 tal que P(xk)=yk=f(x_k) k=0..n-1
4 Επιστρέφει το πολυώνυμο παρεμβολής βαθμού n-1 έτσι ώστε P(xk)=yk=f(x_k) k=0..n-1
0 (Lst_xk,Lst_yk)||Mtrx_2*n||(Lst_xk,Fnc(f)),[Var||[]||lagrange]
-1 spline
lagrange([1,3,4],[0,1,2])
lagrange([1,3,4],[0,1,2],t)
 f(x):=exp(-x); lagrange([1,3,4],f)
lagrange([[1,3,4],[0,1,2]])
lagrange([1,3,4],[0,1,2],[])
 X:=[1,3,4]; divdiff:=lagrange(X,[0,1,2],lagrange); horner(divdiff,X,5);
lagrange([[1,3,4],[0,1,2]],y)
lagrange([-1,0,1],[1/e-1,0,e-1])
 f(x):=exp(x)-1;lagrange([-1,0,1],f)
lagrange([0,1,2],[1,exp(1),exp(2)],lagrange)
lagrange([0,1,2],exp,lagrange)

# laguerre
1 Renvoie le n-ième polynôme de Laguerre
2 Returns the n-th Laguerre polynomial
3 Devuelve el n-ésimo polinomio de Laguerre
4 Επιστρέφει το n-στο πολυώνυμο Laguerre
0 Intg(n)
-1 legendre
-2 hermite
laguerre(4)

# laplace
1 Transformée de Laplace
2 Laplace transform
3 Transformada de Laplace
4 Μετασχηματισμός Laplace
0 Expr,[Var],[LapVar]
-1 invlaplace
-2 ztrans
-3 invztrans
-4 Heaviside
laplace(exp(x)*sin(x))
laplace(sin(x)^2,x,s)
laplace(Heaviside(x-1),x,s)

# laplacian
1 Calcule le laplacien de l'expression Xpr par rapport à la liste de variables et laplacian(n) pour n entier ou flottant entier renvoie la matrice de taille n du laplacien discret en dimension 1. 
2 Returns the Laplacian of the expression Xpr with respect to the list of variables and laplacian(n) for n  integer or float integer returns the matrix of size n of the discret laplacian en dimension 1.
3 Calcula el laplaciano de Xpr con respecto a la lista de variables
4 Επιστρέφει την Λαπλασιανή της Xpr αναφορικά με μια λίστα μεταβλητών
0 Expr(Xpr),LstVar
-1 
-2
laplacian(exp(z)*cos(x*y),[x,y,z])
laplacian(3)
laplacian(3.0)

# lcm
1 PPCM de 2 polynômes de plusieurs variables ou de 2 entiers ou de 2 rationnels.
2 Returns the lowest common multiple of 2 polynomials of several variables or of 2 integers or of 2 rationals.
3 Devuelve el mínimo común múltiplo de 2 polinomios de n variables o de 2 enteros o de 2 racionales.
4 Επιστρέφει τον ΕΚΠ 2 ακεραίων
0 (Intg or Poly),(Intg or Poly)
-1 gcd
lcm(6,4)
lcm(1251,123)
lcm(5/7,50/9)
lcm(x^2-2*x+1,x^3-1)
lcm(t^2-2*t+1,t^2+t-2)
lcm((x^2-1)*(y^2-1)*z^2,x^3*y^3*z+(-(y^3))*z+x^3*z-z)

# legendre
1 Renvoie le n-ième polynôme de Legendre
2 Returns the n-th Legendre polynomial
3 Devuelve el n-ésimo polinomio de Legendre
4 Επιστρέφει το n-στο πολυώνυμο Legendre
0 Intg(n)
-1 
legendre(4)

# locus
1 lieu(M,A) trace le lieu de M (ou lieu(d,A) trace l'enveloppe de d) quand A:=element(C) (C est une courbe). Les instructions des exemples ci-après, doivent être écrites dans un niveau de géométrie sur des lignes différentes.
2 locus(M,A) draws the locus of M (or locus(d,A) draws the envelope of d) when A:=element(C) (C is a curve). The example instructions below, must be written in a geometric level on different lines.
3 locus(M,A) traza el lugar de M (o locus(d,A) traza la envoltura de d) cuando A:=element(C) (C es una curva). Las instrucciones de los ejemplos abajo, deben ser escritas en un nivel de geometría sobre distintas líneas.
4 locus(M,A) σχεδιάζει τον γεωμετρικό τόπο του M (ή locus(d,A) σχεδιάζει τη περιβάλλουσα του d) όταν A:=element(C) (C είναι μια καμπύλη)
0 Pnt,Elem
-1 envelope
-2 trace
 A:=element(circle(i,1+i));M:=homothety(0,2,A);locus(M,A)
 A:=element(line(x=0));d:=perpen_bisector(1,A);locus(d,A)

# lin lineariser
1 Linéarisation des exponentielles
2 Linearization of exponentials
3 Linealización de exponenciales
4 Γραμμικοποίηση των εκθετικών
0 Expr
-1 tlin
-2 texpand
lin(exp(x)^n)
lin((exp(x)^3+exp(x))^2)

# linsolve resoudre_systeme_lineaire
1 Résolution d'un système d'équations linéaires.
2 Linear equations system solver.
3 Resolución de un sistema de ecuaciones lineales.
4 Επιλύει σύστημα γραμμικών εξισώσεων.
0 LstLinEq,LstVar
-1 solve
-2 proot
-3 simult
-4 gaussjord
-5 pivot
-6 ref
-7 conjugate_gradient
linsolve([x+y+z=1,x-y=2,2*x-z=3],[x,y,z])
linsolve([m*x+y=a,x+m*y=b],[x,y])
linsolve([x+y-z-1,x-y+1,x-y-z-1]%2,[x,y,z])
linsolve([[3,4],[1,2]],[0,1])
 p,l,u:=lu([[3,4],[1,2]]); linsolve(p,l,u,[0,1]) 
linsolve([2*x+y+z=1,x+y+2*z=1,x+2*y+z=4],[x,y,z])
linsolve([[2,1,1],[1,1,2],[1,2,1]],[1,1,4])
 p,l,u:=lu([[2,1,1],[1,1,2],[1,2,1]]);linsolve(p,l,u,[1,1,4])
 a:=[[100,2],[2,100]];linsolve(evalf(a),[0,1]);

# thickness epaisseur
1 Option (compatibilité Maple) d'une commande graphique pour définir l'épaisseur des traits.
2 Option (Maple compatibility) of a graphic command to define the thickness of lines.
3 Opción (compatibilidad Maple) de una instrucción gráfica para definir el grosor de las líneas.
4 Επιλογή (συμβατή με Maple) μιας εντολής γραφικών για τον ορισμό του πάχους των γραμμών.
0 Opt
-1 line_width
 segment(0,point(1,1),thickness=5)
 segment(0,point(1,1),epaisseur=5)

# axes
1 Option globale (compatibilité Maple) d'une commande graphique pour mettre ou non les axes.
2 Global option (Maple compatibility) of a graphic command to put or not the axes.
3 Opción global (compatibilidad Maple) de una instrucción gráfica para poner o no los ejes.
4 Kαθολική επιλογή (συμβατή με το Maple) μιας εντολής γραφικών για την εμφάνιση ή όχι των αξόνων.
0 Opt
-1 line_width
-2 gl_showaxes
-3 switch_axes
 axes=0;segment(0,point(1,1))
 axes=1;segment(0,point(1,1),epaisseur=5)

# style
1 Option locale (compatibilité Maple) d'une commande graphique pour tracer une droite en pointillé en mettant style=point.
2 Local option (Maple compatibility) of a graphic command to plot a line with dots with style=point.
3 Opción local (compatibilidad Maple) de una instrucción gráfica para trazar una recta punteada poniendo un style=point.
4 Τοπική επιλογή (συμβατή με το Maple) μιας εντολής γραφικών για την εμφάνιση μιας γραμμής με τελείες όπου έχουμε θέσει style=point.
0 Opt
-1 line_width
 segment(0,point(1,1),style=point)
 line(y=x,style=point,display=green+line_width_2)

# title titre
1 Option globale d'une commande graphique pour mettre un titre au graphique.
2 Global option of a graphic command to put a title in a graphic.
3 Opción global de una instrucción gráfica para poner un título al gráfico.
4 Kαθολική επιλογή μιας εντολής γραφικών για την τοποθέτηση τίτλου σε γράφημα.
0 Opt
-1 line_width
 title="segment";segment(0,point(1,1),epaisseur=5)
 titre="segment";segment(0,point(1,1),epaisseur=5)

# gl_texture
1 Option permettant de mettre une image sur les rectangles de côtés parallèles aux axes en 2-d et sur les surfaces en 3-d ou permettant de mettre un fond sur un graphique 2-d.
2 Option that puts a picture in a rectangle of sides parallel to the axis (2-d) or on a 3-d surface or to fill the background (2-d).
3 Opción que permite poner una imagen sobre los rectángulos de lados paralelos a los ejes en 2-d y sobre las superficies en 3-d o que permite poner un fondo sobre un gráfico 2-d.
4 Επιλογή που τοποθετεί μια εικόνα σε ορθογώνια με πλευρές παράλληλες προς τους άξονες (2-Δ) και σε επιφάνειες στον 3-Δ χώρο ή επιτρέπει να βάλουμε φόντο σε 2-Δ γράφημα.
0 Opt=NameFich
 carre(i,1+i,gl_texture="image.jpg")
 gl_texture="image.jpg"; carre(i,1+i)

# gl_shownames
1 Option permettant de montrer ou de cacher le nom des objets géométriques.
2 Option that shows or hides objects names.
3 Opción que permite mostrar o esconder el nombre de objetos geométricos.
4 Επιλογή που επιτρέπει την εμφάνιση ή απόκρυψη του ονόματος γεωμετρικών αντικειμένων.
0 Opt=Boolean
 gl_shownames=true;K:=carre(i,1+i)
 gl_shownames=false;K:=carre(i,1+i)

# gl_showaxes
1 Option permettant de montrer ou de cacher les axes.
2 Option that shows or hides axes.
3 Opción que permite mostrar o esconder los ejes.
4 Επιλογή που επιτρέπει την εμφάνιση ή απόκρυψη τους άξονες.
0 Opt=Boolean
-1 switch_axes
-2 axes
 gl_showaxes=true;plot(sin(x))
 gl_showaxes=false;plot(sin(x)) 


# gl_quaternion
1 Option permettant de définir le quaternion pour la visualisation des scènes 3-d (pas compatible avec l'interactivité).
2 Option that defines the quaternion for the visualization in 3-d scenes (do not use for interactive scenes).
3 Opción que permite definir el cuaternión para la visualización de escenas 3-d (no compatible con la interactividad)
4 Επιλογή που επιτρέπει τον ορισμό της τετράδας για οπτικοποίηση 3-Δ σκηνών (μη συμβατή με διαδραστικότητα).
0 Opt=Lst
 gl_quaternion=[-0.35752,-0.50198,-0.64393,0.45338]

# gl_rotation
1 Option globale permettant de définir l'axe de rotation pour les animations par rotation des scènes 3-d.
2 Global option that defines the rotation axis for the animation rotation of 3-d scene.
3 Opción global que permite definir el eje de rotación para las animaciones por rotación en escenas 3-d.
4 Καθολική επιλογή που επιτρέπει τον ορισμό του άξονα περιστροφής για εφέ κίνησης με περιστροφή 3-Δ σκηνών.
0 Opt=NameFich
 gl_rotation=[1,1,1];cube([0,0,0],[3,0,0],[0,0,1])

# gl_ortho
1 Option globale permettant de définir une configuration graphique orthonormée.
2 Global option that sets a orthonormal graphic configuration.
3 Opción global que permite definir el ortonormal gráfico.
4 Καθολική επιλογή που επιτρέπει τον ορισμό των ορθοκανονική γραφικών κάδρων.
0 Opt=Interval
 gl_ortho=1; cercle(i,1+i)

# gl_x gl_y gl_z
1 Option globale permettant de définir le cadrage du graphique.
2 Global option that sets the graphic configuration.
3 Opción global que permite definir el encuadre del gráfico.
4 Καθολική επιλογή που επιτρέπει τον ορισμό των γραφικών κάδρων.
0 Opt=Interval
 gl_x=0..2; carre(i,1+i)

# gl_xtick gl_ytick gl_ztick
1 Option globale permettant de définir l'espacement des marques sur l'axe des x (resp y, z).
2 Global option that defines the interval between tick marks on the x (resp. y, z) axis.
3 Opción globalque permite definir el intervalo de marcas sobre el eje x (resp. y, z).
4 Καθολική επιλογή που επιτρέπει τον ορισμό των διαστημάτων ανάμεσα στα σημεία του άξονα των x,(αντίστοιχα y,z).
0 Opt=Real
 gl_xtick=0.5
 gl_ytick=1

# gl_x_axis_unit gl_y_axis_unit gl_z_axis_unit
1 Option globale permettant de définir individuellement les noms des unités sur les axes des x (resp y,z).
2 Global option that is an individual definition of the units of the x, (or y or z) axis.
3 Opción global que permite definir de manera individual los nombres de unidad sobre los ejes x, (o y, o z).
4 Καθολική επιλογή που επιτρέπει τον ορισμό (ατομικά) των ονομάτων των μονάδων στον άξονα των x (αντίστοιχα y,z).
0 Opt=Str
 gl_x_axis_unit="s";
 gl_y_axis_unit="m/s";

# gl_x_axis_color gl_y_axis_color gl_z_axis_color
1 Option globale permettant de définir individuellement les couleurs des axes des x (resp y,z).
2 Global option that is an individual definition of the colors of the x, (or y or z) axis.
3 Opción global que permite definir de manera individual los colores de los ejes x, (o y, o z) (negro=0 rojo=1 verde=2 amarillo=3 azul=4).
4 Καθολική επιλογή που επιτρέπει τον ορισμό (ατομικά) των χρώματα στον άξονα των x (αντίστοιχα y,z)(μαύρο=0 κόκκινο=1 πράσινο=2 κίτρινο=3 μπλε=4).
0 Opt=Intg
 gl_x_axis_color=123;
 gl_y_axis_color=216;
 gl_z_axis_color=3;

# gl_x_axis_name gl_y_axis_name gl_z_axis_name
1 Option globale permettant de définir individuellement les noms des axes x (resp y,z).
2 Global option that is an individual definition of the names of the x (or y or z) axis.
3 Opción global que permite definir de manera individual los nombre de los ejes x, (o y, o z).
4 Καθολική επιλογή που επιτρέπει τον ορισμό (ατομικά) των ονομάτων στον άξονα των x (αντίστοιχα y,z).
0 Opt=Str
 gl_x_axis_name="s";
 gl_y_axis_name="m/s";

# legend
1 legende(za,"ici") (ou legende([20,60],"ici")) "ici" est écrit au point d'affixe za (ou à la position [20,60] en pixel) et legende=["m","s"] écrit "m","s" comme unités sur les axes.
2 legend(za,"here") (or legend([20,60],"here")) "here" is written at the point of affix za (or at the pixel position [20,60]) and legend=["m","s"] write "m","s" as units on the axis.
3 legend(za,"aqui") (o legend([20,60],"aqui")) "aqui" está escrito en el punto de afijo za (o en la posición [20,60] en pixel) y legend=["m","s"] escribe "m","s" como unidad en los ejes.
4 legend(za,"here") (ή legend([20,60],"here")) "here" εγγράφεται στο σημείο με προσθήκη za (ή στο στη θέση [20,60]) και legend=["m","s"] εγγράφει "m","s" ως μονάδες των αξόνων.
0 Cplx or Lst,Str
-1 labels
-2 angle
legend(1+i,"Hello")
legend(point([0,2,3],"Hello")
legend(point(0,1),"Hello",vert)
legend(point(0,1,0),"Hello",vert)
legend(1+i,"Hello",quadrant4,red)
legend([30,20],"bonjour")
 r:=evalf(sqrt(2));legend([30,20],string(r))
 r:=evalf(sqrt(2));legend([30,20],r)
 legende=["m","s"];point(1,1);
 display(legend(1+i,"A"),red)
 point(2+i,legend="2+i",display=quadrant2+red)
 point([2,2*i],legend="1+i",display=quadrant2+red)
 polygon(2,1,i,2*i,legend="1+i",display=quadrant2+red)

# labels
1 labels=["u","v"] renomme les axes en "u" et "v".
2 labels=["u","v"] renames the axis with "u" and "v".
3 labels=["u","v"] renombra los ejes en "u" y "v".
4 labels=["u","v"] μετονομάζει τους άξονες σε "u" και "v".
0 Cplx or Lst,Str
-1 legend
-2 angle
legend(1+i,"Hello")
legend([30,20],"bonjour")
 legende=["m","s"];point(1,1);
 display(legend(1+i,"A"),red)

# legendre_symbol
1 Symbole de Legendre.
2 Legendre symbol.
3 Símbolo de Legendre.
4 Σύμβολο Legendre.
0 Intg,Intg
-1 jacobi_symbol
legendre_symbol(132,5)
legendre_symbol(132,25)

# ln log LN
1 Logarithme népérien ou Option de la commande convert ou convertir (id trig2exp).
2 Natural logarithm or Option of the convert or convertir command (id trig2exp).
3 Logaritmo neperiano o Opción del comando convert o convertir (id trig2exp).
4 Φυσικός λογάριθμος ή Επιλογή της εντολής convert ή convertir (id trig2exp).
8 LN： 自然对数。返回数值的自然对数。  自然对数是以欧拉数 e 为底的对数。
0 Expr or Opt
-1 exp
-2 convert
-3 trig2exp
-4 log10
ln(1)
ln(e)
 convert(cos(x),ln)

# expln
1 Option de la commande convert ou convertir (id trig2exp).
2 Option of the convert or convertir command (id trig2exp).
3 Opción del comando convert o convertir (id trig2exp).
4 Επιλογή της εντολής convert ή convertir (id trig2exp).
0 Opt
-1 exp
-2 ln
-3 convert
-4 trig2exp
 convert(cos(x),expln)

# local var
1 Définit des variables locales: f(x):={local (var1:=x),var2; instruction;};
2 Local variables definition: f(x):={local (var1:=x),var2; instruction;};
3 Definición de variables locales: f(x):={local (var1:=x),var2; instruction;};
4 Ορισμός τοπικών μεταβλητών: f(x):={local (var1:=x),var2; instruction;};
0 
-1 for
-2 if
-3 ->
-4 {}
 f2(x):={local (a:=2),b; b:=a*x; return b;}
 f2(x):={var (a:=2),b; b:=a*x; return b;}

# logb
1 Logarithme à base b.
2 Logarithm of base b.
3 Logaritmo en base b.
4 Λογάριθμος με βάση b.
0 Real
-1 log
-2 log10
logb(5,2)
logb(7,10)

# log10
1 Logarithme à base 10.
2 Common logarithm (base 10).
3 Logaritmo en base 10.
4 Λογάριθμος βάσης 10.
8 LOG: 常用对数。返回数值的常用对数。  常用对数是以 10 为底的对数。
0 Expr
-1 alog10
-2 ln
log10(10)

# alog10
1 Fonction x->10^x.
2 Function x->10^x.
3 Función x->10^x.
4 Συνάρτηση x->10^x.
8 常用反对数 因幂函数的限制而使其比 10^x 更准确。
0 Expr
-1 log10
alog10(3)

# distance
1 Calcule la distance entre 2 points ou un point et une courbe.
2 Calculates the distance between 2 points or a point and a curve.
3 Calcula la distancia entre 2 puntos o entre 1 punto y una curva.
4 Υπολογισμός της απόστασης μεταξύ 2 σημείων ή ενός σημείου και μιας καμπύλης.
0 (Pnt or Cplx),(Pnt or Cplx or Curve)
-1 distance2
-2 distanceat
-3 distanceatraw
distance(point(0),point(1+i))
distance(1+i,segment(1-i,i))
distance(0,1+i)

# distance2
1 Calcule le carré de la distance entre 2 points ou un point et une courbe.
2 Calculates the square of the distance between 2 points or a point and a curve.
3 Calcula el cuadrado de la distancia entre 2 puntos o entre un punto y una curva.
4 Υπολογισμός του τετραγώνου της απόστασης μεταξύ 2 σημείων ή ενός σημείου και μιας καμπύλης.
0 (Pnt or Cplx),(Pnt or Cplx or Curve)
-1 distance
distance2(point(0),point(1+i))
distance2(1+i,segment(1-i,i))
distance2(0,1+i)

# limit limite
1 Limite d'une expression en un point (a or +/-infinity)(d=-1 pour limite inf et +1 pour limite sup).
2 Limit of an expression at a limit point (a or +/-infinity)(d=-1 for limit inf and +1 for limit sup).
3 Límite de una expresión en un punto (a o +/-infinity)(d=-1 o +1).
4 Όριο μιας παράστασης σε ένα σημείο (a ή +/-άπειρο)(d=-1 ή +1).
0 Expr,Var,Val,[Dir(d)]
-1 series
-2 taylor
-3 taux_accroissement
limit((n*tan(x)-tan(n*x))/(sin(n*x)-n*sin(x)),x,0)
limit(sin(x)/(x^2-3*x),x,0)

limit((2*x-1)/exp(1/(x-1)),x,+infinity)
limit(exp(1/x),x,0,1)
limit(exp(1/x),x,0,-1)
limit(taux_accroissement(x^n,1,1+h),h,0)

# lu
1 Pour A une matrice numérique, renvoie p permutation, L et U tels que PA=LU (P=permu2mat(p)).
2 For a numerical matrix A, returns p permutation, L and U such that PA=LU (P=permu2mat(p)).
3 Para una matriz numérica A, devuelve permutación p, L y U tales que PA=LU (P=permu2mat(p)).
4 Για ένα αριθμητικό πίνακα Α, επιστρέφει την μετάθεση p, και L και U τέτοιους ώστε PA=LU (P=permu2mat(p)).
8 lu 分解。 将矩形矩阵分解成三个矩阵： {[[下三角形矩阵]]、[[上三角形矩阵]]、[[置换矩阵]]} 上三角形矩阵在其对角线上有元素。
0 Mtrx
-1 qr
-2 cholesky
-3 LU
lu([[1,2],[3,4]])
lu([[6,12,18],[5,14,31],[3,8,18]])

# lvar
1 Liste des variables d'un objet (avec dépendance rationnelle).
2 List of variables of an object (with rational dependence).
3 Lista de variables de un objeto (con dependencia racional).
4 Λίστα των ρητών μεταβλητών μιας παράστασης.
0 Expr
-1 lname
-2 has
lvar(exp(x)*2*sin(y))
lvar(exp(x)*2*sin(y)+ln(x))

# lname indets
1 Liste des variables de l'expression.
2 List of variables in the expression.
3 Lista de las variables de una expresión.
4 Λίστα των μεταβλητών μιας παράστασης.
0 Expr
-1 has
-2 lvar
lname(exp(x)*2*sin(y))

# norm l2norm
1 Norme l2 d'un vecteur = sqrt(x1^2+x2^2+...xn^2) ou norme de matrice subordonnée à la norme l2.
2 Returns the l2 norm of a vector = sqrt(x1^2+x2^2+...xn^2) or matrix norm induced by l2 norm.
3 Norma l2 de un vector=sqrt(x1^2+x2^2+...xn^2) o norma de una matriz induced by l2 norm.
4 Νόρμα l2 ενός διανύσματος=sqrt(x1^2+x2^2+...xn^2) (ή matrix norm induced by l2 norm.)
0 Vect or Mtrx
-1 maxnorm
-2 l1norm
norm([1,2])
norm([1,2,3,-4])
norm([[1,2],[3,-4]])
norm([[1,2,3],[3,-9,6],[4,5,6]])

# maxnorm
1 Norme du max d'un vecteur (ou d'une matrice): maxnorm([x1,x2,..,xn])=max(|x1|,..,|xn|).
2 Norm with the max of a vector (or of a matrix): maxnorm([x1,x2,..,xn])=max(|x1|,..,|xn|).
3 Norma del max de un vector (o de una matriz): maxnorm([x1,x2,..,xn])=max(|x1|,..,|xn|).
4 Νόρμα με το μέγιστο ενός διανύσματος (ή ενός πίνακα): maxnorm([x1,x2,..,xn])=max(|x1|,..,|xn|).
0 Vect or Mtrx
-1 l2norm
-2 l1norm
maxnorm([1,2])
maxnorm([1,2,3,-4])
maxnorm([[1,2],[3,-4]])

# rowNorm rownorm
1 Renvoie le maximum des sommes des valeurs absolues des éléments situés sur les lignes de la matrice: rowNorm(a_{j,k})=max_j(sum_k(|a_{j,k}|)).
2 Returns the max of the l1_norm of the rows of a matrix: rowNorm(a_{j,k})=max_j(sum_k(|a_{j,k}|)).
3 Devuelve el máximo de las sumas de los valores absolutos de los elementos encontrados sobre las líneas de la matriz: rowNorm(a_{j,k})=max_j(sum_k(|a_{j,k}|)).
4 Επιστρέφει την μέγιστη l1 νόρμα των γραμμών ενός πίνακα: rowNorm(a_{j,k})=max_j(sum_k(|a_{j,k}|)).
8 行范数。 查找（所有行）最大值，对某一行中所有元素的绝对值求和。
0 Vect or Mtrx
-1 norm
rowNorm([[1,2],[3,-4]])
rowNorm([[1,2,3,-4],[-5,3,2,1]])

# colNorm colnorm
1 Renvoie le maximum des sommes des valeurs absolues des éléments situés sur les colonnes de la matrice: colNorm(a_{j,k})=max_k(sum_j(|a_{j,k}|)).
2 Returns the max of the l1_norm fo the columns of a matrix: colNorm(a_{j,k})=max_k(sum_j(|a_{j,k}|)).
3 Devuelve el máximo de las sumas de los valores absolutos de los elementos encontrados sobre las columnas de la matriz: colNorm(a_{j,k})=max_k(sum_j(|a_{j,k}|)).
4 Επιστρέφει την μέγιστη l1 νόρμας των στηλών ενός πίνακα: colNorm(a_{j,k})=max_k(sum_j(|a_{j,k}|)).
8 列范数。 查找所有元素绝对值之和的最大值（范围为所有列）。
0 Vect or Mtrx
-1 norm
colNorm([[1,2],[3,-4]])
colNorm([[1,2,3,-4],[-5,3,2,1]])

# max
1 Maximum des éléments d'une séquence ou d'une liste de réels.
2 Maximum of elements of a sequence or a list of reals.
3 Máximo de dos reales.
4 Μέγιστος 2 πραγματικών αριθμών.
8 最大。 返回两个值中较大值。
0 Seq||Lst
-1 min
max(25,35)

# makelist
1 Renvoie une liste faite à partir d'une fonction ou d'une constante.
2 Returns a list made with a function or with a constant.
3 Devuelve una lista hecha a partir de una función o a partir de una constante.
4 Επιστρέφει μια λίστα που ορίζεται από μια συνάρτηση ή από μια σταθερά.
8 创建列表。  计算新列表的元素顺序。 对函数求值，并利用步长从初值开始增加变量值，一直增加到终值。
0 Fnc,InitVal,FinalVal,StepVal
-1 seq
-2 range
-3 makemat
-4 $
makelist(x->x^2,1,10,2)
makelist(4,1,10)
makelist(4,5,10)
makelist(x->ifte(x<5,"A","B"),1,10)

# map
1 Applique la fonction f à tous les éléments de la liste l ou à un polynôme donné au format interne.
2 Apply the function f at the elements of the list l or at a polynomial of internal format.
3 Aplica la función f a todos los elementos de la lista l o a un polinomio dado en formato interno.
4 Εφαρμογή της συνάρτησης f στα στοιχεία της λίστας l.
0 Lst(l),Fnc(f)
-1 apply
-2 set
-3 unapply
map([1,2,3],x->x^3)
map([1,2,3],unapply(x^3,x))
map(%%%{1,[2,0]%%%}+%%%{2,[1,1]%%%},(a,b,c)->a*(b+2*c))

# apply
1 Applique la fonction f à tous les éléments d'une liste l (option matrix pour une matrice).
2 Apply the function f at the elements of the list l (option matrix for a matrix).
3 Aplica la función f a los elementos de la lista l (opción matrix para una matriz).
4 Εφαρμογή της συνάρτησης f στα στοιχεία της λίστας l.
0 Fnc(f),Lst(l)
-1 map
-2 unapply
-3 matrix
apply(x->x^3,[1,2,3])
apply(x->x+1,[[1,2,3],[1,2,3]],matrix)

# xcas_mode maple_mode
1 Passe en mode Xcas (0), Maple (1), Mupad (2), TI89 (3).
2 Switches to mode Xcas (0), Maple (1), Mupad (2), TI89 (3).
3 Cambia a modo Xcas (0), Maple (1), Mupad (2), TI89 (3).
4 Εναλλαγή στον τρόπο λειτουργίας: Xcas (0), Maple (1), Mupad (2), TI89 (3).
0 Intg(0) or 1 or 2 or 3
-1 python_compat
xcas_mode(1)
xcas_mode(0)

# python_compat
1 Passe en compatibilité de syntaxe Python (1) ou non (0)
2 Set Python-syntax compatibility (1) or not (0)
0 Intg(0) or 1
-1 xcas_mode
python_compat()
python_compat(1)

# maple2mupad
1 maple2mupad("fichier1","fichier2") traduit fichier1(Maple) en fichier2(MuPAD).
2 maple2mupad("file1","file2") translate file1(Maple) to file2(MuPAD).
3 maple2mupad("file1","file2") traduce file1(Maple) en file2(MuPAD).
4 maple2mupad("file1","file2") μετατροπή του file1(Maple) σε file2(MuPAD).
0 Str("Name_Maplefile"),Str("Name_Mupadfile")
-1 maple2xcas

# maple2xcas
1 maple2xcas("fichier1","fichier2") traduit fichier1(Maple) en fichier2(Xcas).
2 maple2xcas("file1","file2") translate file1(Maple) to file2(Xcas).
3 maple2xcas("file1","file2") traduce file1(Maple) en file2(Xcas).
4 maple2xcas("file1","file2") μετατροπή του file1(Maple) σε file2(Xcas).
0 Str("NameMapleFile"),Str("NameXcasFile")
-1 maple2mupad

# mupad2maple
1 mupad2maple("fichier1","fichier2") traduit fichier1(MuPAD) en fichier2(Maple).
2 mupad2maple("file1","file2") translate file1(MuPAD) to file2(Maple).
3 mupad2maple("file1","file2") traduce file1(MuPAD) en file2(Maple).
4 mupad2maple("file1","file2") μετατροπή του file1(MuPAD) σε file2(Maple).
0 Str("NameMupadFile"),Str("NameMapleFile")
-1 mupad2xcas

# mupad2xcas
1 mupad2xcas("fichier1","fichier2") traduit fichier1(MuPAD) en fichier2(Xcas).
2 mupad2xcas("file1","file2") translate file1(MuPAD) to file2(Xcas).
3 mupad2xcas("file1","file2") traduce file1(MuPAD) en file2(Xcas).
4 mupad2xcas("file1","file2") μετατροπή του file1(MuPAD) σε file2(Xcas).
0 Str("NameMupadFile"),Str("NameXcasFile")
-1 mupad2maple

# min
1 Minimum des éléments d'une séquence ou d'une liste de réels.
2 Minimum of elements of a sequence or a list of reals.
3 Mínimo de dos reales
4 Ελάχιστος 2 πραγματικών αριθμών
8 最小。 返回两个值中的较小值。
0 Seq||Lst
-1 max
min(25,35)

# mkisom
1 Matrice d'une isométrie donnée par ses éléments propres.
2 Matrix of an isometry given by its proper elements.
3 Matriz de una isometría dada por sus elementos propios.
4 Πίνακας μιας ισομετρίας δοθέντων των στοιχείων της.
0 Vect,(Sign(1) or -1)
-1 isom
mkisom([1,2],1)
mkisom([[1,0,0],pi/3],-1)
mkisom(pi,1)

# minus
1 minus est un opérateur infixé pour avoir la différence de 2 ensembles.
2 minus is a infixed operator to get the difference of 2 sets.
3 minus es un operador infijo para obtener la diferencia de 2 conjuntos.
4 minus είναι ένας εντεθειμένος τελεστής που δίνει τη διαφορά 2 συνόλων.
0 (Vect or Set),(Vect or Set)
-1 union
-2 intersect
 [1,2,3] minus [2,5,6]
 %{1,2,3%} minus %{2,5,6%}

# moyal
1 Produit de Moyal de 2 symboles.
2 Moyal product of 2 symbols.
3 Producto de Moyal de 2 expresiones simbólicas.
4 Γινόμενο Moyal 2 συμβόλων.
0 Expr,Expr,VectVar
-1 
moyal(x^2+y^4,x^4-y^2,[x,y],5)

# newton
1 newton(f(x),x,a,p) calcule une racine de f(x) par la méthode de Newton en partant de a avec p itérations (par défaut p=20).
2 newton(f(x),x,a,p)=one root of f(x) by Newton method beginning with a and p iterations (by default p=20).
3 newton(f(x),x,a,p) calcula una raíz de f(x) por el método de Newton comenzando en a con p iteraciones (por defecto p=20).
4 newton(f(x),x,a,p) υπολογίζει μια ρίζα του f(x) με τη μέθοδο του Νεύτωνα ξεκινώντας με a, και με p επαναλήψεις (προεπιλογή p=20).
0 Expr(f(x)),Var(x),[ApproxVal(a),NumIter(p)]
-1 rootof
newton(x^2-2,x)
newton(x^2-2,x,2)
newton(x^2-2,x,-2)
newton(x^2-2,x,2,5,1e-7)

# nextprime
1 Prochain nombre premier ou pseudo premier après un entier donné.
2 Next prime or pseudo-prime after a given integer.
3 Siguiente número primo o pseudo-primo después de un entero dado.
4 Επόμενος πρώτος ή ψευδο-πρώτος μετά από δοθέντα ακέραιο.
8 下一个素数。  返回整数 a 后侧的下一个素数。
0 Intg(a)
-1 prevprime
-2 is_prime
-3 ithprime
nextprime(9856989898990)
nextprime(97160249868928888261606009)

# normal evala
1 Simplifie l'expression.
2 Simplify the expression.
3 Simplifica la expresión.
4 Κανονικοποίηση της παράστασης.
0 Expr
-1 simplify
normal(2*x+y=1)
normal(2*x*2)
normal((2*x+1)^2)

# not non
1 Renvoie l'inverse logique de l'argument.
2 Returns the logical inverse of the argument.
3 Devuelve el inverso lógico del argumento.
4 Επιστρέφει το λογικό αντίστροφο του ορίσματος.
8 如值为 0，返回 1；否则，返回 0。
0 Boolean
-1 or
-2 and
-3 xor
not(b==0)
not(b>0)

# !
1 Renvoie l'inverse logique de l'argument si préfixé ou factoriel si postfixé.
2 Returns the logical inverse of the argument if prefixed or factorial if infixed.
3 Devuelve el inverso lógico del argumento o n!=factorial(n).
4 Επιστρέφει το λογικό αντίστροφο του ορίσματος ή n!=factorial(n).
8 如值为 0，返回 1；否则，返回 0 或 阶乘 (6! 返回 720)。
0 Boolean
-1 or
-2 and
-3 xor
-4 factorial
!(b==0)
 5!

# nop
1 Instruction ne rien faire.
2 No OPeration instruction.
3 Instrucción para no hacer nada.
4 Εντολή μη εκτέλεσης.
0 NULL
-1 
nop()

# odesolve
1 odesolve(f(t,y),[t,y],[t0,y0],t1)=odesolve(t0..t1,f,y0)=y(t1) pour y sol approx de y'=f(t,y) et y(t0)=y0 avec y=vecteur pour les systèmes.
2 odesolve(f(t,y),[t,y],[t0,y0],t1)=odesolve(t0..t1,f,y0)=y(t1) for y approx sol of y'=f(t,y) and y(t0)=y0 with y=vector for systems.
3 odesolve(f(t,y),[t,y],[t0,y0],t1)=odesolve(t0..t1,f,y0)=y(t1) para y solución aprox de y'=f(t,y) e y(t0)=y0 e y=vector para los sistemas.
4 odesolve(f(t,y),[t,y],[t0,y0],t1)=odesolve(t0..t1,f,y0)=y(t1) για y, προσεγγιστική λύση της y'=f(t,y) με y(t0)=y0 και y=διάνυσμα για συστήματα.
0 Expr,VectVar,VectInitCond,FinalVal,[tstep=Val,curve]
-1 plotode
-2 plotfield
-3 interactive_plotode
-4 desolve
odesolve(sin(t*y),[t,y],[0,1],2)
odesolve(0..2,(t,y)->sin(t*y),1)
odesolve(0..pi,(t,v)->{[-v[1],v[0]]},[0,1])
odesolve(sin(t*y),t=0..2,y,1,tstep=0.5)
odesolve(sin(t*y),t=0..2,y,1,tstep=0.5,curve)


# of
1 Renvoie la valeur f(a).
2 Returns the value : f(a).
3 Devuelve el valor f(a).
4 Επιστρέφει την τιμή: f(a).
0 Fnc(f),Real(a)
-1 at
of(x->x^2,4)

# option
1 Mot réservé pour compatibilité.
2 Reserved word for compatibility.
3 Palabra reservada para compatibilidad.
4 Δεσμευμένη λέξη για συμβατότητα.
0 
-1 

# order_size
1 Reste (terme en O) d'un développement en séries: limit(x^a*order_size(x),x=0)=0 si a>0.
2 Remainder (O term) of a series expansion: limit(x^a*order_size(x),x=0)=0 if a>0.
3 Resto (término en O) de un desarrollo en serie: limit(x^a*order_size(x),x=0)=0 si a>0.
4 Υπόλοιπο (O όροι) ενός αναπτύγματος σειράς: limit(x^a*order_size(x),x=0)=0 αν a>0.
0 Expr
-1 series
order_size(x)
 limit(sqrt(x)*order_size(x),x=0)

# parabola
1 parabole(F,A)=foyer F, sommet A (dans le plan ABP) ou (parabole(A,c) d'équa. y=yA+c*(x-xA)^2 c=1/(2*p) et FA=p/2 geo2d) et parabole(P(x,y)) dessine la conique si deg(P)=2.
2 parabola(F,A)=focus F, top A (in the plane ABP) or (parabola(A,c) of equa. y=yA+c*(x-xA)^2 c=1/(2*p) and FA=p/2 geo2d) and parabola(P(x,y)) draws the conic if deg(P)=2.
3 parabola(F,A)=parábola de foco F y vértice A (en el plan ABP) o (parabola(A,c) de ecua. y=yA+c*(x-xA)^2 c=1/(2*p) y FA=p/2 geo2d) y parabola(P(x,y)=conic si deg(P)=2.
4 parabola(F,A)=εστία F, κορυφή A (στο επίπεδο ABP) ή (parabola(A,c) της εξίσωσης y=yA+c*(x-xA)^2 c=1/(2*p) και FA=p/2 γεω2Δ) και parabola(P(x,y)) σχεδιάζει την κωνική αν deg(P)=2.
0 Pnt(F)||Pnt(xA+i*yA),Pnt(A)||Real(c),[Pnt(P)]
-1 ellipse
-2 hyperbola
parabola(point(0),point(2))
parabola(0,2)
parabola(point(0,0,0),point(1,0,0),point(1,1,1))
parabola(x-y^2+y-2)

# parallel
1 parallele(A,D) (resp parallele(A,P) ou parallele(A,D,DD)) trace la droite (resp le plan) passant par le point A parallèle à la droite D (resp parallèle au plan P ou aux droites D et DD) et, parallele(d,D) trace le plan parallèle à la droite D passant par d.
2 parallel(A,D) (resp parallel(A,P) or parallel(A,D,DD)) draws the line (resp plane) through A parallel to the line D (resp parallel to the plane P or to the lines D,DD) and, parallel(d,D) draws the plane through d parallel to the line D.
3 parallel(A,D) (resp parallel(A,P) o parallel(A,D,DD)) traza la recta (resp el plan) a través de A paralela a la recta D y, parallel(d,D) traza el plan paralelo a la recta D que pasa por d.
4 parallel(A,D) (αντίστοιχα parallel(A,P) ή parallel(A,D,DD)) σχεδιάζει την ευθεία (αντίστοιχα το επίπεδο) που περνάει από το σημείο A παράλληλη στην ευθεία D (αντίστοιχα παράλληλο στο επίπεδο P ή στις ευθείες D και DD) και, parallel(d,D) σχεδιάζει το επίπεδο που περνάει από το d παράλληλο στην ευθεία D.
0 Pnt or Line,Line or Plan,[Line]
-1 
parallel(1+i,line(1-i,i))
parallel(1+i,segment(1-i,i))
parallel(point([1,1,1]),line(x=0,y=0))
parallel([1,1,1],line(x=0,y=0))
parallel([1,1,1],plane(x=0))
parallel([1,0,0],line(x=0,y=0),line(x=y,y=z))
parallel(line(x=y,y=z),line(x=0,y=0))

# parameter
1 Mot réservé.
2 Reserved word.
3 Palabra reservada
4 Δεσμευμένη λέξη.
0 
-1 

# plotparam paramplot DrawParm courbe_parametrique
1 plotparam(a(x)+i*b(x),x=x0..x1) trace la courbe X=a(x),Y=b(x) x=x0..x1 ou plotparam([a(u,v),b(u,v),c(u,v)],[u=u0..u1,v=v0..v1]) trace la surface X=a(u,v),Y=b(u,v),Z=c(u,v) u=u0..u1 et v=v0..v1.
2 plotparam(a(x)+i*b(x),x=x0..x1) draws the curve X=a(x),Y=b(x) x=x0..x1 or plotparam([a(u,v),b(u,v),c(u,v)],[u=u0..u1,v=v0..v1]) draws the surface X=a(u,v),Y=b(u,v),Z=c(u,v) u=u0..u1 and v=v0..v1.
3 plotparam(a(x)+i*b(x),x=x0..x1) traza la curva X=a(x), Y=b(x) x=x0..x1 o plotparam([a(u,v),b(u,v),c(u,v)],[u=u0..u1,v=v0..v1]) traza las superficies X=a(u,v),Y=b(u,v),Z=c(u,v) u=u0..u1 y v=v0..v1.
4 plotparam(a(x)+i*b(x),x=x0..x1) σχεδιάζει την καμπύλη X=a(x),Y=b(x) x=x0..x1 ή plotparam([a(u,v),b(u,v),c(u,v)],[u=u0..u1,v=v0..v1]) σχεδιάζει την επιφάνεια X=a(u,v),Y=b(u,v),Z=c(u,v) u=u0..u1 και v=v0..v1.
8 参数绘图。
0 Cplx||Lst,Var||Lst(Var)
-1 plotfunc
-2 plotpolar
-3 arc
plotparam(sin(t)+i*cos(t),t)
plotparam(exp(i*t),t=0..pi/2,affichage=1)
plotparam(exp(i*t),t=0..pi/2,affichage=1+rempli)
plotparam([sin(x),cos(x)],x=0..1)
plotparam([sin(x),cos(x)],x=0..1,affichage=rouge)
plotparam(sin(x)+i*cos(x),x=0..1,tstep=0.01)
plotparam([v*cos(u),v*sin(u),v],[u,v])
plotparam([v*cos(u),v*sin(u),v],[u=0..pi,v=0..3],ustep=0.1,vstep=0.2)

# parameq
1 parameq(C) renvoie le nombre complexe = équation paramétrique de la courbe C.
2 parameq(C) returns the complex number=parametric equation of the curve C.
3 parameq(C) devuelve el número complejo = ecuación paramétrica de la curva C.
4 parameq(C) επιστρέφει τον μιγαδικό αριθμό = με την παραμετρική εξίσωση της καμπύλης C.
0 GeoObj
-1 equation
parameq(circle(0,1))
parameq(line(i,1-i))

# partfrac
1 Décomposition en éléments simples d'une fraction rationnelle ou Option de la commande convert ou convertir (id à l'option parfrac).
2 Performs partial fraction decomposition on a fraction or Option of the convert or convertir command (id at the option parfrac).
3 Efectua la descomposición parcial de una fracción o Opción del comando convert o convertir (id a opción parfrac).
4 Ανάλυση σε μερικά κλάσματα μιας ρητής παράστασης ή Επιλογή της εντολής convert ή convertir (id με eπιλογή parfrac).
0 RatFrac or Opt
-1 factor
-2 normal
-3 convert
-4 propfrac
partfrac(x/(4-x^2))
partfrac((x^2-2*x+3)/(x^2-3*x+2))
partfrac(a/(z*(z-b)),z)
 convert(x/(4-x^2),partfrac)

# cpartfrac
1 Décomposition en éléments simples dans ℂ d'une fraction rationnelle.
2 Performs partial fraction decomposition in ℂ of a fraction.
3 Efectua la descomposición parcial en ℂ de una fracción.
4 Ανάλυση σε μερικά κλάσματα μιας ρητής παράστασης στους μιγαδικούς.
0 RatFrac
-1 factor
-2 normal
cpartfrac((x)/(4-x^2))
cpartfrac((x^2-2*x+3)/(x^2-3*x+2))
cpartfrac(a/(z*(z-b)),z)

# pcar charpoly
1 Liste des coefficients du polynôme caractéristique d'une matrice ou polynôme caractéristique d'une matrice de variable le second argument.
2 List of the coefficients of the characteristic polynomial of a matrix or characteristic polynomial of a matrix with the second argument as variable.
3 Lista de los coeficientes del polinomio característico de una matriz o polinomio característico de una matriz de variable el segundo argumento.
4 Λίστα των συντελεστών του χαρακτηριστικού πολυωνύμου ενός πίνακα ή του χαρακτηριστικού πολυωνύμου ενός πίνακα με το 2ο όρισμα ως μεταβλητή.
0 Mtrx,[Var]
-1 jordan
-2 egv
-3 egvl
-4 companion
-5 rat_jordan
-6 pmin
-7 adjoint_matrix 
pcar([[1,2],[3,4]])
pcar([[1,2],[3,4]],x)
pcar([[1,2,3],[1,3,6],[2,5,7]])
pcar([[1,2,3],[1,3,6],[2,5,7]],z)

# pcar_hessenberg
1 Polynôme caractéristique d'une matrice par la méthode de Hessenberg (si les coefficients sont dans un corps fini).
2 Characteristic polynomial of a matrix by the Hessenberg method (if the coefficients are in a finite field).
3 Polinomio característico de una matriz por el método de Hessenberg (si los coeficientes están en un campo finito).
4 Χαρακτηριστικό πολυώνυμο ενός πίνακα σύμφωνα με τη μέθοδο Hessenberg.
0 Mtrx,[Var]
-1 jordan
-2 pcar
-3 egvl
pcar_hessenberg([[1,2],[3,4]])
pcar_hessenberg([[1,2],[3,4]],x)
pcar_hessenberg([[1,2,3],[1,3,6],[2,5,7]])

# perm nPr
1 perm(n,p)=nombre d'arrangements de p objets pris parmi n : n!/(n-p)!
2 perm(n,p)=number of arrangements of p objects taken among n : n!/(n-p)!
3 perm(n,p)=número de arreglos de p objetos tomados de n en n : n!/(n-p)!
4 perm(n,p)=ο αριθμός των διατάξεων p αντικειμένων λαμβανομένων από n : n!/(n-p)!
8 排列。  返回从 n 个元素中一次取 r 个数的排列数（考虑排列顺序）： n!/(n-p)!。
0 Intg(n),Intg(p)
-1 comb
-2 factorial
perm(4,2)

# perpendicular
1 perpendiculaire(A,droite(B,C)) ou perpendiculaire(A,B,C) trace la droite perpendiculaire à la droite BC, passant par le point A et perpendiculaire(d,plan(B,C,D)) trace le plan perpendiculaire au plan(B,C,D)) passant par la droite d.
2 perpendicular(A,line(B,C)) or perpendicular(A,B,C) draws the orthogonal line of line BC through A and perpendicular(d,plane(B,C,D)) draws the orthogonal plane of plane(B,C,D) through the line d.
3 perpendicular(A,line(B,C)) o perpendicular(A,B,C) traza la recta perpendicular a la recta BC, pasando por A, y perpendicular(d,plane(B,C,D)) traza le plan perpendicular al plane(B,C,D) a través de la recta d.
4 perpendicular(A,line(B,C)) ήr perpendicular(A,B,C) σχεδιάζει την ευθεία κάθετο στην ευθεία BC, που περνάει από το σημείο A και perpendicular(d,plane(B,C,D)) σχεδιάζει το επίπεδο κάθετο στο plane(B,C,D) που περνάει από την ευθεία d.
8 垂直。
0 (Pnt or Line),(Line or Plan)
-1 altitude
-2 orthogonal
perpendicular(1,line(1,i))
perpendicular(1,0,1+i)
perpendicular([0,0,0],line(x=y,y=z))
perpendicular(line([0,0,0],[1,1,0]),plane(x+y+z=1))

# orthogonal
1 orthogonal(A,droite(B,C)) trace le plan orthogonal à la droite BC passant par A et orthogonal(A,plan(B,C,D)) trace la droite orthogonale au plan(B,C,D)) passant par A.
2 orthogonal(A,line(B,C)) draws the orthogonal plane of line BC through A and orthogonal(A,plane(B,C,D)) draws the orthogonal line of plan(B,C,D) through A.
3 orthogonal(A,line(B,C)) traza el plan perpendicular a la recta BC pasando por A y orthogonal(A,plane(B,C,D)) traza la recta perpendicular al plan(B,C,D) pasando por A.
4 orthogonal(A,line(B,C)) σχεδιάζει το επίπεδο κάθετο στην ευθεία BC που περνάει από το A και orthogonal(A,plane(B,C,D)) σχεδιάζει την ευθεία κάθετη στο plane(B,C,D) που περνάει από το A.
0 (Pnt),(Line or Plan)
-1 altitude
-2 perpendicular
orthogonal(point(0,0,0),line(point(1,0,0),point(0,1,0)))
orthogonal(point(0,0,0),plane(point(1,0,0),point(0,1,0),point(0,0,1)))

# proot
1 Retourne les racines approchées d'un polynôme donné par ses coefficients (ne marche pas en général pour les racines multiples). On peut en option préciser le nombre n de chiffres significatifs. 
2 Returns all computed roots of a polynomial given by its coefficients (may not work if roots are not simple).
3 Devuelve todas las raíces aproximadas de un polinomio dado por sus coeficientes (no funciona en general con raíces mútliples).
4 Επιστρέφει όλες τις ρίζες ενός πολυωνύμου που δίνεται είτε συμβολικά είτε ως λίστα των συντελεστών του (γενικά, δεν δουλεύει για πολλαπλές ρίζες).
8 多项式根。 返回具有矢量指定系数的多项式的根。
0 Vect||Poly,[Intg(n)]
-1 pcoeff
-2 peval
-3 realroot
-4 complexroot
-5 rationalroot
-6 crationalroot
proot([1,0,-2])
proot(x^2-2)
proot([1,2,-25,-26,120])
proot(x^4+5x-3,30)

# pcoeff pcoef
1 Retourne les coefficients du polynôme dont les racines sont données en argument avec 1 comme coefficient dominant.
2 Returns the polynomial coefficients having the roots specified as argument.
3 Devuelve los coeficientes de un polinomio cuyas raíces están dadas en argumento.
4 Επιστρέφει τους συντελεστές του πολυωνύμου του οποίου οι ρίζες δίνονται ως όρισμα.
8 多项式系数。 返回具有矢量指定根的多项式的系数。
0 Vect
-1 proot
-2 peval
pcoeff([1,0,0,0,1])
pcoeff([1,0,-2])

# peval polyEval
1 Évalue en un point x0, un polynôme donné par ses coefficients.
2 Evaluates at a point x0, a polynomial given by its coefficients.
3 Evalua en un punto x0, un polinomio dado por sus coeficientes.
4 Αποτίμηση στο σημείο x0, ενός πολυωνύμου δοθέντων των συντελεστών του.
8 多项式计算。 对一个具有矢量指定系数的多项式求得某个点的数值。
0 Vect,Real(x0)
-1 proot
-2 pcoeff
peval([1,0,-2],1)
peval([1,2,-25,-26,120],8)

# plot graphe
1 Trace le graphe d'une expression (ou d'une liste d'expressions) d'1 variable ou d'une densité de loi de probabilité.
2 Plot a one-variable expression (or list of expressions).
3 Traza la gráfica de una expresión (o de una lista de expresiónes) de 1 variable.
4 Σχεδιάζει το γράφημα μιας παράστασης (ή λίστας παραστάσεων) με 1 μεταβλητή.
0 (Expr or LstExpr),Var[=VarMin..VarMax],[color=LstColor]
-1 plotfunc
-2 plotparam
-3 animate
-4 animate3d
-5 plotarea
plot(x-1/6*x^3,x)
plot([2*x-1,sin(x)],x=1..2)
plot(sin(x),x=-2..2,color=green,xstep=0.1)
plot([2*x-2,2*sin(x)],x=1..2,color=[green,red],legende=["2x-2","sin"])
plot(exponentiald(2))
plot(normald)
plot(normald(-1,2))

# plotfunc funcplot DrawFunc Graph
1 Trace le graphe d'une expression d'1 ou 2 variables avec superposition.
2 Plot a 1 variable or 2 variables expression with superposition.
3 Traza la gráfica de una expresión de 1 o 2 variables con superposición.
4 Σχεδιάζει το γράφημα μιας παράστασης με 1 ή 2 μεταβλητές, με υπέρθεση.
0 Expr,[Var(x) or VectVar] ,[Intg(color)]
-1 plot
-2 plot3d
-3 plotparam
-4 animate
-5 animate3d
-6 plotdensity
plotfunc(-2*x+1,x=1..2,color=red)
plotfunc([-2*x+1,x^2-2],x=-2..2,color=[red,yellow],xstep=0.2)
plotfunc(x^2-y^2,[x,y],xstep=0.5,ystep=0.3)
plotfunc(x^2+y^2,[x=-1..1,y=-2..2],nstep=900)
plotfunc((x+i*y)^2,[x=-1..1,y=-2..2],nstep=900,affichage=rempli)

# plotimplicit implicitplot
1 plotimplicit(f(x,y),x,y) ou plotimplicit(f(x,y),[x,y]) graphe de f(x,y)=0.
2 plotimplicit(f(x,y),x,y) or plotimplicit(f(x,y),[x,y]) graph of f(x,y)=0.
3 plotimplicit(f(x,y),x,y) o plotimplicit(f(x,y),[x,y]) gráfica de f(x,y)=0.
4 plotimplicit(f(x,y),x,y) γράφημα της f(x,y)=0.
0 Expr,Var1,Var2
-1 plotcontour
-2 unfactored
-3 plotinequation
plotimplicit(x^2+y^2-1,x,y)
plotimplicit(x^4+y^4=x^2-y^2)
plotimplicit(x^2+y^2-1,x,y,unfactored)
plotimplicit(x^2+4*y^3-1)
plotimplicit(x^2+4*y^3-k)$(k=-5..5)
plotimplicit(y^3=x^3-x^2,x,y,xstep=0.1,ystep=0.1)
plotimplicit(y^3=x^3-x^2,[x,y],xstep=0.1,ystep=0.1)
plotimplicit((x+5)^2+(y+4)^2-1,x=-6..-4,y=-5..-3)
plotimplicit((x+5)^2+(y+4)^2-1,[x=-6..-4,y=-5..-3])

# fieldplot plotfield
1 fieldplot(f(t,y),[t,y]) trace le champ des tangentes (normalisé ou non selon l'option) de l'equa diff y'=f(t,y).
2 fieldplot(f(t,y),[t,y]) draws the plotfield of the diff equation y'=f(t,y).
3 fieldplot(f(t,y),[t,y]) traza el campo de las tangentes (normalizadas o no según la opción) de la ecuación diferencial y'=f(t,y).
4 fieldplot(f(t,y),[t,y]) σχεδιάζει το πεδίο κλίσεων της διαφορικής εξίσωσης y'=f(t,y).
0 Expr,VectVar,[Opt]
-1 interactive_plotode
-2 odeplot
-3 odesolve
-4 desolve
fieldplot(sin(t*y),[t=-5..5,y=-3..3],xstep=0.5,ystep=0.5)
fieldplot(-t*y,[t,y])
fieldplot(-t*y,[t,y],normalize)
fieldplot(-t*y,[t,y],normalize,xstep=0.5,ystep=0.5)
fieldplot(-t*y,[t=-6.868..6.868,y=-6.868..6.868],normalize)

# interactive_plotode interactive_odeplot
1 Trace (dans DispG) une solution pour chaque point t0+i*y0 désigné par la souris (Esc=arrêt).
2 Draws (in DispG) a solution for each point t0+i*y0 clicked with the mouse (Esc=halt).
3 Traza (en DispG) una solución para cada punto t0+i*y0 designado por el ratón (Esc=interrumpir).
4 Σχεδιάζει (στο DispG) μια λύση για κάθε σημείο t0+i*y0 που επιλέγεται με το ποντίκι (Esc=παύση).
0 Expr,VectVar
-1 odeplot
-2 plotfield
-3 odesolve
-4 desolve
interactive_plotode(sin(t*y),[t,y])
interactive_plotode(-t*y,[t,y])

# odeplot plotode
1 odeplot(f(t,y),[t,y],[t0,y0]) trace la solution de y'=f(t,y) et y(t0)=y0 ou du système [x'=g(t,x,y),y'=h(t,x,y)] avec x(t0)=x0 et y(t0)=y0.
2 odeplot(f(t,y),[t,y],[t0,y0]) draws the solution of y'=f(t,y) and y(t0)=y0 or of the system [x'=g(t,x,y),y'=h(t,x,y)] with x(t0)=x0 and y(t0)=y0.
3 odeplot(f(t,y),[t,y],[t0,y0])) traza la solución de y'=f(t,y) con y(t0)=y0.
4 odeplot(f(t,y),[t,y],[t0,y0)) σχεδιάζει τη λύση της y'=f(t,y) με y(t0)=y0.
0 Expr,VectVar,VectInitCond
-1 interactive_plotode
-2 fieldplot
-3 odesolve
-4 desolve
odeplot(sin(t*y),[t,y],[0,1])
odeplot(sin(t*y),[t=-10..10,y],[0,1])
odeplot(sin(t*y),[t=-3..3,y],[0,1],tstep=0.1,color=vert)
odeplot([x-0.3*x*y, 0.3*x*y-y], [t,x,y],[0,0.3,0.7])
odeplot([x-0.3*x*y, 0.3*x*y-y], [t,x,y],[0,0.3,0.7],plan)
odeplot([-y+b,-1+(x-a)^2+(y-b)^2],[t=-3..3,x,y],[0,a+1,b+0.5],plan)
odeplot(5*[-y,x],[t=0..1,x,y],[0,0.3,0.7],tstep=0.05,plan)

# pmin
1 Renvoie le polynôme minimal de la matrice A ou le polynôme minimal du nombre algébrique a.
2 Returns the minimal polynomial of the matrix A or the minimal polynomial of the algebraic number a.
3 Devuele el polinómio mínimo de una matriz A o el polinómio mínimo de un número algebraica a.
4 Επιστρέφει το ελάχιστο πολυώνυμο του Α (πίνακα) ή το ελάχιστο πολυώνυμο του a
(αλγεβρική αριθμού).
0 Mtrx(A)||Real(a),[Var]
-1 pcar
-2 jordan
pmin([[1,0],[0,1]])
pmin([[1,0],[0,1]],x)
pmin(sqrt(2)+sqrt(3))
pmin(sqrt(2)+sqrt(3),x)

# order
1 Renvoie l'ordre d'un element g de (Z/nZ)^* ou d'un corps fini
2 Returns element order of g in (Z/nZ)^* or in a finite field
0 g
order(3 % 7)
 GF(3,5,g); order(g^2+g+1);

# plotpolar polarplot DrawPol courbe_polaire
1 plotpolar(f(x),x,a,b) trace la courbe en polaire r=f(x) pour x dans [a,b].
2 plotpolar(f(x),x,a,b) draws the polar curve r=fx) for x in [a,b].
3 plotpolar(f(x),x,a,b) traza la curva polar r=f(x) para x en [a,b].
4 plotpolar(f(x),x,a,b) σχεδιάζει την πολική καμπύλη r=fx) για x στο [a,b].
0 Expr,Var,VarMin,VarMax
-1 plotparam
-2 plotfunc
-3 plotpolar
plotpolar(sin(2*x),x,0,pi)
plotpolar(sin(2*x),x,0,pi,tstep=0.1)

# rgb
1 Option de la commande affichage (ou display) pour définir les couleurs RGB.
2 Option of the display (or affichage) command to defined colors RGB.
3 Opción de la instrucción display (o affichage) para que definir colores RGB.
4 Επιλογή της εντολής display (ή affichage) για τον ορισμό των χρώματα RGB.
0 Opt
-1 display
-2 filled
 redcolor:=rgb(0.99,0,0);display(square(0,2+i),filled+redcolor)
 greencolor:=rgb(0,0.99,0);display(square(0,2+i),filled+greencolor)
 bluecolor:=rgb(0,0,0.99);display(square(0,2+i),filled+bluecolor)
 greycolor:=rgb(0.5,0.5,0.5);display(square(0,2+i),filled+greycolor)
 F:=display(square(0,2+i),filled+rgb(rand(),rand(),rand()))
 L:=rand(),rand(),rand();affichage(square(0,2+i),rgb(L)+rempli);legend(0.2,[L])

# set_pixel draw_pixel
1 Colorie un pixel et ajoute a la liste des pixels. Utiliser show_pixelx() pour afficher.
2 Pixel on and adds to the list of pixel. Run show_pixels() to display
0 Intg(x),Intg(y),Intg(col)
-1 clear
-2 show_pixels
-3 draw_line
-4 draw_rectangle
-5 draw_polygon
 clear(); draw_pixel(1,2,red); show_pixels();

# draw_line
1 Segment pixelise
2 Pixelised segment
0 Intg(x1),Intg(y1),Intg(x2),Intg(y2),Intg(col)
-1 draw_pixel
-2 draw_rectangle
-3 draw_polygon
 clear(); draw_line(10,10,60,60,blue); show_pixels();

# draw_rectangle
1 Rectangle pixelise, ajouter filled a la couleur pour remplir le rectangle
2 Pixelised rectangle, add filled to the color to fill the rectangle
0 Intg(x),Intg(y),Intg(w),Intg(h),Intg(col)
-1 draw_pixel
-2 draw_line
-3 draw_polygon
 clear(); draw_rectangle(10,20,30,40,red); show_pixels();
 clear(); draw_rectangle(10,20,30,40,red+filled); show_pixels();

# draw_polygon
1 Polygone pixelise, ajouter filled a la couleur pour remplir le polygone
2 Pixelised polygon, add filled to the color to fill the rectangle
0 Lst(l),Intg(col)
-1 draw_pixel
-2 draw_line
-3 draw_rectangle
 clear(); draw_polygon([[50,30],[100,10],[20,70]],red); show_pixels();
 clear(); draw_polygon([[50,30],[100,10],[20,70]],red+filled); show_pixels();

# draw_circle
1 Cercle pixelise, ajouter filled a la couleur pour remplir le cercle
2 Pixelised circle, add filled to the color to fill the circle
0 Intg(x),Intg(y),Intg(r),Intg(col)
-1 draw_pixel
-2 draw_arc
 clear(); draw_circle(100,60,20,blue); show_pixels();
 clear(); draw_circle(100,60,20,blue+filled); show_pixels();

# draw_arc
1 Arc d'ellipse pixelise
2 Pixelised ellipsis arc
0 Intg(x),Intg(y),Intg(rx),Intg(ry),Real(theta1),Real(theta2),Intg(col)
-1 draw_pixel
-2 draw_circle
 clear(); draw_arc(100,80,40,20,0,pi,blue); show_pixels();

# clear
1 Efface la liste des pixels
2 Clear the list of pixels
0 NULL
-1 set_pixel
-2 show_pixels
clear()

# show_pixels
1 Affiche la liste des pixels
2 Displays the list of pixels
0 NULL
-1 set_pixel
-2 clear
show_pixels()

# pixon
1 Allume un pixel
2 Pixel on
3 Activa un pixel
4 Ενεργοποίηση εικονοστοιχείου
0 Real(x),Real(y)
-1 set_pixel
-2 pixoff
pixon(1,2)

# pixoff
1 Éteint un pixel.
2 Pixel off.
3 Desactiva un pixel.
4 Απενεργοποίηση εικονοστοιχείου.
0 Real(x),Real(y)
-1 set_pixel
-2 pixon
pixoff(1,2)

# potential
1 Renvoie U tel que gradient(U)=derive(U,Vector_of_variable)=V.
2 Returns U such as derive(U,Vector_of_variable)=V.
3 Devuelve U tal que grad(U)=derive(U,Vector_of_variable)=V.
4 Επιστρέφει U τέτοιο ώστε derive(U,Vector_of_variable)=V.
0 Vect(V),VectVar
-1 derive
-2 vpotential
potential([2*x*y+3,x^2-4*z,-4*y],[x,y,z])

# powmod powermod
1 Calcule a^n modulo p ou modulo p,P(x) (puissance rapide).
2 Computes a^n modulo p or modulo p,P(x) (fast algorithm).
3 Calcula a^n modulo p o modulo p,P(x) (cálculo rápido).
4 Υπολογίζει a^n modulo p ή modulo p,P(x) (ταχεία υλοποίηση).
8 快速幂同余。 整数求幂与同余。 对于整数 a、n 及 p，返回 a^n mod p。
0 Intg(a),Intg(n),Intg(p),[Expr(P(x))],[Var]
-1 pow
-2 ^
powmod(17,452,19)
powmod(x+1,452,19,x^4+x+1,x)

# pow
1 Calcule a^n.(puissance rapide).
2 Computes a^n (fast algorithm).
3 Calcula a^n(cálculo rápido).
4 Υπολογίζει a^n (ταχεία υλοποίηση).
8 返回 a 的 n 次幂的结果。
0 Intg(a),Intg(n)
-1 ^
-2 powmod
pow(17,452)
pow(x+1,452)

# preval
1 Renvoie F(b)-F(a).
2 Returns F(b)-F(a).
3 Devuelve F(b)-F(a).
4 Επιστρέφει F(b)-F(a).
8 返回 F(b)-F(a)。
0 Expr(F(Var)),Real(a),Real(b),[Var]
-1 subst
-2 int
preval(x^2-2,2,3)
preval(y^2-2,2,3,y)
preval(int(x),0,1)
preval(int(y,y),0,1,y)

# prevprime
1 Nombre premier ou pseudo-premier précédent un entier a donné.
2 Previous prime or pseudo-prime before a given integer a.
3 Número primo o pseudo-primo previo al entero dado a.
4 Πρώτος ή ψευδο-πρώτος αριθμός πριν από δοθέντα ακέραιο.
8 前一素数。  返回整数 a 的前一个素数。
0 Intg(a)
-1 nextprime
-2 is_prime
-3 ithprime
prevprime(9856989898999)
prevprime(97160249868928888261606009)

# prepend
1 Rajoute un élément à un ensemble ou le met au début d'une liste ou d'une chaîne (L:=prepend(L,a) ou L.prepend(a)).
2 Puts an element to a set or at the beginning of a list or of a string (L:=prepend(L,a) or L.prepend(a)).
3 Pone el elemento al principio de la lista (conjunto o cadena) (L:=prepend(L,a) o L.prepend(a)).
4 Ένθεση στοιχείου στην αρχή μιας λίστας (σύνολο ή συμβολοσειράς) (L:=prepend(L,a)  ή L.prepend(a)).
0 Lst||Set||Str(L),Elem(n)
-1 append
-2 concat
prepend([1,2],3)
prepend(set[1,2],3)
 L:=[1,2];L:=prepend(L,3)
 L:=[1,2];L.prepend(L,3) 
 S:=set[1,2];S:=prepend(L,3)
 S:=set[1,2];S.prepend(L,3)

# print Disp
1 Permet d'afficher un résultat intermédiaire dans un programme.
2 Prints a result in a program.
3 Permite mostrar un resultado intermedio en un programa.
4 Εκτύπωση ενδιαμέσου αποτελέσματος σε ένα πρόγραμμα.
8 将 expr 或 string 结果打印到终端。
0 Expr|| Str
-1 printf
print("salut")
print(a)

# printf
1 Affichage en mode 2d
2 2d printing
0 Expr
-1 print
printf(sqrt(2))
printf("%gen+%gen=%gen",a,b,a+b)

# projection
1 projection(C,A) est la projection orthogonale de A sur la courbe C.
2 projection(C,A) is the orthogonal projection of A on the curve C.
3 projection(C,A) es la proyección ortogonal de A sobre la curva C.
4 projection(C,A) είναι η ορθοργώνια προβολή του A πάνω στην καμπύλη C.
8 射影。
0 Curve,Pnt
-1 perpendicular
 H:=projection(line(i,1-i),1+i)
 K:=projection(circle(0,1),1+i)
 J:=projection(circle(0,1),point(1+2*i))

# program
1 Mot réservé.
2 Reserved word.
3 Palabra reservada.
4 Δεσμευμένη λέξη.
0 
-1 

# proc
1 Début de procédure (comme en MuPAD).
2 Begin a procedure (like with MuPAD).
3 Empieza un proceso (como en MuPAD).
4 Εκκίνηση διαδικασίας (όπως η MuPAD).
0 
-1 
 proc ... begin ... end_proc;

# Psi
1 Psi(a,n)=dérivée n-ième de la fonction DiGamma (=ln@Gamma) au point a (Psi(a,0)=Psi(a)).
2 Psi(a,n)=n-th derivative of the function DiGamma (=ln@Gamma) at point a (Psi(a,0)=Psi(a)).
3 Psi(a,n)=n-ésima derivada de la función DiGamma (=ln@Gamma) en el punto a (Psi(a,0)=Psi(a)).
4 Psi(a,n)=n-στη παράγωγος της DiGamma συνάρτησης (=ln@Gamma) στο σημείο a (Psi(a,0)=Psi(a)).
0 Real(a),Intg(n)
-1 Gamma
Psi(3,1)

# ptayl
1 Renvoie le polynôme de Taylor de l'expression au point à l'ordre spécifié ou le polynôme Q tel que P(x)=Q(x-a).
2 Returns the Taylor polynomial of the expression at the given point and order or a polynomial Q such that P(x)=Q(x-a).
3 Devuelve el polinomio de Taylor Q tal que P(x)=Q(x-a).
4 Επιστρέφει το πολυώνυμου του Taylor Q τέτοιου ώστε P(x)=Q(x-a).
0 Expr||Poly(P(Var)),Var=Real || Real(a),[Order || Var]
-1 series
-2 taylor
ptayl(sin(x),x=0,5)
ptayl(x^2+2*x+1,1)
ptayl(x^2+2*x+1,-1)
ptayl(y^2+2*y+1,1.1,y)
ptayl(y^3+y^2+2*y+1,2,y)
 subst(ptayl(y^3+y^2+2*y+1,2,y),y,y-2)

# purge DelVar del
1 purge(nomvar) enlève la valeur stockée dans la variable nomvar.
2 purge(varname) unassign the variable varname.
3 purge(nomvar) borra el valor guardado en la variable nomvar.
4 purge(varname) αποανάθεση της μεταβλητής με όνομα varname.
0 Var
-1 sto
-2 restart
-3 assume
-4 about
purge(t)
purge(C)

# pwd
1 Répertoire de travail actuel.
2 Current working directory.
3 Repertorio de trabajo actual.
4 Τρέχον κατάλλογος εργασίας.
0 NULL
-1 cd
pwd()

# p1oc2
1 Renvoie la permutation produit de p1 et de c2.
2 Returns the permutation product of p1 and c2.
3 Devuelve la permutación producto de p1 y c2.
4 Επιστρέφει το μεταθετικό γινόμενο του p1 και c2.
0 Permut,Cycle
-1 c1op2
-2 p1op2
p1oc2([0,2,1],[2,1,3])

# p1op2
1 Renvoie la permutation produit de p1 et de p2.
2 Returns the permutation product of p1 and p2.
3 Devuelve la permutación producto de p1 y p2.
4 Επιστρέφει το μεταθετικό γινόμενο του p1 και p2.
0 Permut,Permut
-1 c1op2
-2 p1oc2
p1op2([0,2,1],[1,0,3,2])

# qr
1 Pour A matrice numérique, renvoie R (right) telle que A=QR et Q orthogonale.
2 For a numerical matrix A, returns R (right) such that A=QR and Q orthogonal.
3 Para una matriz numérica A, devuelve R (derecha) tal que A=QR y Q es ortogonal.
4 Για έναν αριθμητικό πίνακα Α, επιστρέφει R (δεξιό) τέτοιο ώστε A=QR και Q ορθογώνιος.
0 Mtrx
-1 lu
qr([[1,2],[3,4]])

# quote hold
1 Retourne son argument sans l'évaluer (et aussi a:=quote(a) qui purge a).
2 Returns its argument unevaluated (and also a:=quote(a) that purge a).
3 Devuelve su argumento sin evaluarlo (y también a:=quote(a) que purge a).
4 Αναστολή υπολογισμών. Επιστρέφει το όρισμα μη-αποτιμημένο (και επίσης a:=quote(a) καθαρίζει το a).
0 Expr
-1 
quote(1+2)
quote(1/x+1/(x-1))
quote((x+1)*(x-1))

# quo
1 Quotient euclidien de 2 polynômes.
2 Euclidean quotient of 2 polynomials.
3 Cociente euclidiano de 2 polinomios.
4 Ευκλείδιο πηλίκο 2 πολυωνύμων.
8 商（多项式 综合除法）
0 (Vect or Poly),(Vect or Poly),[Var]
-1 rem
-2 quorem
-3 Quo
-4 iquo
quo([1,2,3,4],[-1,2])
quo(x^3+2x^2+3x+4,-x+2)
quo(t^3+2t^2+3t+4,-t+2,t)

# Quo
1 Renvoie le quotient euclidien de 2 polynômes sans l'évaluer.
2 Returns the euclidean quotient of 2 polynomials without evaluation.
3 Cociente euclidiano de 2 polinomios sin evaluar.
4 Επιστρέφει το ευκλείδιου πηλίκο 2 πολυωνύμων δίχως αποτίμηση.
0 (Vect or Poly),(Vect or Poly),[Var]
-1 quo
-2 quorem
Quo([1,2,3,4],[-1,2])
Quo(x^3+2x^2+3x+4,-x+2)
Quo(t^3+2t^2+3t+4,-t+2,t)

# quorem divide
1 Quotient et reste euclidien de 2 polynômes.
2 Euclidean quotient and remainder of 2 polynomials.
3 Cociente y resto euclidianos de 2 polinomios.
4 Ευκλείδιο πηλίκο και υπόλοιπο 2 πολυωνύμων.
0 (Vect or Poly),(Vect or Poly),[Var]
-1 rem
-2 quo
-3 iquorem
quorem([1,2,3,4],[-1,2])
quorem(x^3+2x^2+3x+4,-x+2)
quorem(t^3+2t^2+3t+4,-t+2,t)
quorem(t^4-1,(t+1)^2,t)

# q2a
1 q2a(q(x,y),[x,y])=la matrice symétrique associée à la forme quadratique q.
2 q2a(q(x,y),[x,y])=the symmetric matrix associated to the quadratic form q.
3 q2a(q(x,y),[x,y])=matriz simétrica asociada a la forma cuadrática q.
4 q2a(q(x,y),[x,y])=ο συμμετρικός πίνακας συσχετισμένος με την τετραγωνική μορφή q.
0 QuadraForm, VectVar
-1 a2q
q2a(x^2+2*x*y+2*y^2,[x,y])

# rand random
1 rand(n)=un entier (resp rand(p,n)=un réel ou rand(p..n)=une fonction réelle) aléatoire uniformément distribué dans 0.. n-1 (resp dans [p; n]) (rand()=rand(0,1)=un réel de [0,1[) ou rand(n,b1,b2)=n entiers de [b1;b2] ou rand(n,L)=liste de n éléments de L.
2 rand(n)=a random integer (resp rand(p,n)=a real or rand(p..n)=a real function) with uniform distribution in 0..n-1 (resp in [p;n])(rand()=rand(0,1)=a real in [0,1[) or rand(n,b1,b2)=n integers between b1 and b2 or rand(n,L)=list of n elements of L.
3 rand(n)=un número (resp rand(p,n)=un número real o rand(p..n)=una función real) aleatorio distribuido en 0..n-1 (resp en [p;n]) (rand()=rand(0,1)) o rand(n,b1,b2)= enteros entre b1 y b2 o rand(n,L)=lista de n elementos de L.
4 rand(n)=έναν τυχαίο ακέραιο (αντίστοιχα rand(p,n)=ένα πραγματικό ή rand(p..n)=μια πραγματική συνάρτηση) ομοιόμορφα κατανεμημένο στο 0..n-1 (αντίστοιχα στο [p;n])(rand()=rand(0,1)) ή rand(n,b1,b2)=n ακέραιους μεταξύ b1 και b2 ή rand(n,L)=λίστας n στοιχεία του L.
0 Intg(n) or Interval(p..n) or NULL,[Intg(b1) or Lst(L)],[Intg(b2)]
-1 srand
-2 randpoly
-3 ranm
-4 randvector
-5 hasard
rand(4)
rand()
rand(0,2)
rand(0..2)()
 f:=rand(0..2)
rand(3,1,10)
rand(3,["r","r","r","b","n"])
 L:=["r","r","r","b","n"];L3:=rand(L,3)
 L:=["r","r","r","b","n"];L3:=L.rand(3)
 L:=["r","r","r","b","n"];a:=rand(L)
 L:=["r","r","r","b","n"];a:=L.rand()

# choice
1 choice(L)=rand(L)=un élément de L tiré au hasard.
2 choice(L)=rand(L)=one extracted element of L.
3 choice(L)=rand(L)=  un elemento de L.
4 choice(L)=rand(L)
0 Lst(L)
-1 rand 
-2 sample
choice([1,2,3,4,5,6])
choice(["r","r","r","b","n"])
 L:=[1,2,3,4,5,6];L:=choice(L)
 L:=[1,2,3,4,5,6];L.choice()

# sample
1 sample(L,n)= rand(n,L)=liste de n éléments de L tirés sans remise.
2 sample(L,n)= rand(n,L)=list of de n extracted elements of L without throw-in.
3 sample(L,n)= rand(n,L)=lista de n elementos de L.
4 sample(L,n)= rand(n,L)=λίστας n στοιχεία του L.
0 Lst(L),Intg(n)
-1 rand 
sample([1,2,3,4,5,6],6)
sample([1,2,3,4,5,6],3)
sample(["r","r","r","b","n"],3)
 L:=[1,2,3,4,5,6];L:=sample(L,3)
 L:=[1,2,3,4,5,6];L.sample(3)
 
# randint
1 randint(n1,n2)=un entier entre n1 et n2 (bornes incluses). 
2 randint(n1,n2)=an integer in [n1, n2] or [n2,n1].
3 randint(n1,n2)=un número un entero en [n1, n2] o [n2,n1].
4 randint(n1,n2)= ενός ακεραίο στο [n1, n2]  ή [n2,n1]
0 Intg(n1),Intg(n2)
-1 rand 
randint(1,10)
randint(-1,-10)

# hasard
1 (hasard n)=un entier (resp (hasard p,n)=un réel ou hasard(p..n)=une fonction réelle) aléatoire uniformément distribué dans 0.. n-1 (resp dans [p; n]) (hasard ou (hasard 0,1)=un réel aléatoire de [0,1[) ou hasard(n,b1,b2)=n entiers de [b1;b2] ou hasard(n,L)=n éléments de L. Si hasard a un seul argument il peut se passer de () (compatibilité langage tortue).
2 (hasard n)=a random integer (resp (hasard p,n)=a real or hasard(p..n)=a real function) with uniform distribution in 0..n-1 (resp in [p;n])(hasard= (hasard 0,1)=a random real in [0,1[) or hasard(n,b1,b2)=n integers between b1 and b2 or hasard(n,L)=n elements of L. If hasard has only one argument, () are not necessary (compatibility with turtle language).
3 (hasard n)=un número (resp hasard(p,n)=un número real o hasard(p..n)=una función real) aleatorio distribuido en 0..n-1 (resp en [p;n]) (hasard =(hasard 0,1)) o nhasard(n,b1,b2)= enteros entre b1 y b2 o hasard(n,L)=n elementos de L. Si hasard tiene un sólo arguemnto, no se tiene que poner () (compatibilidad lenguaje tortuga).
4 (hasard n)=έναν τυχαίο ακέραιο (αντίστοιχα (hasard p,n)=ένα πραγματικό ή hasard(p..n)=μια πραγματική συνάρτηση) ομοιόμορφα κατανεμημένο στο 0..n-1 (αντίστοιχα στο [p;n])(hasard=(hasard 0,1)) ή hasard(n,b1,b2)=n ακέραιους μεταξύ b1 και b2 ή hasard(n,L)=n στοιχεία του L. Εάν η hasard έχει ένα μόνο όρισμα τότε οι () δεν είναι απαραίτητες (συμβατότητα με τη γλώσσα προγραμματισμού για την χελώνα).
0 Intg(n) or Interval(p..n) or NULL,[Intg(b1) or Lst(L)],[Intg(b2)]
-1 rand
-2 randpoly
-3 ranm
-4 randvector
-5 srand
 hasard 4
 hasard(4)
hasard(0,2)
 hasard 0..2
 f:=hasard 0..2
hasard(3,1,10)
hasard(3,["r","r","r","b","n"])

# randbinomial
1 Renvoie un entier aléatoirement distribué selon la loi binomiale B(n,p) i.e. le nombre de succès dans une suite de n tirages indépendants lorsque pour chaque tirage, un succès est de probabilité p.
2 Returns a random integer with binomial distribution B(n,p) i.e. the number of success for n independant tests where for each test, the success probability is p.
3 Devuelve un número aleatorio distribuido según la ley binomimal B(n,p).
4 Επιστρέφει έναν τυχαίο πραγματικό με κατανομή B(n,p).
0 Intg(n),Real(p)
-1 rand
-2 randpoly
-3 ranm
-4 randvector
-5 randexp
-6 randnorm
-7 randpoisson
-8 randgeometric
-9 randmultinomial
randbinomial(10,0.4)
randbinomial(100,0.8)

# randmultinomial
1 Renvoie un index ou un élément d'une liste K, aléatoirement selon la loi multinomiale de probabilités données par une liste P.
2 Returns a random index or list element according to a multinomial distribution probability list P.
3 Devuelve un índice o un elemento de K aleatorio distribuido según la ley multinomimal de probabilidad P.
0 List(P),[List(K)]
-1 rand
-2 randpoly
-3 ranm
-4 randvector
-5 randexp
-6 randnorm
-7 randpoisson
-8 randgeometric
-9 randbinomial
randmultinomial([1/2,1/3,1/6])
randmultinomial([1/2,1/3,1/6],["R","V","B"])

# randgeometric
1 Renvoie un entier aléatoirement distribué selon la loi géométrique de paramètre p.
2 Returns a random integer following geometric distribution of parameter p.
0 Real(p)
-1 rand
-2 randpoly
-3 ranm
-4 randvector
-5 randexp
-6 randnorm
-7 randpoisson
-8 randbinomial
-9 randmultinomial
randgeometric(0.4)

# randpoisson
1 Renvoie un entier aléatoirement distribué selon la loi de poisson P(λ).
2 Returns a random integer with poisson distribution P(λ).
3 Devuelve un número aleatorio distribuido según la ley poisson P(λ).
4 Επιστρέφει έναν τυχαίο πραγματικό με κατανομή P(λ).
0 Real(λ)
-1 rand
-2 randpoly
-3 ranm
-4 randvector
-5 randexp
-6 randbinomial
-7 randnorm
-8 randgeometric
-9 randmultinomial
randpoisson(5.4)
randpoisson(2.8)

# randchisquare
1 Renvoie un entier aléatoirement distribué selon la loi du chi^2 ayant n degrés de liberté, χ^2(n).
2 Returns a random integer with chi^2 distribution, χ^2(n).
3 Devuelve un número aleatorio distribuido según la ley Chi-cuadrado, χ^2(n).
4 Επιστρέφει έναν τυχαίο πραγματικό με κατανομή χ^2(n).
0 Intg(n)
-1 rand
-2 randpoly
-3 ranm
-4 randvector
-5 randexp
-6 randbinomial
-7 randnorm
-8 randgeometric
-9 randmultinomial
randchisquare(5)
randchisquare(2)

# randstudent
1 Renvoie un entier aléatoirement distribué selon la loi de Student S(n).
2 Returns a random integer with Student distribution S(n).
3 Devuelve un número aleatorio distribuido según la ley Student S(n).
4 Επιστρέφει έναν τυχαίο πραγματικό με κατανομή Student S(n).
0 Intg(n)
-1 rand
-2 randpoly
-3 ranm
-4 randvector
-5 randexp
-6 randbinomial
-7 randnorm
-8 randgeometric
-9 randmultinomial
randstudent(5)
randstudent(2)

# randfisher
1 Renvoie un entier aléatoirement distribué selon la loi de Fisher-Snedecor F(n,m).
2 Returns a random integer with Fisher-Snedecor distribution F(n,m).
3 Devuelve un número aleatorio distribuido según la ley Fisher-Snedecor F(n,m).
4 Επιστρέφει έναν τυχαίο πραγματικό με κατανομή Fisher-Snedecor F(n,m).
0 Intg(n),Intg(m)
-1 rand
-2 randpoly
-3 ranm
-4 randvector
-5 randexp
-6 randbinomial
-7 randnorm
-8 randgeometric
-9 randmultinomial
randfisher(5,2)
randfisher(2,4)

# randnorm randNorm normalvariate
1 Renvoie un réel aléatoirement distribué selon la loi normale N(mu,sigma).
2 Returns a random real with normal distribution N(mu,sigma).
3 Devuelve un número aleatorio distribuido según la ley normal N(mu,sigma).
4 Επιστρέφει έναν τυχαίο πραγματικό με κανονική κατανομή N(μ,σ).
0 Real(mu),Real(sigma)
-1 rand
-2 randpoly
-3 ranm
-4 randvector
-5 randexp
-6 randbinomial
-7 randpoisson
-8 randgeometric
-9 randmultinomial
randnorm(0,1)
randnorm(2,1)

# randexp expovariate
1 Renvoie un réel aléatoirement distribué selon la loi exponentielle de paramètre a>0.
2 Returns a random real according to the exponential distribution of parameter a>0.
3 Devuelve un número aleatorio distribuido según la ley exponencial (parámetro a>0).
4 Επιστρέφει έναν τυχαίο πραγματικό με Εκθετικό κατανομή (παράμετρο a>0).
0 Real(a)
-1 rand
-2 randpoly
-3 randnorm
-4 randvector
randexp(1)
randexp(2)

# randgammad gammavariate
1 Renvoie un réel aléatoirement distribué selon la loi Gamma de paramètre a>0 et b>0
2 Returns a random real according to the Gamma distribution of parameter a>0 and b>0
3 Devuelve un número aleatorio distribuido según la ley Gamma (parámetro a>0, b>0).
0 Real(a),Real(b)
-1 rand
-2 randpoly
-3 randnorm
-4 randvector
randgammad(1,2)
randgammad(1.5,4)

# randweibulld weibullvariate
1 Renvoie un réel aléatoirement distribué selon la loi de Weibull de paramètre a>0 et b>0
2 Returns a random real according to the Weibull distribution of parameter a>0 and b>0
3 Devuelve un número aleatorio distribuido según la ley Weibull (parámetro a>0, b>0).
0 Real(a),Real(b)
-1 rand
-2 randpoly
-3 randnorm
-4 randvector
randweibulld(1,2)
randweibulld(1.5,4)

# randbetad betavariate
1 Renvoie un réel aléatoirement distribué selon la loi Beta de paramètre a>0 et b>0
2 Returns a random real according to the Beta distribution of parameter a>0 and b>0
3 Devuelve un número aleatorio distribuido según la ley Beta (parámetro a>0, b>0).
0 Real(a),Real(b)
-1 rand
-2 randpoly
-3 randnorm
-4 randvector
randbetad(1,2)
randbetad(1.5,4)

# randpoly randPoly
1 Renvoie un polynôme de variable var (ou x), de degré n et dont les coefficients sont des entiers aléatoires équirépartis sur -99,+99 ou selon une loi.
2 Returns a polynomial of variable var (or x), of degree n and where the coefficients are random integers in the range -99 through 99 with uniform distribution or according to a law.
3 Devuelve el polinomio de variable var (o x), de grado n y cuyos coeficientes son enteros aleatorios equirepartidos entre -99 y 99.
4 Επιστρέφει ένα πολυώνυμο μεταβλητής var (ή x), βαθμού n και του οποίου οι συντελεστές είναι τυχαίοι ακέραιοι από -99 μέχρι 99 ομοιόμορφα κατανεμημένοι.
0 [Var(Var)],Intg(n),[law]
-1 ranm
-2 randvector
randpoly(5)
randpoly(t,8)
randpoly(t,8,-1..1)
randpoly([x,y],[10,3])
randpoly([x,y],[10,3],1 mod 7)
 GF(2,8,g);randpoly(t,8,g);randpoly([x,y],[2,3],g)

# ranm randMat randmatrix
1 Renvoie une liste de taille n ou une matrice n*m constituée d'entiers aléatoires uniformément distribués entre -99 et 99 ou de nombres aléatoires distribués selon la loi mise entre-quote.
2 Returns a list of size n or a n*m matrix that contains random integers in the range -99 through 99 with uniform distribution or contains random numbers according to the law put between quote.
3 Devuelve una lista de tamaño n o una matriz n*m constituida por enteros aleatorios uniformemente distribuidos entre -99 y 99 o de números aleatorios distribuidos según la ley puesta entre comillas.
4 Επιστρέφει μια λίστα μεγέθους n ή έναν n*m πίνακα που θα περιέχει τυχαίους ακέραιους από -99 μέχρι 99 ομοιόμορφα κατανεμημένους ή θα περιέχει τυχαίους αριθμούς σύμφωνα με την παρένθετο κατανομή.
8 创建一个具有指定行数和列数的随机矩阵。输入项是 –99 - 99 之间的整数。
0 Intg(n), [Intg(m)],[Interval or quote(DistribLaw)]
-1 idn
-2 randPoly
-3 rand
-4 randvector
ranm(3)
ranm(3,2)
ranm(3,2,6)
ranm(3,2,binomial,10,0.3)
ranm(3,2,multinomial,[1/2,1/3,1/6])
ranm(3,2,poisson,5.2)
ranm(3,2,normald,0,1)
ranm(3,2,exp,7/2)
ranm(3,2,poisson,1.2)
ranm(3,2,'rand(3)')
ranm(3,2,1..2)
ranm(3,5,multinomial,[1/2,1/3,1/6],["R","V","B"])
 GF(2,8,g);ranm(3,3,g)

# randvector ranv
1 Renvoie une liste de taille n constituée d'entiers aléatoires entre -99 et 99 ou (entre 0 et m-1) uniformément distribués ou de nombres aléatoires distribués selon la loi mise entre-quote.
2 Returns a list of size n that contains random integers in the range -99 through 99 (or in 0..m-1) with uniform distribution or contains random numbers according to the law put between quote.
3 Devuelve una lista de tamaño n constituida por enteros aleatorios uniformemente distribuidos entre -99 y 99 (o entre 0 y m-1) o de números aleatorios distribuidos según la ley puesta entre comillas.
4 Επιστρέφει μια λίστα μεγέθους n που θα περιέχει τυχαίους ακέραιους αριθμούς από -99 μέχρι 99 (0 μέχρι m-1) ομοιόμορφα κατανεμημένους ή τυχαίους αριθμούς σύμφωνα με την παρένθετο κατανομή.
0 Intg(n), [Intg(m)],[Interval or quote(DistribLaw)]
-1 idn
-2 randPoly
-3 rand
-4 ranm
randvector(3)
randvector(3,6)
randvector(3,normald,0,1)
randvector(3,poisson,1.2)
randvector(3,exponentiald,1.2)
randvector(3,multinomial,[1/2,1/3,1/6])
randvector(3,multinomial,[1/2,1/3,1/6],[a,b,c])
randvector(3,'rand(3)')
randvector(3,1..2)
 GF(2,8,g);randvector(3,g)

# random_variable randvar
2 Returns a random variable from a probability density function f or from list of weights (discrete variable).
0 Lst(W)||Mtrx(M)||Fnc(f),[params]
-1 randvector
-2 randmatrix
-3 rand
randvar(fisher,2,3)
randvar([["apple",1/3],["orange",1/4],["pear",1/5],["plum",13/60]])
randvar(k->1-(k/10)^2,range=-10..10)
randvar([3,1,2,5],[alpha,beta,gamma,delta])
randvar(gammad,mean=12,variance=4)
randvar(binomial,mean=18,stddev=4)
randvar(multinomial,[1/2,1/3,1/6],[a,b,c])
randvar(weibull,mean=12.5,variance=1)
randvar(uniform,mean=10,stddev=2)
randvar(uniform,e..pi)

# randperm shuffle
1 Renvoie une permutation aléatoire de [0,1,2,..,n-1] ou de la liste L.
2 Returns a random permutation of [0,1,2,..,n-1] or of the list L.
3 Devuelve una permutación aleatoria de [0,1,2,..,n-1] o de L.
4 Επιστρέφει μια τυχαία μετάθεση στο [0,1,2,..,n-1] ή στο L.
0 Intg(n)||Lst(L)
-1 permu2cycles
-2 is_permu
-3 permu2mat
randperm(4)
randperm(7)
randperm([1,3,5,7,9])
 L:=[1,3,5,7,9];L:=randperm(L)
 L:=[1,3,5,7,9];L.randperm()

# nextperm
1 Renvoie la permutation suivante dans l'ordre lexicographique.
2 Returns the next permutation with the lexicographic order.
3 Devuelve la permutación siguiente en orden lexicográfico.
4 Επιστρέφει την επόμενη μετάθεση κατά λεξικογραφική σειρά
0 Intg(n)
-1 prevperm
-2 is_permu
nextperm([0,2,1,3])
nextperm([0,3,2,1])

# prevperm
1 Renvoie la permutation précédente dans l'ordre lexicographique.
2 Returns the previous permutation with the lexicographic order.
3 Devuelve la permutación anterior en orden lexicográfico.
4 Επιστρέφει την προηγούμενη μετάθεση κατά λεξικογραφική σειρά
0 Intg(n)
-1 nextperm
-2 is_permu
prevperm([0,1,3,2])
prevperm([0,1,2,3])

# radius
1 rayon(C) donne le rayon du cercle C.
2 radius(C) gives the radius of the circle C.
3 radius(C) devuelve el radio de la circunferencia C.
4 radius(C) δίνει την ακτίνα του κύκλου C.
0 Crcle
-1 center
-2 circle
radius(incircle(-1,1-i,i))

# rcl
1 Rappelle le contenu d'une variable sans l'évaluer.
2 Recalls an identifier content, does not evaluate it.
3 Llama al contenido de una variable sin evaluarlo.
4 Επανακαλεί το περιεχόμενο μιας μεταβλητής, δίχως αποτίμηση.
0 Var
-1 
rcl(a)

# re real
1 Partie réelle d'un nombre complexe.
2 Returns the real part of a complex number.
3 Devuelve la parte real de un número complejo.
4 Επιστρέφει το πραγματικό μέρος ενός μιγαδικού αριθμού.
0 Cplx or LstCplx
-1 im
-2 conj
re(1+2*i)
re((1+2*i)^2)
real([1+2*i,(1+2*i)^2])

# rem
1 Reste euclidien de 2 polynômes.
2 Euclidean remainder of 2 polynomials.
3 Resto euclidiano de 2 polinomios.
4 Ευκλείδιο υπόλοιπο 2 πολυωνύμων.
8 余项（多项式 综合除法）
0 (Vect or Poly),(Vect or Poly),[Var]
-1 quo
-2 quorem
-3 Rem
-4 irem
rem([1,2,3,4],[-1,2])
rem(x^3+2x^2+3x+4,-x+2)
rem(t^3+2t^2+3t+4,-t+2,t)

# Rem
1 Renvoie le reste euclidien de 2 polynômes sans l'évaluer.
2 Returns the euclidean remainder of 2 polynomials without evaluation.
3 Resto euclidiano de 2 polinomios sin evaluar.
4 Επιστρέφει το ευκλείδιο υπόλοιπο 2 πολυωνύμων δίχως αποτίμηση.
0 (Vect or Poly),(Vect or Poly),[Var]
-1 rem
-2 quorem
Rem([1,2,3,4],[-1,2])
Rem(x^3+2*x^2+3*x+4,-x+2)
Rem(t^3+2*t^2+3*t+4,-t+2,t)

# remove
1 Enlève les occurrences a de l ou les éléments a qui vérifient f(a)=vrai.
2 Remove the occurrences a of l or the elements a such that f(a)=true.
3 Borra los elementos a de l tales que f(a)=verdadero.
4 Απομάκρυνση των στοιχείων a της l για τα οποία f(a)=true.
0 FncBool(f)||a,Lst(l)
-1 select
-2 suppress
remove(x->x>=5,[1,2,6,7])
remove(5,[1,2,5,6,7,5])

# reorder
1 Réordonne les variables de E selon l'ordre donné dans le 2ème argument.
2 Reorders the variables in E according to the order of the 2nd argument.
3 Reordena las variables en E según el orden dado en 2º argumento.
4 Επαναδιάταξη των μεταβλητών της Ε σύμφωνα με τη διάταξη του 2ου ορίσματος.
0 Expr, LstVar
-1 
-2
reorder(x^2+2*x+y^2,[y,x])

# resultant
1 Résultant de deux polynômes.
2 Resultant of two polynomials.
3 Resultante de 2 polinomios.
4 Απαλείφουσα 2 πολυωνύμων.
0 Poly,Poly,Var
-1 sylvester
-2 gcd
resultant(x^2-1,x^3-1,x)
resultant(x^3-p*x+q,3*x^2-p,x)

# sylvester
1 Matrice de Sylvester de deux polynômes.
2 Sylvester matrix of two polynomials.
3 Matriz de Sylvester de 2 polinomios.
4 Ο πίνακας Sylvester 2 πολυωνύμων.
0 Poly,Poly,Var
-1 resultant
sylvester(x^2-1,x^3-1,x)
sylvester(x^3-p*x+q,3*x^2-p,x)

# rootof
1 Polynôme fonction d'une racine d'un polynôme irréductible sur Q. Renvoie P(a) où a est la plus grande racine de Q.
2 Polynomial in terms of a root of an irreducible polynomial on Q. Returns P(a) with a the greatest root of Q.
3 Polinomio en términos de la raíz de un Q polinomio irreducible.
4 Πολυώνυμο συναρτήσει μιας ρίζας ενός ανάγωγου πολυωνύμου.
0 LstPoly(P),LstPoly(Q)
-1 
 normal(1/rootof([1,0],[1,0,10,0,1]))
 normal(1/rootof([1,0,0],[1,1,0,-1]))
 rootof(x^4+x+1):='j'; normal(j^5); 

# rotation
1 rotation(B,a1,A) (resp rotation(d,a1,A)) est le transformé de A par rotation de centre B (resp d'axe d) et d'angle a1.
2 rotation(B,a1,A)(resp rotation(d,a1,A)) is the transformed of A by rotation of center B (resp of axis d) and of angle a1.
3 rotation(B,a1,A)(resp rotation(d,a1,A)) es la transformación de A por rotación de centro B (resp eje d) y ángulo a1.
4 rotation(B,a1,A)(αντίστοιχα rotation(d,a1,A)) είναι ο μετασχηματισμός του Α μέσω περιστροφής κέντρου Β (αντίστοιχα άξονα d) και γωνίας a1.
8 2 维旋转 与 3 维旋转
0 (Pnt(B) or Cplx or Dr3),Angle(a1),(Pnt(A) or Curve)
-1 translation
-2 reflection
rotation(point(1+i),pi/2,point(i))
rotation(1+i,pi/3,line(i,1))
rotation(line(x=y,y=z),pi/2,point(1,-1,2))
 r:=rotation(1+i,pi/2);r(i)
 r:=rotation(line(x=y,y=z),pi/2);r(point(1,-1,2))

# rmbreakpoint
1 Efface un point d'arrêt.
2 Removes a breakpoint.
3 Quita un punto de ruptura.
4 Απομάκρυνση ενός σημείου διαφυγής.
0 Intg
-1 breakpoint
rmbreakpoint(1)

# rmwatch
1 Efface une variable de la table des variables affichées en pas-à-pas.
2 Clears a variables from the table of displayed variables in step/step.
3 Borra una variable de la tabla de variables mostrada en paso a paso.
4 Εκκαθάριση μιας μεταβλητής από τον πίνακα των εμφανισθέντων μεταβλητών, στην βήμα προς βήμα λειτουργία.
0 Var
-1 watch
rmwatch(a)

# rref gaussjord
1 Réduction sous forme échelonnée de AX=b (M=A|(-b)) [Réduction sur les k premières colonnes].
2 Row reduction to echelon form of AX=b (M=A|(-b)) [Reduction on columns 0..k-1]
3 Reducción a la forma escalonada de AX=b (M=A|(-b)) [Reducción sobre los columnas 0..k-1].
4 Αναγωγή σε κλιμακωτή μορφή του AX=b (M=A|(-b)).
8 行简阶梯性形式。 将矩形矩阵更改为其行简阶梯形矩阵。
0 Mtrx(M),[Intg(k)]||Opt
-1 ker
-2 image
-3 det
-4 Rref
-5 pivot
-6 ref
-7 keep_pivot
rref([[3,1,-2],[3,2,2]])
rref([[2,1,1,-1],[1,1,2,-1],[1,2,1,-4]])
rref([[2,1,1,-1],[1,1,2,-1],[1,2,1,-4]],2)
rref([[1,1,0,0,-a1],[0,1,1,0,-a2],[0,0,1,1,-a3],[1,0,0,1,-a4]],keep_pivot)

# keep_pivot
1 Option de la commande rref.
2 Option of the rref command.
3 Opción de rref.
4 Επιλογή της εντολής rref.
0 Opt
-1 rref
 rref([[1,1,0,0,-a1],[0,1,1,0,-a2],[0,0,1,1,-a3],[1,0,0,1,-a4]],keep_pivot)


# Rref
1 Renvoie la réduction sous forme échelonnée de AX=b (M=A|(-b)) sans évaluation.
2 Returns the row reduction to echelon form of AX=b (M=A|b) without evaluation.
3 Devuelve la reducción en forma escalonada de AX=b (M=A|b) sin evaluar.
4 Επιστρέφει την ανηγμένη κλιμακωτή μορφή του AX=b (M=A|(-b)) δίχως αποτίμηση
0 Mtrx(M)
-1 rref
Rref([[3,1,-2],[3,2,2]])
Rref([[2,1,1,-1],[1,1,2,-1],[1,2,1,-4]])

# ref
1 Réduction de Gauss de AX=b (M=A|(-b)).
2 Reduction of Gauss of AX=b (M=A|(-b)).
3 Reducción de Gauss de AX=b (M=A|(-b)).
4 Αναγωγή Gauss του AX=b (M=A|(-b)).
0 Mtrx(M)
-1 rref
-2 det
ref([[3,1,-2],[3,2,2]])
ref([[2,1,1,-1],[1,1,2,-1],[1,2,1,-4]])

# same
1 Test d'égalité.
2 Equality test.
3 Comprobación de igualdad.
4 Έλεγχος ισότητας.
0 Expr,Expr
-1 
same(a,b)
same((2-1)^2,2^2-2*2+1)

# sec
1 Sécante: sec(x)=1/cos(x).
2 Secant: sec(x)=1/cos(x).
3 Secante: sec(x)=1/cos(x).
4 Τέμνουσα sec(x)=1/cos(x).
8 正割。  正割函数; 即，1/cos(x)。
0 Expr
-1 cos
-2 asec
sec(pi/3)

# segment
1 segment(A,B) trace le segment AB et segment([xM,yM],[xN,yN]) trace le vecteur d'origine [xM,yM], de coordonnées [xN,yN] (i.e trace segment(M,point(M+N)) ou Option de la commande arc.
2 segment(A,B) draws the segment AB and segment([xM,yM],[xN,yN]) draws the vector as origin [xM,yM], of coordinates [xN,yN] (i.e draws segment(M,point(M+N)) or Option of the arc command.
3 segment(A,B) traza el segmento AB y segment([xM,yM],[xN,yN]) traza el vector con origen [xM,yM] de coordenadas [xN,yN] (i.e traza segment(M,point(M+N)) o Opción del comando .
4 segment(A,B) σχεδιάζει το ευθύγραμμο τμήμα ΑΒ ή Επιλογή της εντολής arc.
0 (Pnt or Cplx or Lst([xM,yM])),(Pnt or Cplx or Lst([xN,yN]),[Var],[Var] or Opt
-1 line
-2 arc
segment(i,1+i)
segment(point(i),point(1+i))
segment(point(i),point(1+i),A,B)
segment([-1,0],[2,1])
segment([-1,0],point([-1,0]+[2,1]))
 arc(i,1,pi/4,segment)
 affichage( arc(i,1,pi/4,segment),1+rempli)

# half_line
1 demi_droite(A,B) trace la demi-droite AB d'origine A.
2 half_line(A,B) draws the half-line AB with A as origin.
3 half_line(A,B) traza la media-recta AB con origen A.
4 half_line(A,B) σχεδιάζει την ημιευθεία ΑΒ με αρχή το Α.
0 (Pnt or Cplx),(Pnt or Cplx)
-1 line
half_line(i,1+i)
half_line(point(i),point(1+i))

# series
1 Développement limité ou asymptotique.
2 Series expansion at finite or infinite points.
3 Desarrollo en serie finito o asintótico.
4 Ανάπτυγμα πεπερασμένο ή ασυμπτωτικό.
0 Expr,Equal(var=limit_point),[Order],[Dir(1,0,-1)]
-1 limit
-2 taylor
-3 pad
-4 polynom
-5 truncate
series(sin(x)/x,x=0)
series(sin(x),x=0,6,polynom)
series(ln(x+x^2)-ln(x),x=0,1)
series((x^4+x+2)/(x^2+1),x=0,5)
 series("h",8); ln(1+h);
series(1/(1+x+y),[x,y],[0,0],5) 
series(sin(x*y),[x,y],[1,pi/2],3)
series(sin((1+h*t)*(pi/2+k*t)),t=0,3,polynom)(t=1)
series(y^2/x^3,[x,y],[1,-1],3)
series((-1+k*t)^2/(1+h*t)^3,t=0,3,polynom)(t=1)
series(subst(sin(x+y)+cos(y*x),[x,y],h*[x,y]),h=0,6,polynom)
series(subst(sin(x+y)+cos(y*x),[x,y],h*[x,y]),h=0,6,polynom)(h=1)
 truncate(series(sin(x),x=0,6),6)

# select
1 Sélectionne les éléments e de l vérifiant f(e)=vrai.
2 Selects the elements e of l such that f(e)=true.
3 Selecciona los elementos e de l tales que f(e)=verdadero.
4 Επιλέγει τα στοιχεία e της l που ικανοποιούν f(e)=true.
0 FncBool(f),Lst(l)
-1 remove
-2 range
select(x->x>=5,[1,2,6,7])
select(x->isprime(x),range(20)).^2

# sign
1 Retourne le signe (-1,0,+1) de l'argument.
2 Returns the sign (-1,0,+1) of its argument.
3 Devuelve el signo (-1,0,+1) del argumento.
4 Επιστρέφει το πρόσημο του ορίσματος (-1,0,+1).
8 返回值符号。 如果是正数，则结果为 1；如果是负数，则为 -1。如果是零，则结果为零。
0 Expr
-1 abs
sign(-4)
sign(4-5)

# signature
1 Renvoies la signature d'une permutation.
2 Returns the signature of a permutation.
3 Devuelve la signatura de una permutación.
4 Επιστρέφει το ίχνος μιας μετάθεσης.
0 Permut
-1 permu2cycles
-2 is_permu
signature([1,0,3,4,2])

# sin SIN
1 Sinus ou Option de la commande convert ou convertir (id trigsin).
2 Sine or Option of the convert or convertir command (id trigsin).
3 Seno o Opción del comando convert o convertir (id trigsin).
4 Ημίτονο ή Επιλογή της εντολής convert ή convertir (id trigsin).
8 SIN（正弦/余弦）: 正弦函数。返回数值的正弦。  数值可以是度或弧度，取决于主视图模式或符号设置中“角度单位”的设置。
0 Expr or Opt
-1 asin
-2 convert
-3 trigsin
sin(0)
 convert(cos(x)^4+sin(x)^2,sin)

# sinh
1 Sinus hyperbolique.
2 Hyperbolic sine.
3 Seno hiperbólico.
4 Υπερβολικό ημίτονο.
8 双曲正弦。
0 Expr
-1 asinh
sinh(0)

# similarity
1 similitude(B,k,a1,A)=transformé de A dans la similitude (centre B ou axe d, rapport k,angle a1) (ou aussi homothetie(B,k*exp(i*a1),A)).
2 similarity(B,k,a1,A)=transformed of A in the similarity (center B or axis d, coeff k,angle a1) (or also homothety(B,k*exp(i*a1),A)).
3 similarity(B,k,a1,A)=transformación de A en la similitud (centro B o eje d, coef k, ángulo a1) (o también homothety(B,k*exp(i*a1),A)).
4 similarity(B,k,a1,A)=μετασχηματισμός του Α με ομοιότητα (κέντρο B ή άξονα d, συντελεστές k,γωνία a1)(και επίσης homothety(B,k*exp(i*a1),A)).
8 相似性。
0 Pnt or Dr3,Real,Angle,Pnt
-1 homothety
similarity(1+i,2,pi/3,i)
similarity(line(x=y,y=z),2,pi/3,point(-1,2,1))
 s:=similarity(1+i,2,pi/3);s(i)
 s:=similarity(line(x=y,y=z),2,pi/3),s(point(-1,2,1))

# size nops length len
1 Renvoie la longueur d'une liste, d'une chaîne de caractères ou d'une suite.
2 Returns the size of a list, a string or a sequence.
3 Devuelve el tamaño de una lista, cadena o secuencia de caracteres o de una secuencia.
4 Επιστρέφει το μέγεθος μιας λίστας, μιας συμβολοσειράς ή μιας ακολουθίας.
8 列大小。  返回列中元素的数量。 实参列可以是列本身或列名。
0 Lst or Str or Seq
-1 sizes
-2 dim
-3 degree
size([1,2,3])
size("bonjour")
size(1,2,3)

# sizes
1 Renvoie la liste des longueurs d'une liste de listes.
2 Returns the list of sizes of a list of lists.
3 Devuelve la lista de tamaños de una lista de listas.
4 Επιστρέφει την λίστα των μεγεθών μιας λίστας λιστών.
0 Lst or Str or Seq
-1 size
-2 dim
sizes([[1,2,3],[1,2],[1]])

# zeros
1 Renvoie la liste des zéros (réels ou complexes selon le mode) de l'expression (ou la matrice dont les lignes sont les solutions du système : expression1=0,expression2=0...).
2 Returns the zeros (real or complex according to the mode) of the expression (or the matrix where the lines are the solutions of the system : expression1=0,expression2=0...).
3 Devuelve la lsita de zeros (reales o complejos según el modo) de la expresión (o la matriz cuyas filas son soluciones del sistema : expression1=0,expression2=0...).
4 Επιστρέφει τις ρίζες (πραγματικές ή μιγαδικές ανάλογα με τον τρόπο λειτουργίας) μιας παράστασης (ή τον πίνακα του οποίου οι γραμμές είναι λύσεις του συστήματος: expression1=0,expression2=0...).
0 Expr,[Var]
-1 
zeros(x^2+4)
zeros(ln(x)^2-4)
zeros(ln(y)^2-2,y)
zeros([x^2-1,x^2-y^2],[x,y])

# solve resoudre
1 Résout une équation ou un système polynomial.
2 Solves a (or a set of) polynomial equation.
3 Resuelve una ecuación o un sistema de ecuaciones polinomiales.
4 Επίλυση μιας εξίσωσης ή ενός συστήματος πολυωνυμικών εξισώσεων.
8 方程求解。
0 Expr,[Var]
-1 linsolve
-2 proot
-3 fsolve
-4 csolve
-5 nSolve
solve(x^2-3=1)
solve(x^3-3*y,y)
solve([y-z=0,z-x=0,x-y=0,x-1+y+z=0],[x,y,z])
solve([x^2-y^2=0,x^2-z^2=0],[x,y,z])

# line_segments
1 Renvoie la liste des arêtes (1 arête=segment) du polyèdre P.
2 Returns the list of the line_segments (1 line=segment) of the polyhedron P.
3 Devuelve la lista de las aristas (1 arista=segment) de un poliedro P.
4 Επιστρέφει την λίστα των ακμών (1 ακμή=ευθύγραμμο τμήμα) του πολυέδρου P.
0 Polygon or Polyedr(P)
-1 polyhedron
line_segments(polyhedron([0,0,0],[0,5,0],[0,0,5],[1,2,6]))
line_segments(polyhedron([0,0,0],[0,5,0],[0,0,5],[1,2,6]))[2]

# faces
1 Renvoie la liste des faces (1 face=matrice(n,3) dont les n lignes sont les n sommets de la face) du polyèdre P.
2 Returns the list of the faces (1 face=matrix(n,3) where the n rows are the n vertices of the face) of the polyhedron P.
3 Devuelve la lista de los lados (1 lado=matriz(n,3) donde las n filas son los n vértices del lado) de un poliedro P.
4 Επιστρέφει την λίστα των εδρών (1 έδρα=matrix(n,3) της οποίας οι n γραμμές είναι οι κορυφές της έδρας) του πολυέδρου P
0 Polygon or Polyedr(P)
-1 polyhedron
faces(polyhedron([0,0,0],[0,5,0],[0,0,5],[1,2,6]))
faces(polyhedron([0,0,0],[0,5,0],[0,0,5],[1,2,6]))[2]

# vertices vertices_abc
1 Renvoie la liste des sommets du polygone ou polyèdre P.
2 Returns the list of the vertices of the polygon or polyhedron P.
3 Devuelve la lista de los vértices de un polígono o poliedro P.
4 Επιστρέφει την λίστα των κορυφών του πολυγώνου ή του πολυέδρου P.
0 Polygon or Polyedr(P)
-1 isosceles_triangle
-2 polyhedron
vertices(isosceles_triangle(0,1,pi/4))
vertices(polyhedron([0,0,0],[0,5,0],[0,0,5],[1,2,6]))
vertices(isosceles_triangle(0,1,pi/4))[2]

# vertices_abca
1 Renvoie la liste fermée [A,B,...A] des sommets du polygone ou polyèdre P.
2 Returns the closed list [A,B,...A] of the vertices of the polygon or polyhedron P.
3 Devuelve la lista [A,B,...A] de los vértices de un polígono o poliedro P.
4 Επιστρέφει την κλειστή λίστα [A,B,...A] των κορυφών του πολυγώνου ή του πολυέδρου Ρ.
0 Polygon or Polyedr(P)
-1 isosceles_triangle
-2 polyhedron
vertices_abca(isosceles_triangle(0,1,pi/4))
vertices_abca(polyhedron([0,0,0],[0,5,0],[0,0,5],[1,2,6]))
vertices_abca(isosceles_triangle(0,1,pi/4))[2]

# sommet
1 Renvoie le sommet d'un opérateur.
2 Returns the sommet of an operator.
3 Devuelve la cumbre de un operador.
4 Επιστρέφει την κεφαλή (κορυφή) μιας παράστασης.
0 Op or Fnct
-1 feuille
-2 quote
sommet(quote(gcd(45,123)))
sommet('gcd(45,123)')

# smod mods
1 Retourne le reste symétrique de la division euclidienne de 2 entiers.
2 Returns the Euclidean symmetric remainder of two integers.
3 Devuelve el resto simétrico de la división euclidiana de 2 enteros.
4 Επιστρέφει το Ευκλείδιο συμμετρικό υπόλοιπο 2 ακεραίων.
0 Intg,Intg
-1 irem
-2 iquo
-3 mod
-4 fracmod
smod(8,3)
smod(10,4)
smod(11,7)

# sqrt
1 Racine carrée.
2 Square root.
3 Raíz cuadrada.
4 Τετραγωνική ρίζα.
0 Expr
-1 surd
-2 ^
sqrt(50)
sqrt(x^2)

# surd
1 Puissance 1/n.
2 Power 1/n.
3 Potencia 1/n.
4 Δύναμη 1/n.
0 Expr,Intg(n)
-1 sqrt
-2 ^
surd(8,3)
surd(-8,3)

# sst
1 Exécute 1 instruction en pas-à-pas.
2 Step 1 instruction.
3 Ejecuta una instrucción paso a paso.
4 Βηματική εκτέλεση μιας εντολής.
0 NULL
-1 
sst()

# sst_in
1 Entre à l'intérieur d'une fonction en pas-à-pas.
2 Enter into a function in step-by-step mode.
3 Se introduce al interior de una función en modo paso a paso.
4 Βηματική εκτέλεση μιας συνάρτησης.
0 NULL
-1 
sst_in()

# stack
1 Mot réservé.
2 Reserved word.
3 Palabra reservada.
4 Δεσμευμένη λέξη.
0 
-1 

# start
1 Boucle en mode RPN.
2 RPN loop.
3 Bucle en modo RPN.
4 Βρόχος σε λειτουργία RPN (Αντίστροφος Πολωνικός Συμβολισμός).
0 
-1 

# step by pas
1 Saut de la variable dans une itération (taille du saut).
2 Step in an iteration (step size of incrementation).
3 Incremento en una iteración (tamaño del salto).
4 Μέγεθος βήματος μεταβλητής μέσα σε βρόχο.
8 属于 "for...from...to...[step]...do...end" 循环结构的可选部分。
0 
-1 for
-2 pour
 s:=0;for j from 1 to 10 step 2 do s:=s+j end_for
 s:=0;for j from 1 step 2 to 10 do s:=s+j end_for
 s:=0;for j from 1 to 10 by 2 do s:=s+j end_for
 s:=0;for j from 1 by 2 to 10 do s:=s+j end_for
 s:=0;pour j de 1 jusque 10 pas 2 do s:=s+j fpour
 s:=0;pour j de 1 pas 2 jusque 10 do s:=s+j fpour


# sto Store
1 Stocke le premier argument dans la variable donnée comme deuxième argument.
2 Store the first argument in the variable given as second argument.
3 Guarda el primer argumento en la variable dada como segundo argumento.
4 Αποθήκευση του πρώτου ορίσματος στη μεταβλητή που δίνεται ως δεύτερο όρισμα.
8 将一个实数存储在一个变量中。
0 (Real or Str),Var
-1 :=
-2 =>
sto(2,a)
sto("salut",b)

# <=
1 Opérateur booléen infixé qui teste l'inégalité.
2 Boolean infixed operator that tests the inequality.
3 Operador infijo booleano que comprueba una desigualdad.
4 Εντεθειμένος λογικός τελεστής που ελέγχει την ανισότητα.
8 小于或等于。 如果为 true，则返回 1；如果为 false，则返回 0。
0 Expr,Expr
-1 !=
-2 ==
-3 >=
-4 >
-5 <
 1+1<=2
 2<=3

# >=
1 Opérateur booléen infixé qui teste l'inégalité.
2 Boolean infixed operator that tests the inequality.
3 Operador infijo booleano que comprueba una desigualdad.
4 Εντεθειμένος λογικός τελεστής που ελέγχει την ανισότητα.
8 大于或等于。 如果为 true，则返回 1；如果为 false，则返回 0。
0 Expr,Expr
-1 !=
-2 ==
-3 <=
-4 >
-5 <
 1+1>=2
 2>=3

# >
1 Opérateur booléen infixé qui teste l'inégalité.
2 Boolean infixed operator that tests the inequality.
3 Operador infijo booleano que comprueba una desigualdad.
4 Εντεθειμένος λογικός τελεστής που ελέγχει την ανισότητα.
8 大于。 如果为 true，则返回 1；如果为 false，则返回 0。
0 Expr,Expr
-1 !=
-2 ==
-3 >=
-4 <=
-5 <
 1+1>2
 4>3

# <
1 Opérateur booléen infixé qui teste l'inégalité.
2 Boolean infixed operator that tests the inequality.
3 Operador infijo booleano que comprueba una desigualdad.
4 Εντεθειμένος λογικός τελεστής που ελέγχει την ανισότητα.
8 小于。 如果为 true，则返回 1；如果为 false，则返回 0。
0 Expr,Expr
-1 !=
-2 ==
-3 >=
-4 <=
-5 >
 1+1<2
 2<3

# ==
1 Opérateur booléen infixé qui teste l'égalité.
2 Boolean infixed operator that tests the equality.
3 Operador infijo booleano que comprueba una igualdad.
4 Εντεθειμένος λογικός τελεστής που ελέγχει την ισότητα.
8 Equals (逻辑 test). 如果为 true，则返回 1；如果为 false，则返回 0。
0 Expr,Expr
-1 !=
-2 <=
-3 >=
 1+1==2
 2==3

# !=
1 Opérateur booléen infixé qui teste la non égalité.
2 Boolean infixed operator that tests the difference.
3 Operador infijo booleano que comprueba una no igualdad.
4 Εντεθειμένος λογικός τελεστής που ελέγχει την μη ισότητα.
8 不等于。 如果为 true，则返回 1；如果为 false，则返回 0。
0 Expr,Expr
-1 ==
-2 <=
-3 >=
 1+1!=2
 2!=3

# :=
1 Opérateur infixé qui stocke le deuxième argument dans la variable donnée comme premier argument.
2 Infixed operator that stores the second argument in the variable given as first argument.
3 Operador infijo que guarda el segundo argumento en la variable dada como primer argumento.
4 Εντεθειμένος τελεστής που αποθηκεύει το 2ο όρισμα στη μεταβλητή που δίνεται ως 1ο όρισμα.
8 将一个实数存储在一个变量中。
0 Var,(Real or Str)
-1 sto
-2 =<
-3 =>
 a:=2
 b:="salut"

# =<
1 Opérateur infixé qui stocke par référence le deuxième argument dans une variable (contenant une liste) donnée comme premier argument.
2 Infixed operator that stores by reference the second argument in a variable (containing a list) given as first argument.
3 Operador infijo que guarda por referencia el segundo argumento en la variable (conteniendo una lista) dada como primer argumento.
4 Εντεθειμένος τελεστής που αποθηκεύει κατ' αναφορά το 2ο όρισμα στη μεταβλητή (που περιέχει μια λίστα) που δίνεται ως 1ο όρισμα.
0 Var,(Real or Str)
-1 sto
-2 :=
 a:=[1,2,3]; a[1]=<5

# +=
1 Opérateur infixé : a+=b est équivalent à a:=a+b.
2 Infixed operator : a+=b equivalent to a:=a+b.
3 Operador infijo : a+=b equivalente a a:=a+b.
4 Εντεθειμένος τελεστής : a+=b είναι ισοδύναμο με a:=a+b.
0 Var,(Real or Str)
-1 sto
-2 :=
 a:=2;a+=3
 a:="abc";a+="d"

# *=
1 Opérateur infixé : a*=b est équivalent à a:=a*b.
2 Infixed operator : a*=b equivalent to a:=a*b.
3 Operador infijo : a*=b equivalente a a:=a*b.
4 Εντεθειμένος τελεστής : a*=b είναι ισοδύναμο με a:=a*b.
0 Var,Real
-1 sto
-2 :=
 a:=2;a*=3


# -=
1 Opérateur infixé : a-=b est équivalent à a:=a-b.
2 Infixed operator : a-=b equivalent to a:=a-b.
3 Operador infijo : a-=b equivalente a a:=a-b.
4 Εντεθειμένος τελεστής : a-=b είναι ισοδύναμο με a:=a-b.
0 Var,Real
-1 :=
 a:=2;a-=3

# /=
1 Opérateur infixé : a/=b est équivalent à a:=a/b.
2 Infixed operator : a/=b equivalent to a:=a/b.
3 Operador infijo : a/=b equivalente a a:=a/b.
4 Εντεθειμένος τελεστής : a/=b είναι ισοδύναμο με a:=a/b.
0 Var,Real
-1 :=
 a:=2;a/=3

# =>
1 Opérateur infixé qui stocke le premier argument dans la variable donnée comme deuxième argument ou est la version infixée de convert.
2 Infixed operator that store the first argument in the variable given as second argument or is the infixed version of convert.
3 Operador infijo que guarda el primer argumento en la variable dada como segundo argumento o es la versión infija de convert.
4 Εντεθειμένος τελεστής που αποθηκεύει το 1ο όρισμα στη μεταβλητή που δίνεται ως 2ο όρισμα ή είναι η εντεθειμένη μορφή του convert.
8 存储在。
0 (Real or Str),Var
-1 sto
-2 :=
-3 convert
 2=>a
 "salut"=>b
 x^2+sin(x)=>diff
 x^2-1=>*

# |
1 Fonction infixée qui remplace dans une expression, des variables (même affectées) par des valeurs (v1 par a1 etc..).
2 Infixed operator. Substitutes a value for a variable in an expression.
3 Operador infijo. Sustituye una variable por su valor en una expresión.
4 Υποκατάσταση μιας μεταβλητής με την τιμή της σε μια παράσταση (εντεθειμένος τελεστής).
8 将表达式中 v1, v2, ..., vN 分别替换为 a1, a2, ..., aN，并求结果。
0 Expr, Var(v1)=value(a1)[,v2=a2,...]
-1 subst
-2 eval
 1/(4+x^2)|x=2
 y/(4+x^2)|x=2,y=5

# subst substituer
1 Remplace dans une expression, une variable non affectée par la valeur a.
2 Substitutes a value for a variable in an expression.
3 Sustituye una variable por su valor en una expresión.
4 Υποκατάσταση μιας μεταβλητής με την τιμή της σε μια παράσταση.
8 将表达式中 v, 分别替换为 a，并求结果。
0 Expr,Var(v)=value(a)
-1 eval
-2 algsubs
-3 subs
-4 ()
subst(1/(4+x^2),x=2)
subst(1/(x^2+y^2),x=2,y=3)
subst(1/(x^2+y^2+z^2),[x=2,y=3,z=1])
subst(x-2/(4+x^2),x=1)
subst('integrate(sin(x^2)*x,x)',x=sqrt(t))
subst('sum(x^(n+1)/((n+p+1)*(n+1)),n,0,inf)',n=k-1)
 f:=1/(x^2+y^2;f(x=2,y=3)

# sum somme add
1 Somme discrète (avec 4 ou 2 arguments renvoie la somme de a à b si a<=b ou de l'opposé de la somme de b+1 à a-1 si a>b+1 ou 0 si a=b+1) ou la primitive discrète ou la somme des éléments d'une liste (ou séquence).
2 Discrete sum (with 2 or 4 arguments return then sum from a to b if a<=b or of the opposite of the sum from b+1 to a-1 if a>b+1 or 0 if a=b+1) or the discrete primitive or sum of the elements of a list or a sequence.
3 Suma discreta o suma de elementos de una lista (o secuencia).
4 Διακριτό άθροισμα ή άθροισμα των στοιχείων μιας λίστας ή μιας ακολουθίας.
8 求和。  返回列表中所有元素的和 或  返回对表达式的变量从初值取值到终值时求和。
0 Expr,Var,VarMin(a),VarMax(b),[VarStep(p)]
-1 +
sum(1/n^2,n,1,17)
sum(1/n^2,n=1..17)
sum(1/n^2,n,17,1)
sum(1/n^2,n=17..1)
sum(1/n^2,n,17,1,1)
sum(1/n^2,n,1,17,2)
sum(1,2,3,4)
sum([[1,2,3,4,5,6,7,8,9],[1,2,3,4,5,6,7,8,9]])
sum(1/(x*(x+1)),x)
sum(cos(n*x),n)

# suppress
1 Renvoie L sans son élément d'indice n; L:=suppress(L,n) ou L.suppress(n).
2 Returns L without the element of index n; L:=suppress(L,n) or L.suppress(n).
3 Devuelve L sin el elemento de índice n; L:=suppress(L,n) o L.suppress(n).
4 Επιστρέφει την L χωρίς το στοιχείο με δείκτη n; L:=suppress(L,n) ou L.suppress(n).
0 Vect(L)||Str(l),Intg(n)
-1 tail
-2 mid
-3 remove
-4 insert
suppress([0,1,2,3],2)
suppress("0123",2)
 L:=[0,1,2,3];L:=suppress(L,2)
 L:=[0,1,2,3];L.suppress(2)

# insert
1 Renvoie l dans laquelle l'élément b a été insérer à l'indice n.
2 Returns l where the element b is of index n.
3 Devuelve l donde el elemento b es de índice n.
0 Vect(l)||Str(l),Intg(n),Val(b)
-1 tail
-2 mid
-3 remove
-4 suppress
insert([0,1,2,3],2,5)
insert("0123",2,"5")

# svd
1 Pour une matrice carrée numérique réelle A, renvoie U orthogonale, S vecteur des valeurs singulières, Q orthogonale tels que A=U*diag(S)*tran(Q).
2 For a square numerical real matrix A, returns U orthogonal, S vector of singular values, Q orthogonal such that A=U*diag(S)*tran(Q).
3 Para una matriz cuadrada real numérica A, devuelve U ortogonal, S vector de Singular Values, Q ortogonal tales que A=U*diag(S)*tran(Q).
4 Για έναν αριθμητικό πίνακα Α, επιστρέφει U, S, Q τέτοια ώστε A=U*diag(S)*tran(Q).
0 Mtrx(A)
svd([[1,2],[3,4]])

# switch
1 Test (choix multiple): switch(variable) {case 1: {bloc1;} default: {bloc2;}};
2 Test (multiple choice): switch(variable) {case 1: {bloc1;} default: {bloc2;}};
3 Comprobación (múltiples opciones): switch(variable) {case 1: {bloc1;} default: {bloc2;}};
4 Τεστ (πολλαπλής επιλογής): switch(variable) {case 1: {bloc1;} default: {bloc2;}};
0 
-1 if
-2 case
-3 default
 a:=1;switch(a){case 0:{b:=1;break;} case 1:{b:=3;break;}default:{b:=0;}};b;
 f(x):={local y;switch (x){case 1:{return "un";} case 2:{y:="deux";break;}default:{y:="default";}};return(y);}

# piecewise
1 Si condition1 renvoie expr1 sinon...si condition2p renvoie expr2p sinon renvoie expr2p+1.
2 If condition1 returns expr1 else...if condition2p returns expr2p else returns expr2p+1.
3 si condición1 devuelve expr1 sino... si condición2p devuelve expr2p sino devuelve expr2p+1.
4 Εάν συνθήκη1 επιστρέφει expr1 αλλιώς...εάν συνθήκη2p επιστρέφει expr2p αλλιώς επιστρέφει expr2p+1.
0 Cond1,Expr1,..,Cond2p,Expr2p,[Expr2p+1]
-1 if
-2 then
-3 else
-4 ifte
-5 switch
piecewise(x<=-pi,x+2*pi,x<=pi,x,x+2*pi)
piecewise(x<-2,-2,x<-1,3x+4,x<0,1,x+1)

# switch_axes
1 switch_axes() met ou enlève les axes de l'écran géométrique.
2 switch_axes() put or erase the axes of the graphic-screen.
3 switch_axes() pone o quita los ejes en la pantalla de geometría.
4 switch_axes() σχεδιάζει ή διαγράφει τους άξονες από την οθόνη γραφικών.
0 [Intg(0 or 1)]
-1 gl_showaxes
-2 axes
switch_axes()
switch_axes(0)
switch_axes(1)

# xyztrange
1 xyztrange permet d'initialiser l'écran graphique (cf bouton Cfg).
2 xyztrange put or erase the axes on the graphic-screen (cf button Cfg).
3 xyztrange permite inicializar la pantalla de geometría (cf botón Cfg).
4 xyztrange αρχικοποιεί την οθόνη γραφικών (cf κουμπί Cfg).
0 SeqReal
xyztrange(-5.0,5.0,-5.0,2.0,-10.0,10.0,-1.0,6.0,-5.0,5.0,-1.2384,2.0,1,0.0,1.0)

# Ox_2d_unit_vector
1 Ox_2d_unit_vector() dessine le vecteur unitaire de l'axe des x de l'écran de géométrie 2-d.
2 Ox_2d_unit_vector() draws the unit vector of the x-axis of the graphic-screen 2-d.
3 Ox_2d_unit_vector()
4 Ox_2d_unit_vector()
0 NULL
-1 frame_2d
-2 Oy_2d_unit_vector
-3 Ox_3d_unit_vector
-4 Oy_3d_unit_vector
-5 Oz_3d_unit_vector
-6 gl_x_axis_unit
-7 gl_x_axis_name
Ox_2d_unit_vector()
 legende(1,"u",vert,quadrant4),Ox_2d_unit_vector()

# Oy_2d_unit_vector
1 Oy_2d_unit_vector() dessine le vecteur unitaire de l'axe des y de l'écran de géométrie 2-d.
2 Oy_2d_unit_vector() draws the unit vector of the y-axis of the graphic-screen 2-d.
3 Oy_2d_unit_vector()
4 Oy_2d_unit_vector()
0 NULL
-1 frame_2d
-2 Ox_2d_unit_vector
-3 Ox_3d_unit_vector
-4 Oy_3d_unit_vector
-5 Oz_3d_unit_vector
-6 gl_y_axis_unit
-7 gl_y_axis_name
Oy_2d_unit_vector()
 legende(i,"v",vert,quadrant2),Oy_2d_unit_vector()

# Ox_3d_unit_vector
1 Ox_3d_unit_vector() dessine le vecteur unitaire de l'axe des x de l'écran de géométrie 3-d.
2 Ox_3d_unit_vector() draws the unit vector of the x-axis of the graphic-screen 3-d.
3 Ox_3d_unit_vector()
4 Ox_3d_unit_vector()
0 NULL
-1 frame_3d
-2 Oy_3d_unit_vector
-3 Oz_3d_unit_vector
-4 Ox_2d_unit_vector
-5 Oy_2d_unit_vector
Ox_3d_unit_vector()
 legende(point(1,0,0),"i",vert),Ox_3d_unit_vector()


# Oy_3d_unit_vector
1 Oy_3d_unit_vector() dessine le vecteur unitaire de l'axe des y de l'écran de géométrie 3-d.
2 Oy_3d_unit_vector() draws the unit vector of the y-axis of the graphic-screen 3-d.
3 Oy_3d_unit_vector()
4 Oy_3d_unit_vector()
0 NULL
-1 frame_3d
-2 Ox_3d_unit_vector
-3 Oz_3d_unit_vector
-4 Ox_2d_unit_vector
-5 Oy_2d_unit_vector
Oy_3d_unit_vector()
 legende(point(0,1,0),"j",vert),Oy_3d_unit_vector()

# Oz_3d_unit_vector
1 Oz_3d_unit_vector() dessine le vecteur unitaire de l'axe des z de l'écran de géométrie 3-d.
2 Oz_3d_unit_vector() draws the unit vector of the z-axis of the graphic-screen 3-d,
3 Oz_3d_unit_vector()
4 Oz_3d_unit_vector()
0 NULL
-1 frame_3d
-2 Ox_3d_unit_vector
-3 Oy_3d_unit_vector
-4 Ox_2d_unit_vector
-5 Oy_2d_unit_vector
Oz_3d_unit_vector()
 legende(point(0,0,1),"k",vert),Oz_3d_unit_vector()

# frame_2d
1 frame_2d() dessine le repère de l'écran de géométrie 2-d.
2 frame_2d() draws the axes of the graphic-screen 2-d.
3 frame_2d()
4 frame_2d()
0 NULL
-1 frame_3d
-2 Ox_2d_unit_vector
-3 Oy_2d_unit_vector
frame_2d()

# frame_3d
1 frame_3d() dessine le repère de l'écran de géométrie 3-d.
2 frame_3d() draws the axes of the graphic-screen 3-d.
3 frame_3d()
4 frame_3d()
0 NULL
-1 frame_2d
-2 Ox_3d_unit_vector
-3 Oy_3d_unit_vector
-4 Oz_3d_unit_vector
frame_3d()

# reflection
1 reflection(D,C) (resp reflection(A,C))=symétrique de C dans la symétrie-droite D (resp sym-point A).
2 reflection(D,C) (or reflection(A,C))=symmetrical of C in the symmetry-line D (or sym-point A).
3 reflection(D,C) (o reflection(A,C))=simétrico de C en la recta de simetría D (o punto de simetría A).
4 reflection(D,C) (ή reflection(A,C))=συμμετρικό του C ως προς τον άξονα συμμετρίας D (ή σημείο συμμετρίας Α).
0 (Pnt(A) or Line(D)),(Pnt(C) or Curve(C))
-1 rotation
-2 translation
reflection(line(0,1+i),A)
reflection(B,A)
reflection(line(0,1+i),circle(i,1+i))


# syst2mat
1 Renvoie la matrice M=A|(-b) associée au système Y=AX+b.
2 Returns the matrix M=A|(-b) associate to the system Y=AX+b.
3 Devuelve la matriz M=A|(-b) asociada al sistema Y=AX+b.
4 Επιστρέφει τον πίνακα M=A|(-b) συσχετισμένο με το σύστημα Y=AX+b.
0 LstLinEq,LstVar
-1 linsolve
-2 rref
syst2mat([x-y=1,x+2*y],[x,y])

# tabvar
1 Tableau de variations et le graph sur DispG d'une fonction.
2 Table of variations of a function with its graph on DispG.
3 Tabla de variacións de una función.
4 Πίνακας μιας συνάρτησης
0 Expr,Var
-1 tablefunc
-2 tabsign
tabvar(sin(x),x)
tabvar(1/ln(x^2-1),x,diff=1)
tabvar(x^2+x+1,x)
tabvar(x^2,x,-3,5)
tabvar([sin(2t),cos(3t)])

# tabsign
1 Tableau de signes d'une fonction (et graphe dans DispG)
2 Table of sign of a function.
0 Expr,Var
-1 tablefunc
-2 tabvar
tabsign(x^2-x,x)
tabsign(x^2,x,-3,5)
tabsign(sin(x),x)

# tablefunc
1 Tableau de valeurs d'une fonction : on doit être dans un tableur.
2 Table of value of a function : you must be in a spreadsheet.
3 Tabla de valores de una función: debemos estar en una hoja de balance.
4 Πίνακας τιμών μιας συνάρτησης : σε υπολογιστικό φύλλο.
0 Expr,Var
-1 tabvar
-2 tableseq
tablefunc(sin(x),x)
tablefunc(x^2-x-2,x)

# tableseq
1 Tableau de valeurs d'une suite (dans un tableur).
2 Table of value of a sequence (in a spreadsheet.)
3 Tabla de valores de una secuencia (en una hoja de balance).
4 Πίνακας τιμών μιας ακολουθίας (σε λογιστικό φύλλο).
0 Expr,(Var or LstVar),(InitVal or LstInitVal)
-1 tablefunc
tableseq(cos(x),x,0.0)
tableseq(x+y,[x,y],[1,1])

# seqsolve
1 Donne la valeur d'une suite récurrente (u_{n+1}=f(u_n) ou u_{n+k}=f(u_n,u_{n+1},...u_{n+k-1})) ou d'un système de suites récurrentes.
2 Gives the value of a recurrent sequence (u_{n+1}=f(u_n) or u_{n+k}=f(u_n,u_{n+1}...u_{n+k-1})) or of a system of recurrent sequences.
3 Valores de una secuencia recurente (u_{n+1}=f(u_n) o u_{n+k}=f(u_n,u_{n+1}...u_{n+k-1})) o de un sistema de secuencias recurrentes.
4 Τιμές μιας αναδρομικής ακολουθίας (u_{n+1}=f(u_n) ή u_{n+k}=f(u_n,u_{n+1},...u_{n+k-1})) ή ενός συστήματος αναδρομικών ακολουθιών.
0 (Expr or LstExpr),(Var or LstVar),(InitVal or LstInitVal)
-1 rsolve
-2 plotseq
-3 tableseq
seqsolve(2x+n,[x,n],1)
seqsolve(2x+n*3^n,[x,n],1)
seqsolve(x+y,[x,y,n],[1,1])
seqsolve(x+2*y+n+1,[x,y,n],[0,1])
seqsolve([x+2*y,n+1+x],[x,y,n],[0,1])
seqsolve([x+2*y+n+1,x],[x,y,n],[0,1])

# rsolve
1 Donne la valeur d'une suite récurrente ou d'un système de suites récurrentes.
2 Gives the value of a recurrent sequence or of a system of recurrent sequences.
3 Valores de una secuencia recurrente o de un sistema de secuencias recurrentes.
4 Δίνει την τιμή μιας αναδρομικής ακολουθίας ή ενός συστήματος αναδρομικών ακολουθιών.
0 (Expr or LstExpr),(Var or LstVar),(InitVal or LstInitVal)
-1 seqsolve
-2 plotseq
-3 tableseq
-4 reverse_rsolve
rsolve(u(n+1)=2*u(n)+n,u(n),u(0)=1)
rsolve(u(n+1)=2*u(n)+n,u(n),u(1)^2=1)
rsolve(u(n+1)=(u(n)-1)/(u(n)-2),u(n),u(0)=4)
rsolve(u(n+2)=u(n)+2*u(n+1)+n+1,u(n),[u(0)=0,u(1)=1])
rsolve([u(n+1)=3*v(n)+u(n),v(n+1)=v(n)+u(n)],[u(n),v(n)],[u(0)=1,v(0)=2])

# tan TAN
1 Tangente ou Option de la commande convert ou convertir (id halftan).
2 Tangent or Option of the convert or convertir command (id halftan)
3 Tangente o Opción del comando convert o convertir (id halftan)
4 Εφαπτομένη ή Επιλογή της εντολής convert ή convertir (id halftan)
8 TAN: 正切函数。返回数值的正切。  数值可以是度或弧度，取决于主视图模式或符号设置中“角度单位”的设置。
0 Expr
-1 atan or Opt
-2 convert
-3 halftan
tan(0)
tan(pi/4)
 convert(tan(x),tan)

# tangent tangente
1 tangent(C,A) trace les tangentes (droite ou plan) à C passant par A.
2 tangent(C,A) draws the tangents (line or plane) to C through A.
3 tangent(C,A) traza la tangente (recta o plano) a C pasando por A.
4 tangent(C,A) σχεδιάζει τις εφαπτομένες (ευθείες ή επίπεδα) στο C από το A.
0 Curve(C),Pnt(A)
-1 LineTan
-2 droite_tangente
tangent(circle(i,1+i),A)
tangent(plotfunc(sin(x)),3*pi/4)
tangent(plotfunc(sin(x)),point(3*pi/4+i*sqrt(2)/2))
tangent(plotfunc(x^2+y^2,[x,y]),[2,2])
tangent(plotfunc(x^2+y^2,[x,y]),point([2,2,8]))
tangent(plotparam(3*exp(t/2)*exp(i*t),t),7)
tangent(plotpolar(3*exp(t/2),t),7)
 equation(tangente([2*cos(t),2*sin(t),3*t],t))

# tchebyshev1
1 Renvoie le n-ième polynôme de Tchebychev de première espèce.
2 Returns the n-th Tchebyshev polynomial of first sort.
3 Devuelve el n-ésimo polinomio de Tchebyshev de primer tipo.
4 Επιστρέφει το n-στο πολυώνυμου Tchebyshev 1ου είδους.
0 Intg(n)
-1 tchebyshev2
-2 hermite
tchebyshev1(3)


# tchebyshev2
1 Renvoie le n-ième polynôme de Tchebychev de seconde espèce.
2 Returns the nt-h Tchebyshev polynomial of second sort.
3 Devuelve el n-ésimo polinomio de Tchebyshev de segundo tipo.
4 Επιστρέφει το n-στο πολυώνυμου Tchebyshev 2ου είδους.
0 Intg(n)
-1 tchebyshev1
-2 hermite
tchebyshev2(3)

# test
1 Fonction de test pour les développeurs.
2 Test function for system developers.
3 Función de comprobación para desarrolladores.
4 Συνάρτηση test που παρέχεται στους σχεδιαστές του συστήματος.
0 Var
-1 
test(x)

# then
1 Utilisé dans un test if: if (condition) then instruction; end_if;
2 Used in a test if: if (condition) then instruction; end_if;
3 Usado en una comprobación if: if (condition) then instruction; end_if;
4 Χρησιμοποιείται στην εντολή if: if (condition) then instruction; end_if;
8 属于 "if...then...end" 或 "if...then...else...end" 分支结构的一部分。
0 
-1 if
 if (a<0) then a:=-a; end_if;

# tlin lineariser_trigo
1 Linéarisation trigonométrique
2 Trigonometric linearization
3 Linealización trigonométrica
4 Τριγωνομετρική γραμμικοποίηση
0 ExprTrig
-1 texpand
-2 lin
tlin(sin(x)^3)
tlin(cos(x)*cos(y))

# trace
1 Donne la trace d'une matrice carrée ou dessine la trace d'un objet géométrique lorsqu'on fait varier le paramètre (voir Trace dans le bouton Menu d'un niveau de géométrie et écrire seulement une instruction par ligne).
2 Returns the trace of a square matrix or draws the trace of a geometric object when the parameter changes (see Trace in Menu button of a geometric level and write only one instruction on each line).
3 Devuelve la traza de una matriz cuadrada o dibuja la traza de un objeto geométrico cuando los valores del parámetro cambian (ver Trace en el botón Menu de un nivel de geometría y escribe solamente una instrucción por línea).
4 Επιστρέφει το ίχνος ενός τετραγωνικού πίνακα ή σχεδιάζει το ίχνος ενός γεωμετρικού αντικειμένου όταν αλλάζει η παράμετρος.
8 正方形矩阵的迹。  求解方阵的迹，等于对角元素之和（也等于特征值之和）。
0 Mtrx or GeoObj
-1 det
-2 lieu
trace([[1,2,3],[1,3,6],[2,5,7]])
trace([[1+i,2,3],[1,3,6],[2,5,9-i]])
 assume(a=[0.7,-5,5,0.1]);trace(point(a-i*a))
 assume(a=[0.7,-5,5,0.1]);trace(inter_unique(droite(y=a*x+a),droite(y=2*a*x+1)))

# tran transpose
1 Transposée d'une matrice (sans conjugaison).
2 Transposes a matrix (without conjugation).
3 Transpone una matriz (sin conjugación).
4 Αναστρέφει έναν πίνακα (χωρίς να παίρνει συζυγείς).
8 转置阵。  转置矩阵。
0 Mtrx
-1 conj
-2 trn
tran([[1,2,3],[1,3,6],[2,5,7]])
tran([[1+i,2,3],[1,3,6],[2,5,9-i]])
tran(conj([[1+i,2,3],[1,3,6],[2,5,9-i]]))

# translation
1 translation(B-A,C) (resp translation([a,b,c],C)) est le translaté de C ds la translation de vecteur AB (resp [a,b,c]).
2 translation(B-A,C) (resp translation([a,b,c],C)) is the translated of C in the translation of vector AB (resp [a,b,c]).
3 translation(B-A,C) (resp translation([a,b,c],C)) es el traslado de C en la translación de vector AB (resp [a,b,c]).
4 translation(B-A,C) (αντίστοιχα translation([a,b,c],C)) είναι το C μεταφερμένο κατά το διάνυσμα AB (αντίστοιχα [a,b,c]).
0 Vect, Pnt(C)
-1 rotation
-2 reflection
translation(1+i,i)
translation([1,1,1],point([1,2,3]))
 t:=translation(1+i);t(i)
 t:=translation([1,1,1]);t(point([1,2,3]))

# triangle
1 triangle(A,B,C) trace le triangle ABC
2 triangle(A,B,C) draws the triangle ABC
3 triangle(A,B,C) traza el triángulo ABC
4 triangle(A,B,C) σχεδιάζει το τρίγωνο ABC
8 triangle(A,B,C)= 三角(A,B,C)
0 (Pnt or Cplx),(Pnt or Cplx),(Pnt or Cplx)
-1 equilateral_triangle
-2 isosceles_triangle
-3 right_triangle
triangle(point(1+i),1,0)
triangle(0,1,1+i)
triangle(point(0,0,0),point(3,3,3),point(0,3,3))

# equilateral_triangle
1 triangle_equilateral(A,B) (resp triangle_equilateral(A,B,P)) trace le triangle équilatéral ABC direct de coté AB (resp dans le demi-plan ABP).
2 equilateral_triangle(A,B) (resp equilateral_triangle(A,B,P)) draws the direct equilateral triangle ABC of side AB (resp in the half-plane ABP).
3 equilateral_triangle(A,B) (resp equilateral_triangle(A,B,P)) traza el triángulo equilátero ABC directo de lado AB (resp en el semi-plan ABP).
4 equilateral_triangle(A,B) (αντίστοιχα equilateral_triangle(A,B,P)) σχεδιάζει το ισόπλευρο τρίγωνο ABC πλευράς AB (αντίστοιχα στο ημιεπίπεδο ABP).
0 (Pnt(A) or Cplx),(Pnt(B) or Cplx),[Pnt(P)],[Var(C)]
-1 triangle
equilateral_triangle(point(1+i),0)
equilateral_triangle(0,1+i,C)
equilateral_triangle(point(0,0,0),point(3,3,3),point(0,0,3))
equilateral_triangle(point(0,0,0),point(3,3,3),point(0,0,3),C)

# isosceles_triangle
1 Trace le triangle isocèle ABC AB=AC et angle(AB,AC)=t (ou dans le plan ABP angle(AB,AC)=angle(AB,AP) ou angle(AB,AC)=t).
2 Draws the isosceles triangle ABC AB=AC et angle(AB,AC)=t (or in the plane ABP angle(AB,AC)=angle(AB,AP) or angle(AB,AC)=t).
3 Traza el triángulo isósceles ABC AB=AC y angle(AB,AC)=t (o en el plan ABP angle(AB,AC)=angle(AB,AP) o angle(AB,AC)=t).
4 Σχεδιάζει το ισοσκελές τρίγωνο ABC AB=AC και angle(AB,AC)=t (ή στο επίπεδο ABP angle(AB,AC)=angle(AB,AP) ή angle(AB,AC)=t).
0 (Pnt(A) or Cplx),(Pnt(B) or Cplx),(Angle(t) or Pnt(P) or Lst(P,t)),[Var(C)]
-1 triangle
isosceles_triangle(i,1,pi/4)
isosceles_triangle(1,i,pi/4,C)
isosceles_triangle(point(0,0,0),point(3,3,3),point(0,0,3))
isosceles_triangle(point(0,0,0),point(3,3,3),[point(0,0,3),pi/4],C)

# right_triangle
1 Trace le triangle ABC rectangle en A avec AC=k*AB (ou dans le plan ABP AC=AP ou AC=k*AB).
2 Draws the A_rectangular triangle ABC with AC=k*AB (or in the plane ABP AC=AP or AC=k*AB).
3 Traza el triángulo ABC rectángulo en A con AC=k*AB (o en el plan ABP AC=AP o AC=k*AB).
4 Σχεδιάζει το A_ορθογώνιο τρίγωνο ABC με AC=k*AB (ή στο επίπεδο ABP AC=AP ή AC=k*AB).
0 (Pnt(A) or Cplx),(Pnt(B) or Cplx),(Real(k) or Pnt(P) or Lst(P,k)),[Var(C)]
-1 triangle
right_triangle(1,i,tan(pi/3))
right_triangle(1,i,1/2,C)
right_triangle(point(0,0,0),point(3,3,3),point(0,0,3))
right_triangle(point(0,0,0),point(3,3,3),[point(0,0,3),1/2],C)
right_triangle(point(0,0,0),point(3,3,3),[point(0,0,3),1/2],C)

# trn
1 Renvoie la matrice adjointe de A =tran(conj(A)).
2 Returns the adjoint matrix of A =tran(conj(A)).
3 Devuelve la matriz adjunta de A=tran(conj(A)).
4 Επιστρέφει τον προσαρτισμένο πίνακα του Α=tran(conj(A)).
8 转置阵。  转置矩阵。 则 TRN 将查找共轭转置。
0 Mtrx
-1 tran
-2 conj
trn([[1,2+i],[3,4]])

# truncate
1 Tronque le polynôme P à l'ordre n.
2 Truncates the polynomial P at order n.
3 Trunca el polinomio P al orden n.
4 Αποκόπτει το πολυώνυμο Ρ στον βαθμό n.
0 Poly(P),Intg(n)
-1 series
truncate((x^2+x)^2,3)

# try
1 Protection contre les erreurs: try {instructions;} catch(variable) {error_instructions;} (dans un programme).
2 Error protection: try {instructions;} catch(variable) {error_instructions;} (in a program).
3 Protección contra errores: try {instructions;} catch(variable) {error_instructions;} (dentro de un programa).
4 Προστασία από λάθη: try {instructions;} catch(variable) {error_instructions;} (σε ένα πρόγραμμα).
0 
-1 throw
-2 catch
 essai(x):={local y,err;try {y:=[[1,2]]*x;}catch (err){y:="erreur fatale:"+err;} return y;};essai([1,2,3])

# type
1 Renvoie n dans [1..12] définissant le type de l'argument.
2 Returns n in [1..12] that define the type of the argument.
3 Devuelve n de [1..12] que define el tipo del argumento.
4 Επιστρέφει n στο [1..12] που ορίζει τον τύπο του ορίσματος.
0 Expr
-1 DOM_FLOAT
-2 DOM_INT
-3 DOM_COMPLEX
-4 DOM_IDENT
-5 DOM_LIST
-6 DOM_SYMBOLIC
-7 DOM_RAT
-8 DOM_STRING
-9 DOM_FUNC
-10 subtype
type("abc")
type([1,2,3])

# subtype
1 Renvoie 1 pour une séquence, 2 pour un ensemble, 10 pour un polynôme et 0 sinon.
2 Returns 1 for a sequence,2 for a set, 10 for a polynomial and 0 otherwise.
3 Devuelve 1 para una secuencia, 2 para uno conjunto, 10 para uno polinómio y 0 si no.
4 Επιστρέφει 1 (ακολουθία), 2 (σύνολο), 10 (πολυωνύμου) και 0 διαφορετικά.
0 Expr
-1 DOM_LIST
-2 type
subtype(1,2,3)
subtype(set[1,2,3])
subtype(poly1[1,2,3])
subtype([1,2,3])

# union
1 union est un opérateur infixé pour avoir l'union de 2 ensembles.
2 union is an infixed operator to get the union of 2 sets.
3 union es un operador infijo para obtener la unión de dos conjuntos.
4 union είναι ένας εντεθειμένος τελεστής που ενώνει 2 σύνολα.
0 (Vect or Set),(Vect or Set)
-1 minus
-2 intersect
 [1,2,3] union [2,5,6]
 %{1,2,3%} union %{2,5,6%}

# valuation ldegree
1 Renvoie la valuation (degré du terme de plus bas degré) du polynôme P.
2 Returns the valuation (degree of the term of lowest degree) of the polynomial P.
3 Devuelve la evaluación del polinómio P (grado del término de grado menor).
4 Επιστρέφει την εκτίμηση (βαθμό του όρου με το χαμηλότερο βαθμό) του πολυωνύμου Ρ.
0 Poly(P)
-1 degree
-2 tcoeff
valuation(x^4+x^3)
valuation([1,1,0,0,0])
valuation(x^5+3*x^2)
valuation([5,0,0,3,0,0])

# vandermonde
1 Renvoie la matrice de Vandermonde=[V^0,V^1,..].
2 Returns the Vandermonde matrix=[V^0,V^1,..].
3 Devuelve la matriz de Vandermonde=[V^0,V^1,..].
4 Επιστρέφει τον πίνακα Vandermonde=[V^0,V^1,..].
0 Vect(V)
-1 det
vandermonde([1,2,a])

# VARS
1 Liste des variables et des répertoires du répertoire courant.
2 List of the variables and folders of the current directory.
3 Lista de las variables y de los repertorios del repertorio actual.
4 Λίστα των μεταβλητών και των φακέλων του τρέχοντος καταλόγου εργασίας.
8 变量。
0 NULL
-1 lvar
VARS()

# vpotential
1 Renvoie U tel que curl(U)=V.
2 Returns U such as curl(U)=V.
3 Devuelve U tal que curl(U)=V.
4 Επιστρέφει U τέτοιο ώστε curl(U)=V.
0 Vect(V),LstVar
-1 curl
-2 potential
vpotential([2*x*y+3,x^2-4*z,-2*y*z],[x,y,z])

# watch
1 Ajoute une variable à la liste des variables affichées en pas-à-pas.
2 Adds a variable to the list of displayed variables in step by step.
3 Añade una variable a la lista de las variables mostradas en paso a paso.
4 Προσθήκη μιας μεταβλητής στη λίστα των μεταβλητών που εμφανίζονται στην λειτουργία βήμα προς βήμα.
0 Var
-1 rmwatch
watch(a)

# while
1 Boucle tantque (effectue les instructions tant que cond==true): while (cond) {i1;i2;};
2 Loop while (do the instructions while cond==true): while (cond) {i1;i2;};
3 Bucle mientras (realiza la instrucción mientras cond==verdadero): while (cond) {i1;i2;};
4 Βρόχος while (εκτέλεση της εντολής όσο η συνθήκη παραμένει αληθής): while (cond) {i1;i2;};
8 "while..." 循环结构含有的测试从句
0 
-1 for
-2 tantque
-3 repeat
 pgcd(a,b):={local r;while (b!=0){r:=irem(a,b);a:=b;b:=r}return a;};
 quoreste(a,b):={local q:=0;while (a>=b){a:=a-b;q:=q+1;} return q,a;};

# repeat until repeter jusqua jusqu_a
1 Boucle repeter (effectue les instructions jusqu'à cond==true): repeter i1;i2;jusqua cond; ou repeat i1;i2; until cond;
2 Loop repeat (repeat the instructions until cond==true): repeat i1;i2; until cond; or repeter i1;i2;jusqua cond;
3 Bucle repeat (realiza la instrucción hasta cond==verdadero): repeat i1;i2; until cond; o repeter i1;i2;jusqua cond;
4 Βρόχος repeat (επαναλαμβάνει τις εντολές μέχρι συνθήκη==true): repeat i1;i2; until cond; ή repeter i1;i2;jusqua cond;
8 含有在 "repeat...until" 循环结构中执行的命令集。
0 
-1 for
-2 tantque
 x:=32;repeat x:=x-5 until x<5;
 x:=32;repeter x:=x-5; jusqua x<5;
  quoreste(a,b):={local q:=0;repeat a:=a-b;q:=q+1 until a<0;return q-1,a+b;};
  quoreste(a,b):={local q:=0;repeter a:=a-b;q:=q+1; jusqua a<0;return q-1,a+b;};
 n:=1;repeter triangle_plein(10*n);saute(10*n);n:=n+1; jusqua n==5;
 n:=4;repeter triangle_plein(10*n);saute(10*n);n:=n-1; jusqua n==0;

# {}
1 Bloc d'instructions.
2 Instructions bloc.
3 Bloque de instrucciones.
4 Μπλοκ εντολών.
0 
-1 begin
-2 end
-3 bloc
-4 local
-5 return
 k(x):={local (n:=x+1);return x+n;}

# abcuv
1 Renvoie [u,v] vérifiant au+bv=c pour 3 polynômes a,b,c.
2 Returns [u,v] such as au+bv=c for 3 polynomials a,b,c.
3 Devuelve [u,v] tales que au+bv=c para 3 polinomios a,b,c.
4 Επιστρέφει [u,v] έτσι ώστε au+bv=c για 3 πολυώνυμα a,b,c.
8 对多项式求解 a.u+b.v=c
0 Poly(a),Poly(b),Poly(c),[Var]
-1 egcd
-2 iabcuv
abcuv(x^2+2*x+1,x^2-1,x+1)
abcuv(X^2+2*X+1,X^2-1,X+1,X)
abcuv(x^2+2*x+1,x^2-1,x^3+1)
abcuv(X^2+2*X+1,X^2-1,X^3+1,X)
abcuv([1,2,1],[1,0,-1],[1,0,0,1])

# iabcuv
1 Renvoie [u,v] vérifiant au+bv=c pour 3 entiers a,b,c.
2 Returns [u,v] such as au+bv=c for 3 integers a,b,c.
3 Devuelve [u,v] tales que au+bv=c para 3 enteros a,b,c.
4 Επιστρέφει [u,v] έτσι ώστε au+bv=c για 3 ακεραίους a,b,c.
0 Intg(a),Intg(b),Intg(c)
-1 iegcd
-2 abcuv
iabcuv(21,28,7)
iabcuv(21,28,14)
iabcuv(21,28,1)

# iegcd igcdex bezout_entiers
1 Identité de Bézout pour 2 entiers.
2 Extended greatest common divisor of 2 integers.
3 Identidad de Bézout de 2 enteros.
4 Επεκταμένος ΜΚΔ για 2 ακεραίους (ταυτότητα Bezout).
8 整数扩展的最大公约数。  返回 [u,v,igcd(a,b)]，以使 a*u+b*v=igcd(a,b)。
0 Intg,Intg
-1 gcd
-2 iabcuv
-3 egcd
iegcd(45,75)
iegcd(21,28)
iegcd(30,49)

# acos2asin
1 Remplace arccos(x) par pi/2-arcsin(x) dans l'argument.
2 Replaces arccos(x) by pi/2-arcsin(x) in the argument.
3 Reemplaza arccos(x) por pi/2-arcsin(x) en el argumento.
4 Αντικαθιστά το arccos(x) στο όρισμα με pi/2-arcsin(x).
0 Expr
-1 acos2atan
acos2asin(acos(x)+asin(x))
acos2asin(2*acos(x))

# acos2atan
1 Remplace arccos(x) par pi/2-arctan(x/sqrt(1-x^2)) dans l'argument.
2 Replaces arccos(x) by pi/2-arctan(x/sqrt(1-x^2)) in the argument.
3 Reemplaza arccos(x) por pi/2-arctan(x/sqrt(1-x^2)) en el argumento.
4 Αντικαθιστά το arccos(x) στο όρισμα με pi/2-arctan(x/sqrt(1-x^2)).
0 Expr
-1 acos2asin
acos2atan(2*acos(x))
acos2atan(acos(sqrt(1-x^2))+acos(x))

# asin2acos
1 Remplace arcsin(x) par pi/2-arccos(x) dans l'argument.
2 Replaces arcsin(x) by pi/2-arccos(x) in the argument.
3 Reemplaza arcsin(x) por pi/2-arccos(x) en el argumento.
4 Αντικαθιστά το arcsin(x) στο όρισμα με pi/2-arccos(x).
0 Expr
-1 asin2atan
asin2acos(acos(x)+asin(x))
asin2acos(2*asin(x))

# asin2atan
1 Remplace arcsin(x) par arctan(x/sqrt(1-x^2)) dans l'argument.
2 Replaces arcsin(x) by arctan(x/sqrt(1-x^2)) in the argument.
3 Reemplaza arcsin(x) por arctan(x/sqrt(1-x^2)) en el argumento.
4 Αντικαθιστά το arcsin(x) στο όρισμα με arctan(x/sqrt(1-x^2)).
0 Expr
-1 asin2acos
asin2atan(2*asin(x))
asin2atan(asin(sqrt(1-x^2))+asin(x))

# collect
1 Factorisation d'un polynôme (ou d'une liste de poly) sur les entiers.
2 Integer factorization of a polynomial (or of a list of poly).
3 Factorización de un polinomio (o de una lista de polinomios) sobre los enteros.
4 Παραγοντοποίηση, στους ακεραίους, ενός πολυωνύμου (ή μιας λίστας πολυωνύμων).
0 Poly or LstPoly
-1 factor
-2 factors
collect(x^2-4)
collect(x^2-2)
collect([x^2-2,x^2-4])

# idivis divisors
1 Renvoie la liste des diviseurs d'un entier a.
2 Returns the list of divisors of an integer.
3 Devuelve la lista de divisores de un entero.
4 Επιστρέφει μια λίστα με τους διαιρέτες ενός ακεραίου.
8 整数除数。  返回整数 a 的所有因数组成的一列数。
0 Intg(a) or LstIntg
-1 divis
-2 ifactors
idivis(36)
idivis([36,49])

# divis
1 Renvoie la liste des diviseurs d'un polynôme.
2 Returns the list of divisors of a polynomial.
3 Devuelve la lista de divisores de un polinomio.
4 Επιστρέφει μια λίστα με τους διαιρέτες ενός πολυωνύμου
8 多项式除数。
0 Poly(P) or LstPoly
-1 idivis
-2 factors
-3 poly2symb
divis(x^2-1)
divis(x^4-1)
divis(t^4-1)
divis([x^4-1,x^2-1])
divis([x^4-1,t^2-1])
divis(poly2symb([1,0,0,0,-1],x))

# exp2pow
1 Transforme exp(n*ln(x)) en x^n.
2 Transforms exp(n*ln(x)) in x^n.
3 Transforma exp(n*ln(x)) en x^n.
4 Μετασχηματίζει το exp(n*ln(x)) σε x^n.
0 Expr
-1 pow2exp
exp2pow(exp(3*ln(x)))
exp2pow(exp(x*ln(x)))

# exp2trig
1 Transforme les exponentielles complexes en sinus et cosinus.
2 Transforms the complex exponential into sine and cosine.
3 Transforma las exponenciales complejas en senos y cosenos.
4 Μετασχματίζει τα μιγαδικά εκθετικά σε ημίτονα και συνημίτονα.
0 Expr
-1 trig2exp
-2 atrig2ln
exp2trig(exp(i*x))
exp2trig(exp(-i*x))

# sincos
1 Transforme les exponentielles complexes en sinus et cosinus (id exp2trig) ou Option de la commande convert ou convertir (id sincos).
2 Transforms the complex exponential into sine and cosine (id exp2trig) or Option of the convert or convertir command (id sincos).
3 Transforma las exponenciales complejas en senos y cosenos (id exp2trig) o Opción del comando convert o convertir (id sincos).
4 Μετασχματίζει τα μιγαδικά εκθετικά σε ημίτονα και συνημίτονα (id exp2trig) ή Επιλογή της εντολής convert ή convertir (id sincos).
0 Expr or Opt
-1 trig2trig
-2 trig2exp
-3 atrig2ln
-4 convert
sincos(exp(i*x))
sincos(exp(-i*x))
 convert(exp(i*x),sincos)

# ifactors facteurs_premiers
1 Renvoie la liste des facteurs premiers d'un entier avec leur multiplicité.
2 Returns the list of prime factors of an integer (each factor is followed by its multiplicity).
3 Devuelve la lista de factores primos de un entero y su orden de multiplicidad .
4 Επιστρέφει μια λίστα με τους πρώτους παράγοντες ενός ακεραίου (κάθε παράγοντας ακολουθείται από την πολλαπλότητά του).
8 整数因数列表。  与 ifactor 类似，但返回整数 a 的因数列，并含有其重数。
0 Intg(a) or LstIntg
-1 ifactor
-2 factors
ifactors(36)
ifactors([36,52])

# factors
1 Renvoie la liste des facteurs premiers d'un polynôme avec leur multiplicité.
2 Returns the list of prime factors of a polynomial (each factor is followed by its multiplicity).
3 Devuelve la lista de factores primos de un polinomio y su orden de multiplicidad.
4 Επιστρέφει μια λίστα με τους πρώτους παράγοντες ενός πολυωνύμου (κάθε παράγοντας ακολουθείται από την πολλαπλότητά του).
0 Poly or LstPoly
-1 factor
-2 ifactors
factors(x^4-1)
factors([x^2,x^2-1])

# fourier_an
1 Renvoie le coefficient de Fourier an=2/T*integrate(f(x)*cos(2*pi*n*x/T),a,a+T).
2 Returns the n-th Fourier coefficient an=2/T*integrate(f(x)*cos(2*pi*n*x/T),a,a+T).
3 Devuelve el coeficiente n-ésimo de Fourier an=2/T*integrate(f(x)*cos(2*pi*n*x/T),a,a+T).
4 Επιστρέφει τον n-στο συντελεστή Fourier an=2/T*integrate(f(x)*cos(2*pi*n*x/T),a,a+T).
0 Expr(f(x)),Var(x),Period(T),Intg(n),Real(a)
-1 fourier_cn
-2 fourier_bn
-3 assume
fourier_an(x^2,x,2,0,-1)
fourier_an(x^2,x,2,n,-1)

# fourier_bn
1 Renvoie le coefficient de Fourier bn=2/T*integrate(f(x)*sin(2*pi*n*x/T),a,a+T).
2 Returns the n-th Fourier coefficient bn=2/T*integrate(f(x)*sin(2*pi*n*x/T),a,a+T).
3 Devuelve el coeficiente n-ésimo de Fourier bn=2/T*integrate(f(x)*sin(2*pi*n*x/T),a,a+T).
4 Επιστρέφει τον n-στο συντελεστή Fourier bn=2/T*integrate(f(x)*sin(2*pi*n*x/T),a,a+T).
0 Expr(f(x)),Var(x),Period(T),Intg(n),Real(a)
-1 fourier_cn
-2 fourier_an
-3 assume
fourier_bn(x^2,x,2,0,-1)
fourier_bn(x^2,x,2,n,-1)

# fourier_cn
1 Renvoie le coefficient de Fourier cn=1/T*integrate(f(x)*exp(-2*i*pi*n*x/T),a,a+T).
2 Returns the n-th Fourier coefficient cn=1/T*integrate(f(x)*exp(-2*i*pi*n*x/T),a,a+T).
3 Devuelve el coeficiente n-ésimo de Fourier cn=2/T*integrate(f(x)*exp(-2*i*pi*n*x/T),a,a+T).
4 Επιστρέφει τον n-στο συντελεστή Fourier cn=2/T*integrate(f(x)*exp(-2*i*pi*n*x/T),a,a+T).
0 Expr(f(x)),Var(x),Period(T),Intg(n),Real(a)
-1 fourier_an
-2 fourier_bn
-3 assume
fourier_cn(x^2,x,2,0,-1)
fourier_cn(x^2,x,2,n,-1)

# f2nd fxnd
1 Renvoie la liste formée par le numérateur et le dénominateur de la fraction simplifiée.
2 Returns the list built with the numerator and the denominator of the simplified fraction .
3 Devuelve la lista formada por el numerdador y el denominador de la facción simplificada.
4 Επιστρέφει μια λίστα που ορίζεται από τον αριθμητή και τον παρονομαστή του ορίσματος.
0 Frac or RatFrac
-1 simp2
-2 numer
-3 denom
-4 getNum
-5 getDenom
f2nd(42/12)
f2nd((x^2+2*x+1)/(x^2-1))

# gbasis
1 Base de Groebner de l'idéal engendré par la liste de polynômes.
2 Groebner basis of the ideal spanned by the list of polynomials.
3 Base Groebner del ideal generado por la lista de polinomios.
4 Βάση Groebner του ιδεώδους που παράγεται από τη λίστα των πολυωνύμων.
0 LstPoly,LstVar,[order]
-1 greduce
-2 gbasis_max_pairs
-3 gbasis_simult_primes
gbasis([x^2-y^3,x+y^2],[x,y])
gbasis([x1+x2+x3,x1*x2+x1*x3+x2*x3,x1*x2*x3-1],[x1,x2,x3])
gbasis([x1+x2+x3,x1*x2+x1*x3+x2*x3,x1*x2*x3-1],[x1,x2,x3],tdeg)
gbasis([x1+x2+x3,x1*x2+x1*x3+x2*x3,x1*x2*x3-1],[x1,x2,x3],plex)
gbasis([x1+x2+x3,x1*x2+x1*x3+x2*x3,x1*x2*x3-1] mod 29,[x1,x2,x3])

# gbasis_max_pairs
1 Reglage expert de gbasis: nombre maximal de S-paires reduites simultanement au cours de l'algorithme F4 (par defaut 32768, utiliser 0 pour ne pas le limiter). A diminuer si la memoire manque.
2 Gbasis fine-tuning: maximal number of S-pairs to be reduced simultaneously inside F4 algorithm (default 32768, 0 means no limit). Set it to a smaller value if short in memory.
0 Intg
gbasis_max_pairs(4096)
-1 gbasis
-2 gbasis_simult_primes
-3 gbasis_reinject
gbasis_max_pairs(0)

# gbasis_simult_primes
1 Reglage expert de gbasis: nombre maximal de bases de Groebner modulo un nombre premier calcules simultanement pour reconstruire une base de Groebner sur Q (par defaut 16). A diminuer si la memoire manque.
2 Gbasis fine-tuning: maximal number of Groebner basis modulo a prime that are computed simultaneously to rebuild a Groebner basis over Q (default 16). Set it to a smaller value if short in memory.
0 Intg
-1 gbasis
-2 gbasis_max_pairs
-3 gbasis_reinject 
gbasis_simult_primes(3)

# gbasis_reinject
1 Reglage expert de gbasis: dans l'algorithme modulaire de calcul d'une base de Groebner sur Q, on reinjecte une partie reconstruite de la base dans les generateurs lorsque le ratio de nouveaux elements depasse a et la vitesse 2eme run/1er run >= b (par defaut a=0.2 et b=1/6.)
2 Gbasis fine-tuning: in the modular algorithm of a gbasis over Q, adds a partial reconstruction of the basis if the ratio of new elements is greater than a and the speed ratio of the 2nd run/1st run is >= b (default a=0.2 and b=1/6.)
0 Real(a),[Real(b)]
-1 gbasis
-2 gbasis_max_pairs
-3 gbasis_reinject 
gbasis_reinject(0.1)
gbasis_reinject(0.1,0.05)

# greduce
1 Renvoie le reste de la division d'un polynôme par une base de Groebner.
2 Returns the remainder of the division of a polynomial by a Groebner basis.
3 Devuelve el resto de la división de un polinomio por una base Groebner.
4 Επιστρέφει το υπόλοιπο της διαίρεσης του πολυωνύμου με μία βάση Groebner.
0 Poly,LstPoly,LstVar,[order]
-1 gbasis
greduce(x*y-1,[x^2-y^2,2*x*y-y^2,y^3],[x,y])
greduce(x1^2*x3^2,[x3^3-1,-x2^2-x2*x3-x3^2,x1+x2+x3],[x1,x2,x3],tdeg)
greduce(x1^2*x3^2-x2,[x3^3-1,-x2^2-x2*x3-x3^2,x1+x2+x3],[x1,x2,x3])

# halftan
1 Transforme sin(x),cos(x) et tan(x) en fonction de tan(x/2).
2 Transforms sin(x),cos(x) and tan(x) as function of tan(x/2).
3 Transforma sin(x),cos(x) y tan(x) como funciones de tan(x/2).
4 Ματασχηματίζει sin(x),cos(x) και tan(x) συναρτήσει της tan(x/2).
0 Expr
halftan(sin(x))
halftan(cos(x))
halftan(tan(x))

# horner
1 Renvoie la valeur P(a) calculée selon la méthode de Hörner. La syntaxe horner(liste_alpha_i,liste_x_i,x) permet d'utiliser les differences divisees pour evaluer un polynome d'interpolation en x.
2 Returns the value of P(a) calculated with Horner's method. With horner(liste_alpha_i,liste_x_i,x), evals an interpolation polynomial from the divided differences at x.
3 Devuelve el valor de P(a) calculado según el método de Horner.
4 Επιστρέφει την τιμή P(a) υπολογισμένη με τη μέθοδο Horner.
0 Poly(P),Real(a)
-1 convert
-2 base
-3 revlist
horner(x^2+1,2)
horner([1,0,1],2)
horner(x^2+y*x+y^3-1,2,y)
 X:=[0.0,1.0,2.0]; A:=lagrange(X,exp,lagrange); horner(A,X,1.5);

# ifte IFTE
1 Si condition renvoie Expr1 sinon renvoie Expr2.
2 If condition returns Expr1 else returns Expr2.
3 Si condición devuelve Expr1 sino devuelve Expr2.
4 Εάν συνθήκη=true επιστρέφει Expr1 αλλιώς επιστρέφει Expr2.
8 对测试求值。  如果测试为真值（非 0），则返回 Expr1，否则返回 Expr2。
0 Cond,Expr1,Expr2
-1 if
-2 then
-3 else
-4 when
 x:=3;ifte(x>0,x+1,x-1)
 a:=2;ifte(a>1,a+1,0)

# when
1 Si condition (même symbolique) renvoie Expr1 sinon renvoie Expr2 (? est la version infixée de when).
2 If condition (even symbolic) returns Expr1 else returns Expr2 (? is the infixed version of when).
3 Si condición (aún simbólica) devuelve Expr1 sino devuelve Expr2 (? es la versión infija de when).
4 Εάν συνθήκη (ακόμα και συμβολική) επιστρέφει Expr1 αλλιώς επιστρέφει Expr2 (? είναι η εντεθειμένη μορφή του when).
8  对测试求值。  如果测试为真值（非 0），则返回 Expr1，否则返回 Expr2。(或 (Cond)?Expr1:Expr2)。
0 Cond,Expr1,Expr2
-1 ?
-2 if
-3 then
-4 else
-5 ifte
when(x>0,x+1,x-1)
when(n,1,0)
 (a>1)?a+1:0

# ?
1 ? est la version infixée de when : (Cond) ? Expr1:Expr2. Si la condition Cond=1 (même symbolique) renvoie Expr1 sinon renvoie Expr2.
2 ? is the infixed version of when : (Cond) ? Expr1:Expr2. If condition Cond=1 (even symbolic) returns Expr1 else returns Expr2.
3 ? es la versión infija de when :(Cond) ? Expr1:Expr2. Si condiciónCond=1 (aún simbólica) devuelve Expr1 sino devuelve Expr2.
4 ? είναι η εντεθειμένη μορφή του when : (Cond) ? Expr1:Expr2. Eάν συνθήκη Cond=1 (ακόμα και συμβολική) επιστρέφει Expr1 αλλιώς επιστρέφει Expr2.
8 或 (Cond)?Expr1:Expr2。对测试求值。  如果测试为真值（非 0），则返回 Expr1，否则返回 Expr2。
0 Cond,Expr1,Expr2
-1 when
-2 if
-3 then
-4 else
-5 ifte
 (x>0)?x+1:x-1
 (n),1:0
 (a>1)?a+1:0

# intersect
1 intersect est un opérateur infixé pour avoir l'intersection de 2 ensembles.
2 intersect is a infixed operator to get the intersection of 2 sets.
3 intersect es un operador infijo para obtener la intersection de 2 conjuntos.
4 intersect είναι ένας εντεθειμένος τελεστής για την τομή 2 συνόλων.
0 (Vect or Set),(Vect or Set)
-1 union
-2 minus
 [1,2,3] intersect [2,5,6]
 %{1,2,3%} intersect %{2,5,6%}
[1..3] intersect [2..4]

# lncollect
1 Rassemble les logarithmes. Applique ln(a)+n*ln(b)->ln(a*b^n) pour n entier.
2 Collect logarithms. Applies ln(a)+n*ln(b)->ln(a*b^n) for integers n.
3 Aplica ln(a)+n*ln(b)->ln(a*b^n) para n entero.
4 Εφαρμόζεται τον ln(a)+n*ln(b)->ln(a*b^n) για ακεραίο n.
8 合并对数项  : lncollect(ln(a)+3*ln(b)) 返回  ln(a*b^3))
0 Expr
-1 texpand
lncollect(ln(x)+2*ln(y))

# makemat
1 Crée une matrice à partir de la fonction f.
2 Create a matrix.
3 Crea una matriz.
4 Δημιουργία ενός πίνακα.
8 产生矩阵。 利用函数来计算每个元素，从而创建维数为“行数 x 列数”的矩阵。 如果函数包含变量 I 和 J，则每个元素的计算值会替代变量 I 所占的当前行数及变量 J 所占的当前列数。
0 Fnct(f),RowsNumb,ColsNumb
-1 matrix
makemat((j,k)->j+k,3,2)
makemat((j,k)->1/(j+k+1),2,3)
makemat(sqrt(2),2,3)

# matrix
1 Crée une matrice m(j,k) de p lignes et q colonnes, m(j,k)=f(j,k) ou m(j,k)=a avec des indices qui commencent à 0 ou 1 selon le mode Xcas ou Maple (ou option de apply) ou crée une matrice à partir d'une table.
2 Make a matrix m(j,k) with p rows and q cols, m(j,k)=f(j,k) or m(j,k)=a : the index start at 0 or 1 according to the mode (Xcas or Maple) (or option of apply) or make a maytice with a table.
3 Crea una matriz m(j,k) de p filas y q columnas, m(j,k)=f(j,k) o f(j,k)=a (o opción de apply).
4 Δημιουργία ενός πίνακα m(j,k) με p γραμμές και q στήλες, m(j,k)=f(j,k) ή m(j,k)=a.
0 Intg(p),Intg(q),(Fnc(f) or Val(a))
-1 makemat
-2 makelist
-3 apply
matrix(2,3,(j,k)->1/(j+k+1))
matrix(3,2,(j,k)->j+k)
matrix(2,3,4)
  A[0..2,0..2]:=1;A[0..1,1..2]:=2;a:=matrix(A) 

# display color
1 Trace un objet géométrique en couleur (noir=0 rouge=1 vert=2 jaune=3 bleu=4), en trait +/- épais (line_width_n 0<n<8) et peut l'afficher selon une ligne pointillée (dash_line), rempli permet de remplir un polygone ou une courbe fermée.
2 Draws an geometrical object with colors black=0 red=1 green=2 yellow=3 blue=4, filled put the color in the interior of a closed curve,line_width_n (0<n<8) is for the width of the line and dash_line is for dotted line.
3 Dibuja un objeto geométrico con colores (negro=0 rojo=1 verde=2 amarillo=3 azul=4), con trazado +/- grueso (line_width_n 0<n<8) y puede mostrarlo según una recta punteada (dash_line), mientras filled permite de rellenar un polígono o una curva cerrada.
4 Σχεδιασμός ενός γεωμετρικού αντικειμένου με χρώματα: μαύρο=0 κόκκινο=1 πράσινο=2 κίτρινο=3 μπλε=4), και με το + καθορίζουμε το πάχος της ευθείας (line_width_n 0<n<8) και το εάν θα είναι διακεκομένη (dash_line), ενώ το filled (rempli) επιτρέπει να γεμίσουμε με το χρώμα ένα πολύγωνο ή μια κλειστή καμπύλη.
0 [GeoObj or legende],Intg
-1 -<
-2 legende
display(A,1)
display(F:=point(2+1.5*i),2)
display(point(2+1.5*i),2)
display(legende(1+i,"abc"),4)
display(square(0,1),filled+red)
display(carre(0,1),rempli+rouge)
display(circle(0,1),filled)
display(line(y=x),green+dash_line+line_width_2)
display(red);square(0,1);
display(red+filled);square(0,1);

# point_width_1 point_width_2 point_width_3 point_width_4 point_width_5 point_width_6 point_width_7 epaisseur_point_1 epaisseur_point_2 epaisseur_point_3 epaisseur_point_4 epaisseur_point_5 epaisseur_point_6 epaisseur_point_7
1 Option de la commande affichage (ou display) pour un point.
2 Option of the display command for a point.
3 Opción de la instrucción display para un punto.
4 Επιλογή της εντολής display (ή affichage) για ένα σημείο.
0 Opt
-1 display
-2 thickness
 display(point(1+i),green+point_triangle+point_width_2)
 display(milieu(segment(0,1+i)),point_width_5)
 point(i,affichage=epaisseur_point_3)

# line_width_1 line_width_2 line_width_3 line_width_4 line_width_5 line_width_6 line_width_7 epaisseur_ligne_1 epaisseur_ligne_2 epaisseur_ligne_3 epaisseur_ligne_4 epaisseur_ligne_5 epaisseur_ligne_6 epaisseur_ligne_7
1 Option de la commande affichage (ou display) pour une ligne.
2 Option of the display command for a line.
3 Opción de la instrucción display para una línea.
4 Επιλογή της εντολής display (ή affichage) για μια γραμμή.
0 Opt
-1 display
-2 thickness
 display(line(y=x),green+dash_line+line_width_2)
 display(segment(0,1+i),line_width_5)
 segment(1,i,affichage=epaisseur_ligne_4)

# dash_line ligne_tiret solid_line ligne_trait_plein dashdot_line ligne_tiret_point dashdotdot_line ligne_tiret_pointpoint cap_flat_line ligne_chapeau_plat cap_square_line ligne_chapeau_carre cap_round_line ligne_chapeau_rond
1 Option de la commande affichage (ou display) pour une ligne.
2 Option of the display command for a line.
3 Opción de la instrucción display para una línea.
4 Επιλογή της εντολής display (ή affichage) για μια γραμμή.
0 Opt
-1 display
 display(line(y=x),green+dash_line+line_width_2)
 d:=display(line(2+i,1),cap_round_line)

# rhombus_point point_losange plus_point point_plus square_point point_carre cross_point point_croix triangle_point point_triangle star_point point_etoile point_point invisible_point point_invisible
1 Option de la commande affichage (ou display) pour un point.
2 Option of the display command for a point.
3 Opción de la instrucción display para un punto.
4 Επιλογή της εντολής display (ή affichage) για ένα σημείο.
0 Opt
-1 display
 F:=display(point(2+1.5*i),point_point)
 F:=display(point(2+1.5*i),rhombus_point)

# hidden_name nom_cache
1 Option de la commande affichage (ou display) pour ne pas afficher le nom.
2 Option of the display command to hide the name.
3 Opción de la instrucción display para esconder el nombre.
4 Επιλογή της εντολής display (ή affichage) για την απόκρυψη ονόματος.
0 Opt
-1 display
 F:=display(point(2+1.5*i),hidden_name)
 F:=display(point(2+1.5*i),point_point+hidden_name)

# filled
1 Option de la commande affichage (ou display) pour faire des figures pleines.
2 Option of the display command to fill figures.
3 Opción de la instrucción display para rellenar figuras.
4 Επιλογή της εντολής display (ή affichage) για το γέμισμα με χρώμα επίπεδων αναπαραστάσεων.
0 Opt
-1 display
 F:=display(square(0,2+i),filled)
 C:=display(square(2,2+i),red+filled)

# white black red green blue yellow magenta cyan
1 Option de la commande affichage (ou display) pour afficher en couleur.
2 Option of the display command to display with color.
3 Opción de la instrucción display para colores.
4 Επιλογή της εντολής display (ή affichage) για εμφάνιση χρωμάτων.
0 Opt
-1 display
 F:=display(point(2+1.5*i),red)
 F:=display(point(2+1.5*i),point_point+green)

# quadrant1 quadrant2 quadrant3 quadrant4
1 Option de la commande affichage pour afficher une légende.
2 Option of the display command to write a legend.
3 Opción de la instrucción display para escribir una leyenda.
4 Επιλογή της εντολής display (ή affichage) για τη δημιουργία επεξηγηματικής λεζάντας.
0 Opt
-1 display
 display(legende(1+i,"abc"),4+quadrant2)

# -<
1 Opérateur infixé (équivalent à l'instruction préfixée couleur) qui définit les attributs d'une figure géométrique.
2 Infixed operator (equivalent to the prefixed instruction color) which define the attributes of a geometrical figure.
3 Operador infijo (equivalente a la instrucción prefija color) que define los atributos de una figura geométrica.
4 Εντεθειμένος τελεστής (ισοδύναμος με την προτεθειμένη εντολή χρώματος) που καθορίζει τις ιδιότητες μιας γεωμετρικής αναπαράστασης.
0 GeoObj,Attribut
-1 color
 square(0,1) -< filled+red
 square(0,2) -< green
 square(0,2) -< green+dash_line
 square(0,2) -< filled

# ->
1 Opérateur infixé qui définit une fonction utilisateur: x->f(x).
2 Infixed operator which define an user function: x->f(x).
3 Operador infijo que define una función definida por el usuario: x->f(x).
4 Εντεθειμένος τελεστής που καθορίζει μια συνάρτηση ως απεικόνιση: x->f(x).
0 VectVar(x),Expr(f(x))
-1 for
-2 if
-3 local
-4 {}
 x -> sin(x)
 f:= (x,y)->sin(x+y)+sin(x-y)
 k:=(x,y)->{if (x!=y) 0; else 1;}
 g:=(x,y)->return(sin(x+y),sin(x-y))

# function fonction	
1 Instruction qui définit une fonction utilisateur.
2 Instruction which define an user function.
3 Instrucción que define una función definida por el usuario.
4 Εντολή που καθορίζει μια συνάρτηση ως απεικόνιση.
0 Fnc(f)
-1 ->
-2 :=
-3 end
-4 ffonction
fonction f(a,b) local c;c=a+b;c+gcd(a,b);ffonction;
 f:=function(a,b) local c;c=a+b;c+gcd(a,b);end;
 f:=fonction(a,b) local c;c=a+b;c+gcd(a,b);ffonction;

# mod %
1 Opérateur infixé qui renvoie n mod p un nombre de ℤ/pℤ.
2 Infixed operator which returns n mod p a number of ℤ/pℤ.
3 Operador infijo que devuelve n mod p un número de ℤ/pℤ.
4 Εντεθειμένος τελεστής που επιστρέφει n mod p, έναν αριθμό του ℤ/pℤ.
8 求模。 返回值 1/值 2 的余数。
0 Intg(n),Intg(p)
-1 smod
-2 irem
-3 fracmod
 15 mod 6
 (2 mod 10)^50
 (72 mod 7) mod 0
 (2%10)^50
 (72%7)%0

# fmod
1 Renvoie a mod b pour a et b flottants
2 Returns a mod b for a and b floats
0 Real(a),Real(b)
1 mod
fmod(10.0,pi)

# pa2b2
1 Renvoie [a,b] tels que a^2+b^2=n (pour n premier et n=1 (mod 4)).
2 Returns [a,b] such as a^2+b^2=n (for n prime and n=1 (mod 4)).
3 Devuelve [a,b] tales que a^2+b^2=n (para n primo y n=1 (mod 4)).
4 Επιστρέφει [a,b] έτσι ώστε a^2+b^2=n (για n πρώτο και n=1 (mod 4)).
0 Intg(n)
pa2b2(17)
pa2b2(209)
pa2b2(229)

# permu2cycles
1 Convertit une permutation en un produit de cycles disjoints.
2 Converts a permutation to a product of disjoined cycles.
3 Convierte una permutación en un producto de ciclos disjuntos.
4 Μετατρέπει μια μετάθεση σε γινόμενο ξένων κύκλων.
0 Permut
-1  cycles2permu
-2 cycle2perm
permu2cycles([0,2,1,3,5,4])
permu2cycles([0,2,1,4,3,5])

# plotseq seqplot graphe_suite
1 Permet de visualiser les p premiers termes de la suite u(0)=a,u(n)=f(u(n-1)).
2 For seeing the pth terms of the sequence u(0)=a,u(n)=f(u(n-1)).
3 Permite visualizar los p primeros términos de la sucesión u(0)=a,u(n)=f(u(n-1)).
4 Για την εμφάνιση των πρώτων p όρων της ακολουθίας u(0)=a,u(n)=f(u(n-1)).
0 Expr(f(Var)),Var=[a,xm,xM],Intg(p)
-1 seqsolve
-2 rsolve
plotseq(sqrt(2+x),6,5)
plotseq(sqrt(2+t),t=6,5)
plotseq(sqrt(2+x),x=[6,1,7],5,affichage=epaisseur_ligne_2)

# propfrac propFrac
1 Simplifie et écrit la fraction (ou fraction rationnelle) A/B sous la forme Q+R/B avec R<B (ou deg(R)<deg(B)).
2 Simplifies and writes the fraction (or rational fraction) A/B as Q+R/B with R<B (or deg(R)<deg(B)).
3 Simplifica y escribe la facción (o fracción racional) A/B como Q+R/B con R<B (o deg(R)<deg(B)).
4 Απλοποίηση και απόδοση του κλάσματος (ή ρητής συνάρτησης) A/B ως Q+R/B με R<B (ή deg(R)<deg(B)).
0 Frac or RatFrac
-1 partfrac
propfrac(28/12)
propfrac((x^2+2*x-1)/(x+1))

# rank
1 Renvoie le rang de la matrice.
2 Returns the rank of the matrix.
3 Devuelve el rango de una matriz.
4 Επιστρέφει την τάξη του πίνακα.
8 排列矩形矩阵。
0 Mtrx
-1 det
-2 image
rank([[1,1,2],[2,1,3],[3,1,4]])
rank([[1,1,2],[2,1,3],[3,1,5]])

# romberg nInt
1 Renvoie la valeur approchée de integrate(f(x),x,a,b) par la méthode de Romberg.
2 Returns the approximate value of integrate(f(x),x,a,b) by Romberg's method.
3 Devuelve el valor aproximado de integrate(f(x),x,a,b) por el método de Romberg.
4 Επιστρέφει την προσεγγιστική τιμή του ολοκληρώματος(f(x),x,a,b) με τη μέθοδο του Romberg.
0 Expr(f(x)),Var(x),Real(a),Real(b)
-1 integrate
-2 gaussquad
romberg(exp(x^2),x,0,1)
romberg(x^2,x,0,1)
romberg(exp(-x^2),x,-1,1)

# gaussquad
1 Renvoie la valeur approchée de integrate(f(x),x,a,b) par une quadrature de Gauss adaptative à 15 points.
2 Returns the approximate value of integrate(f(x),x,a,b) by adaptive Gaussian quadratures with 15 points.
3 Devuelve el valor aproximado de integrate(f(x),x,a,b)  por el método de Gauss.
4 Επιστρέφει την προσεγγιστική τιμή του ολοκληρώματος(f(x),x,a,b) με τη μέθοδο του Gauss.
0 Expr(f(x)),Var(x),Real(a),Real(b)
-1 integrate
-2 romberg
gaussquad(exp(x^2),x,0,1)
gaussquad(x^2,x,0,1)
gaussquad(exp(-x^2),x,-1,1)

# round
1 Arrondit le réel ou complexe en l'entier (resp le décimal) le plus proche ou en l'élément de ℤ[i] le plus proche, (resp avec n décimales).
2 Rounds the real or complex as the nearest integer (resp the nearest decimal number) or as nearest element of ℤ[i], (resp with n decimals).
3 Redondea el número real (o complejo) al entero más cerca (o elemento de ℤ[i]), con n decimales.
4 Επιστρέφει τον πραγματικό ή μιγαδικό ως τον πλησιέστερο ακέραιο ή ως το πλησιέστερο στοιχείο του ℤ[i], με n δεκαδικά.
8 四舍五入。 对数值四舍五入到小数位。 接受复数。
0 Real or Cplx,[Intg(n)]
-1 floor
-2 ceil
round(2.5)
round(-2.4)
round(-2.5+i*2.4)
round(1.237,2)
round(sqrt(2)+i*sqrt(5),4)

# epsilon
1 Renvoie la valeur de epsilon de la configuration du CAS.
2 Returns the value of epsilon of the CAS configuration.
3 Devuelve el valor de epsilon de la configuración del CAS.
4 Επιστρέφει την τιμή του έψιλον της ρύθμισης του CAS.
0 NULL
-1  epsilon2zero
epsilon()

# simp2
1 Renvoie la liste [A/gcd(A,B),B/gcd(A,B)].
2 Returns the list [A/gcd(A,B),B/gcd(A,B)].
3 Devuelve la lista [A/gcd(A,B),B/gcd(A,B)].
4 Επιστρέφει την λίστα [A/gcd(A,B),B/gcd(A,B)].
0 Intg(A) or Poly(A),Intg(B) or Poly(B)
-1 gcd
simp2(12,18)
simp2(x^3-1,x^2-1)

# simplify simplifier
1 Simplifie une expression.
2 Simplifies an expression.
3 Simplifica una expresión.
4 Απλοποίηση μιας παράστασης.
0 Expr
-1 normal
simplify(4*atan(1/5)-atan(1/239))
simplify(texpand((sin(3*x)+sin(7*x))/sin(5*x)))
simplify(texpand((cos(3*x)+cos(7*x))/cos(5*x)))

# sort sorted
1 Renvoie la liste (ou suite) triée par ordre croissant ou selon la fonction donnée en second argument qui définit un ordre strict faible ou trie et collecte les termes égaux dans les sommes et produits.
2 Returns the sorted list (or sequence) with increasing order according with the second argument which defines an weak strict ordering or sort and collect equal terms in sums and products.
3 Devuelve la lista (o secuencia) ordenada en orden creciente o según la función dada en segundo argumento, o ordena y recupera los términos iguales en las sumas y los productos.
4 Επιστρέφει την λίστα (ή ακολουθία) ταξινομημένη κατά αύξοντα ή φθίνοντα τρόπο σύμφωνα με το 2ο όρισμα ή ταξινομεί και συλλέγει ίσους όρους σε αθροίσματα και γινόμενα.
8 数据列排序。  按升序对数据列中的元素排序。
0 LstReal or Seq [Fnc]
-1 SortA
-2 SortD
sort([3,2,2,4,1,0])
sort(3,2.1,2,4,1,0)
sort([3,4,2],(x,y)->x>y)
sort([[1,2],[2,3],[4,3]],(x,y)->when(x[1]==y[1],x[0]>y[0],x[1]>y[1]))
sort(y*x*2+x*y)

# split
1 Sépare les deux variables var1,var2 de l'expression Xpr (si elle n'a pas de dénominateur) ou renvoie [0].
2 Splits the two variables var1,var2 of the expression Xpr (without denominator) or returns [0].
3 Separa las 2 variables var1,var2 de la expresión Xpr (sin no tiene denominador) o devuelve [0].
4 Διασπά τις 2 μεταβλητές var1,var2 της παράστασης Xpr (αν δεν έχει παρονομαστή) ή επιστρέφει [0].
0 Expr(Xpr),Lst(var1,var2)
-1 factor
split(x^3*y^2-y^2+x^3-1,[x,y])
split(x^3*y^2-y^2+x^3+1,[x,y])

# sum_riemann
1 Renvoie un équivalent au voisinage de var1=+infini de la somme de Xpr(var1,var2) pour var2 allant de 1 à var1 lorsque la somme est une somme de Riemann.
2 Returns an equivalent when var1=+infinity of the sum of Xpr(var1,var2) for var2 from 1 to var1 when the sum is a sum of Riemann.
3 Devuelve un equivalente en la vecindad de var1=+infini de la suma de Xpr(var1,var2) para var2:=1 a var1 cuando la suma es una suma de Riemann.
4 Επιστρέφει μία παράσταση ισοδύναμη προς το άθροισμα της Xpr(var1,var2) στην περιοχή var1=+infini όταν var2:=1 ή var1 όταν το άθροισμα είναι άθροισμα Riemann.
0 Expr(Xpr),Lst(var1,var2)
-1 
sum_riemann(1/(n+k),[n,k])
sum_riemann(n/(n^2+k),[n,k])
sum_riemann(n/(n^2+k^2),[n,k])

# sturmseq
1 Suite de Sturm associée à un polynôme ou à une fraction rationnelle.
2 Sturm sequence corresponding to a polynomial or to a rational fraction.
3 Secuencia de Sturm asociada a un polinomio o a una fracción racional.
4 Ακολουθία Sturm που αντιστοιχεί σε ένα πολυώνυμο ή σε μια ρητό παράσταση.
0 Poly,[Var]
-1 sturm
-2 sturmab
sturmseq(x^3-1,x)
sturmseq(x^5-x^3,x)
sturmseq((x^5-x^3)/(x+2),x)

# sturm
1 Suite de Sturm associée à un polynôme ou nombre de changements de signe de ce polynôme dans ]a;b] ou de racines complexes dans a..b si a ou b est non réel.
2 Sturm sequence corresponding to a polynomial or number of sign changes of this polynomial in ]a;b].
3 Secuencia de Sturm asociada a un polinomio o número de cambios de signo de este polinomio en ]a;b].
4 Ακολουθία Sturm που αντιστοιχεί σε ένα πολυώνυμο ή ο αριθμός μεταβολών προσήμου αυτού του πολυωνύμου στο ]a;b].
0 Poly,[Var],[Cplx(a)],[Cplx(b)]
-1 sturmseq
-2 sturmab
sturm(x^3-1,x)
sturm(x^5-x^3,x)
sturm((x^5-x^3)/(x+2),x)
sturm(x^5-x^3,x,-2,5)
sturm(x^3-1,x,-2-i,5+3i)

# sturmab
1 Nombre de changements de signe d'un polynôme dans ]a;b] ou de racines complexes dans a..b si a ou b est non réel.
2 Number of sign changes of a polynomial in ]a;b] or of complex roots in a..b if a or b is non-real.
3 Número de cambios de signo de un polinomio en ]a;b] o de raíces complejas en a..b si a o b no es real.
4 Αριθμός των μεταβολών προσήμου του πολυωνύμου στο ]a;b] ή των μιγαδικών ριζών στο a..b αν a ή b είναι μη-πραγματικοί.
0 Poly,Var,Cplx(a),Cplx(b)
-1 sturm
-2 sturmseq
-3 realroot
sturmab(x^3-1,x,-2,5)
sturmab(x^3-1,x,-2-i,5+3i)

# tail
1 Renvoie la liste (ou suite ou chaîne) privée de son premier élément.
2 Returns the list (or sequence or string) without its first element.
3 Devuelve la lista (o secuencia o cadena) sin su primer elemento.
4 Επιστρέφει την λίστα (ή την ακολουθία ή συμβολοσειράς) δίχως το 1ο στοιχείο.
0 Lst or Seq or Str
-1 head
-2 mid
-3 left
-4 right
-5 back
tail([3,2,4,1,0])
tail(3,2,4,1,0)
tail("bonjour")

# mid
1 Renvoie la liste de n éléments (par défaut n=size(l)-d) extraite de l en commençant par l'indice d.
2 Returns the extracted list of l with n elements (by default n=size(l)-d) and beginning at index d.
3 Devuelve la lista de n elementos (por defecto n=size(l)-d) extraída de l empezando con el índice d.
4 Επιστρέφει την λίστα των n (προεπιλογή n=size(l)-d) στοιχείων που εξάγονται από την l αρχής γενομένης από τον δείκτη d.
0 Lst(l) or Str(l),Intg(d),Intg(n)
-1 head
-2 tail
-3 left
-4 right
-5 subMat
mid([0,1,2,3,4,5,6],2,3)
mid([0,1,2,3,4,5,6],2)
mid("azertyuiop",2,4)
mid("azertyuiop",2)
mid([[1,2],[3,4],[5,6]],1)

# tan2sincos
1 Remplace tan(x) par sin(x)/cos(x) dans l'argument.
2 Replaces tan(x) by sin(x)/cos(x) in the argument.
3 Reemplaza tan(x) por sin(x)/cos(x) en el argumento.
4 Αντικαθιστά στο όρισμα το tan(x) με sin(x)/cos(x).
0 Expr
-1 sin2costan
-2 cos2sintan
-3 tan2sincos2
-4 tan2cossin2
tan2sincos(tan(x))

# sin2costan
1 Remplace sin(x) par cos(x)*tan(x) dans l'argument.
2 Replaces sin(x) by cos(x)*tan(x) in the argument.
3 Reemplaza sin(x) por cos(x)*tan(x) en el argumento.
4 Αντικαθιστά στο όρισμα το sin(x) με cos(x)*tan(x).
0 Expr
-1 tan2sincos
-2 cos2sintan
-3 tan2sincos2
-4 tan2cossin2
sin2costan(sin(x))

# cos2sintan
1 Remplace cos(x) par sin(x)/tan(x) dans l'argument.
2 Replaces cos(x) by sin(x)/tan(x) in the argument.
3 Reemplaza cos(x) por sin(x)/tan(x) en el argumento.
4 Αντικαθιστά στο όρισμα το cos(x) με sin(x)/tan(x).
0 Expr
-1 tan2sincos
-2 sin2costan
-3 tan2sincos2
-4 tan2cossin2
cos2sintan(cos(x))

# tan2sincos2
1 Remplace tan(x) par sin(2*x)/(1+cos(2*x)) dans l'argument.
2 Replaces tan(x) by sin(2*x)/(1+cos(2*x)) in the argument.
3 Reemplaza tan(x) por sin(2*x)/(1+cos(2*x)) en el argumento.
4 Αντικαθιστά στο όρισμα το tan(x) με sin(2*x)/(1+cos(2*x)).
0 Expr
-1 tan2cossin2
-2 tan2sincos
-3 sin2costan
-4 cos2sintan
tan2sincos2(tan(x))

# tan2cossin2
1 Remplace tan(x) par (1-cos(2*x))/sin(2*x) dans l'argument.
2 Replaces tan(x) by (1-cos(2*x))/sin(2*x) in the argument.
3 Reemplaza tan(x) por (1-cos(2*x))/sin(2*x) en el argumento.
4 Αντικαθιστά στο όρισμα το tan(x) με (1-cos(2*x))/sin(2*x).
0 Expr
-1 tan2sincos2
-2 tan2sincos
-3 sin2costan
-4 cos2sintan
tan2cossin2(tan(x))

# tanh
1 Tangente hyperbolique.
2 Hyperbolic tangent.
3 Tangente hiperbólica.
4 Υπερβολική εφαπτομένη.
8 双曲正切。
0 Expr
-1 atanh
-2 hyp2exp
tanh(0)
hyp2exp(tanh(1))

# tcollect tCollect rassembler_trigo
1 Rassemble des expressions trigonométriques.
2 Collect trigonometric expressions.
3 Agrupa expresiones trigonométricas.
4 Συλλογή τριγωνομετρικών παραστάσεων.
0 Expr
-1 texpand
-2 tlin
tcollect(sin(x)+cos(x))

# texpand tExpand developper_transcendant
1 Développe des expressions transcendantes.
2 Expand transcendental expressions.
3 Expande expresiones transcendentales.
4 Ανάπτυγμα υπερβατικών παραστάσεων.
0 Expr
-1 tcollect
-2 tlin
-3 lin
-4 trigexpand
texpand(sin(2*x)+exp(x+y))
texpand(cos(x+y))
texpand(cos(3*x))

# trig2exp
1 Remplace dans l'argument les fonctions trigonométriques en exponentielles complexes sans linéariser.
2 Replaces in the argument the trigonometric functions by complex exponentials without linearisation.
3 Reemplaza en el argumento las funciones trigonométricas por exponenciales complejas sin linealización.
4 Αντικαθιστά τις τριγωνομετρικές συναρτήσεις στο όρισμα από μιγαδικά εκθετικά χωρίς γραμμικοποίηση.
0 Expr
-1 exp2trig
-2 atrig2ln
trig2exp(sin(x))

# trigcos
1 Simplifie l'argument avec les formules sin(x)^2+cos(x)^2=1 et tan(x)=sin(x)/cos(x) en privilégiant les cosinus.
2 Simplifies the argument with the formulas sin(x)^2+cos(x)^2=1 and tan(x)=sin(x)/cos(x) privileging cosine.
3 Simplifica el argumento usando las fórmulas sin(x)^2+cos(x)^2=1 y tan(x)=sin(x)/cos(x) prefiriendo los cosenos.
4 Απλοποίηση του ορίσματος με τους τύπους sin(x)^2+cos(x)^2=1 και tan(x)=sin(x)/cos(x) δίνοντας προτεραιότητα στο συνημίτον.ο
0 Expr
-1 trigsin
-2 trigtan
trigcos(sin(x)^4+sin(x)^2)

# trigsin
1 Simplifie l'argument avec les formules sin(x)^2+cos(x)^2=1 et tan(x)=sin(x)/cos(x) en privilégiant les sinus.
2 Simplifies the argument with the formulas sin(x)^2+cos(x)^2=1 and tan(x)=sin(x)/cos(x) privileging sine.
3 Simplifica el argumento usando las fórmulas sin(x)^2+cos(x)^2=1 y tan(x)=sin(x)/cos(x) prefiriendo senos.
4 Απλοποίηση του ορίσματος με τους τύπους sin(x)^2+cos(x)^2=1 και tan(x)=sin(x)/cos(x) δίνοντας προτεραιότητα στο ημίτονο.
0 Expr
-1 trigcos
-2 trigtan
trigsin(cos(x)^4+sin(x)^2)

# trigtan
1 Simplifie l'argument avec les formules sin(x)^2+cos(x)^2=1 et tan(x)=sin(x)/cos(x) en privilégiant la fonction tangente.
2 Simplifies the argument with the formulas sin(x)^2+cos(x)^2=1 and tan(x)=sin(x)/cos(x) privileging tangent.
3 Simplifica el argumento usando las fórmulas sin(x)^2+cos(x)^2=1 y tan(x)=sin(x)/cos(x) prefiriendo tangentes.
4 Απλοποίηση του ορίσματος με τους τύπους sin(x)^2+cos(x)^2=1 και tan(x)=sin(x)/cos(x) δίνοντας προτεραιότητα στην εφαπτομένη.
0 Expr
-1 trigsin
-2 trigcos
trigtan(cos(x)^4+sin(x)^2)

# tsimplify
1 Diminue le nombre de variables non rationnelles.
2 Lower the number of non rational variables.
3 Disminuye el número de variables no racionales.
4 Ελλατώνει το πλήθος των μη-ρητών μεταβλητών.
0 Expr
-1 simplify
tsimplify(exp(2*x)+exp(x))

# Zeta
1 Renvoie si a>1 sum(1/n^a,n,1,+infinity).
2 Returns if a>1 sum(1/n^a,n,1,+infinity).
3 Devuelve si a>1 sum(1/n^a,n,1,+infinito).
4 Επιστρέφει το sum(1/n^a,n,1,+infinity) αν a>1.
0 Real(a)
-1 sum
Zeta(2)

# open
1 Ouvre un fichier de nom s, renvoie le numéro de handle du fichier.
2 Opens a file named s, returns the file handle.
3 Abre una archivo de nombre s, devuelve el número de handle del archivo.
4 Ανοίγει ένα αρχείο ονόματος s, και επιστρέφει τον αριθμό χειρισμού του αρχείου.
0 Str(s)
-1 fopen
-2 close
-3 readrgb
-4 readwav
-5 csv2gen
 f:=open("filename")

# fopen
1 Ouvre un fichier de nom s, renvoie une variable de type fichier.
2 Opens a file named s, returns a variable of type file.
3 Abre un archivo llamado s, devuelve una variable de tipo archivo.
4 Ανοίγει ένα αρχείο ονόματος s, και επιστρέφει μια μεταβλητή τύπου αρχείο.
0 Str(s)
-1 fprint
-2 fclose
-3 readrgb
-4 readwav
-5 csv2gen
 f:=fopen("glouglou")

# fclose close
1 Ferme le fichier f.
2 Closes the file f.
3 Cierra el archivo f.
4 Κλείνει το αρχείο f.
0 File(f)
-1 fprint
-2 fopen
fclose(f)

# fprint
1 Écrit dans le fichier f des données.
2 Writes in the file f some data.
3 Escribe en el archivo f algunos datos.
4 Γράφει στο αρχείο f κάποια δεδομένα.
0 File(f),Var,[Var,Var...]
-1 fopen
-2 fclose
fprint(f,x+1,"2")
fprint(f,"blabla")
fprint(f,Unquoted,"blabla")

# readwav
1 Lit un fichier son au format WAV.
2 Reads a WAV sound file.
3 Lee un archivo de sonido en el formato WAV.
4 Διαβάζει ένα αρχείο ήχου τύπου WAV.
0 Str(s)
-1 writewav
-2 readrgb
readwav("pop.wav")

# writewav
1 Écrit un fichier son au format WAV.
2 Writes a WAV sound file.
3 Graba un archivo de sonido en el formato WAV.
4 Γράφει ένα αρχείο ήχου τύπου WAV.
0 Str(s),Lst(l)
-1 readwav
writewav("la.wav",2^14*(sin(2*pi*440*soundsec(1))))
writewav("beep.wav",[[1,16,44100,80000],[65000$10000,0$10000,65000$10000,0$10000]])

# playsnd
1 Joue une donnée de type son.
2 Plays a sound data.
0 Vect
-1 readwav
-2 writewav
-3 soundsec
playsnd(2^14*(sin(2*pi*440*soundsec(1)))

# soundsec
1 Génère un vecteur correspondant à n secondes de temps/N (défaut N=44100).
2 Generates a vector coding n seconds of time/N (default N=44100).
0 Intg(n),[Intg(N)]
-1 readwav
-2 writewav
-3 playsnd
soundsec(1)
soundsec(1,22100)

# readrgb
1 Lit un fichier image, avec la taille originelle ou spécifiée en argument.
2 Reads a picture file, using it's natural dimensions, or using specified dimensions.
3 Lee un archivo de imagen, con el tamaño original o especificado en argumento.
4 Διαβάζει ένα αρχείο εικόνας, χρησιμοποιώντας τις αρχικές του διαστάσεις, ή αυτές που δίνονται στο όρισμα.
0 Str(s),[Intg(w)],[Intg(h)]
-1 writergb
-2 readwav
readrgb("image.png")
readrgb("image.png",50,50)

# writergb
1 Écrit un fichier PNG image de nom s soit à partir de la liste [[nombre_canaux,largeur,hauteur],rouge,vert,transparence,bleu] où rouge,vert,transparence,bleu sont les matrices donnant la couleur des pixels soit à partir de la matrice des niveaux de gris des pixels ou des 3 matrices donnant leurs couleurs RGB.
2 Write a PNG picture file named s whether from a list [[number_channels,width,height],red,green,alpha,blue] where red,green,alpha,blue are matrices of pixels color or from a matrix of pixels grey or from 3 matrices of pixels color RGB.
3 Graba un archivo PNG imagen de nombres a partir de la lista [[number_channels,width,height],red,green,alpha,blue] donde red,green,alpha,blue son matrices.
4 Γράφει ένα αρχείο εικόνας PNG ονόματι s ξεκινώντας από την λίστα [[number_channels,width,height],red,green,alpha,blue] όπου red,green,alpha,blue είναι πίνακες.
0 Str(s),Lst
-1 readrgb
writergb("image.png",[[255,0],[0,255]])
writergb("image.png",[[255,0],[0,0]],[[0,255],[0,0]],[[0,0],[255,0]])
 a:=readrgb("rgb_image.png");writergb("brg_image.png",[a[0],a[4],a[1],a[3],a[2]])

# Li
1 Logarithme intégral Li(x)=Ei(ln(x)) primitive de 1/ln(x) 
2 Logarithm integral Li(x)=Ei(ln(x)) primitive de 1/ln(x) 
3 Integral logarithmica Li(x)=Ei(ln(x)) primitiva de 1/ln(x) 
4 Εκθετικό  λογάριθμος Li(x)=Ei(ln(x)) (Αόριστο ολοκλήρωμα 1/ln(x))
0 Expr
-1 Si
-2 Ci
-3 Ei
Li(2.0)

# Ei
1 Exponentielle intégrale int(exp(t)/t,t=-inf..x)
2 Exponential integral int(exp(t)/t,t=-inf..x)
3 Integral exponencial int(exp(t)/t,t=-inf..x)
4 Εκθετικό ολοκλήρωμα int(exp(t)/t,t=-inf..x)
0 Expr
-1 Si
-2 Ci
-3 Li
Ei(1.0)

# Ci
1 Cosinus intégral int(cos(t)/t,t=-inf..x)
2 Cosine integral int(cos(t)/t,t=-inf..x)
3 Coseno integral int(cos(t)/t,t=-inf..x)
4 Συνημιτονικό ολοκλήρωμα int(cos(t)/t,t=-inf..x)
0 Expr
-1 Ei
-2 Si
-3 Li
Ci(1.0)

# Si
1 Sinus intégral int(sin(t)/t,t=0..x)
2 Sine integral int(sin(t)/t,t=0..x)
3 Seno integral int(sin(t)/t,t=0..x)
4 Ημιτονικό ολοκλήρωμα int(sin(t)/t,t=0..x)
0 Expr
-1 Ei
-2 Ci
-3 Li
Si(1.0)

# invztrans
1 Transformée en z inverse d'une fraction rationnelle
2 Inverse z transform of a rational fraction
3 Anti-Transformada z de una fracción racional
4 Αντίστροφος μετασχηματισμός z μιας ρητής συνάρτησης
0 Expr,[Var],[InvZtransVar]
-1 ztrans
-2 laplace
-3 invlaplace
invztrans(1/(x^2+1)^2)
invztrans(z/(z^4-1),z,n)

# ztrans
1 Transformée en z d'une suite
2 z transform of a sequence
3 Transformada en z de una secuencia
4 Μετασχηματισμός z μιας ακολουθίας
0 Expr,[Var],[ZtransVar]
-1 invztrans
-2 laplace
-3 invlaplace
ztrans(a^x)
ztrans(a^n,n,z)

# eval_level
1 Niveau d'évaluation en mode interactif (n dit combien de fois on remplace une variable par sa valeur récursivement par défaut c'est la valeur de eval de la configuration du CAS)
2 Evaluation level in interactive mode
3 Nivel de evaluación en modo interactivo
4 Επίπεδο αξιολόγησης σε διαδραστική μορφή λειτουργίας
0 [Intg(n)]
eval_level()
eval_level(1)
 purge(a,b,c);eval_level(1);a:=b+1; b:=c+1;c:=3;
 purge(a,b,c);eval_level(2);a:=b+1; b:=c+1;c:=3;
 purge(a,b,c);eval_level(3);a:=b+1; b:=c+1;c:=3;

# eliminate
1 Élimine les variables vars dans une liste d'équations algébriques.
2 Eliminates the variables vars in a list of algebraic equations
0 LstEq(eqs),LstVar(vars)
eliminate([x=v0*t,y=y0-g*t^2],t)
eliminate([x+y+z+t-2,x*y*t=1,x^2+t^2=z^2],[x,z])

# algsubs
1 Substitue dans l'expression Xpr, l'expression algébrique Xpr1 par l'expression algébrique Xpr2.
2 Substitutes in the expression Xpr, the algebraic expression Xpr1 by the algebraic expression Xpr2.
3 Sustituye una expresión algebraica Xpr1 por una expresión algebraica Xpr2 en una expresión Xpr.
4 
8 将表达式中 Xpr1 分别替换为 Xpr2，并求结果。
0 Equal(Xpr1=Xpr2),Expr(Xpr)
-1 subst
-2 subs
algsubs(x^2=u,1+x^2+x^4)
algsubs(a*b/c=d, 2*a*b^2/c)
algsubs(2a=p^2-q^2,algsubs(2c=p^2+q^2,c^2-a^2))

# plotproba
1 Graphe d'une matrice de transition probabiliste ayant au plus 7x7 entrées (en option la liste des positions des sommets)
2 Graph of a transition matrix with at most 7x7 entries (optionally with list of vertex positions)
0 Matrix,[Vector]
-1 markov
-2 randmarkov
plotproba([[1/2,1/3,1/12,1/12],[1/3,1/2,1/6,0],[0,0,1/2,1/2],[1/4,1/4,1/4,1/4],["xy",b,"state",d]])
plotproba([[1/2,1/3,1/12,1/12],[1/3,1/2,1/6,0],[0,0,1/2,1/2],[1/4,1/4,1/4,1/4]],[0,1,i,1/3+2/3*i])
 L:=point(1):;C:=point(0.5+0.3*i):;G:=point(0.5+0.8*i):;plotproba([[1/2,1/3,1/12],[1/3,1/2,1/6],[0,0,1/2]],[L,C,G])

# autosimplify 
1 A pou argument une commande que Xcas utilise pour réécrire les résultats dans Xcas (au lancement c'est regroup ou 1 et pour pas de simplification c'est nop ou 0).
2 The argument is a command that Xcas will use to rewrite answers (initial value is regroup and for no simplification it is nop or 0).
0 Cmds
-1 simplify
-2 factor
-3 regroup
autosimplify(nop)
autosimplify(0)
autosimplify(regroup)
autosimplify(1)
autosimplify(factor)
autosimplify(simplify)

# regroup
1 Effectue les simplifications évidentes sur une expression.
2 Collect terms in an expression.
3 Agrupar y simplifica la expresión.
4 Κανονικοποίηση της παράστασης.
0 Expr
-1 simplify
-2 normal
regroup(x+3*x+5*4/x)

# is_inside
1 Teste si un point est à l'intérieur d'un polygone ou d'un cercle.
2 Checks whether a point is inside a polygon or a circle.
3 Comprueba si un punto está en un polígono o circunferencia.
4 Επιστρέφει 1 αν το σημείο είναι πάνω σε γεωμετρικό αντικείμενο και 0 διαφορετικά.
0 Pnt,Polygon or Circle
-1 is_element
is_inside(point(0),circle(-1,1))
is_inside(point(1-i),triangle([1,2-i,3+i]))

# in_ideal
1 Test d'appartenance d'un polynôme ou d'une liste de polynômes à un idéal donné par une base de Groebner (2ème argument) par rapport à une liste de variables.
2 Checks whether a polynomial or list of polynomials belongs to an ideal given by a Grobner basis (2nd argument) with respect to a variable list.
0 Poly,Lst,LstVar,[order]
-1 gbasis
-2 greduce
in_ideal((x+y)^2,[y^2,x^2+2*x*y],[x,y])
in_ideal(x+y,[y^2,x^2+2*x*y],[x,y])

# normalt
1 Test Z d'hypothèses /loi normale : arg1=[succes,essais] ou [moyenne, taille] ou données, arg2=proportion ou moyenne population ou données, arg3 optionnel si données=sigma, arg4 alternative '!=' ou '>' ou '<', arg5 optionnel confiance alpha.
2 Z-Test/normal law: arg1=[success,trial] or [mean,sample size] or data, arg2=proportion or data, arg3 optional if data=sigma, arg4 alternative '!=' or '>' or '<', arg5 optional alpha confidence level.
0 Lst,Real,[Real],Fnc,[Real]
-1 studentt
-2 chisquaret
-3 kolmogorovt
normalt([10,30],.5,.02,'!=',0.1)
normalt([0.48,50],0.5,0.1,'<')

# studentt
1 Test T d'hypothèses /loi Student : arg1=[succes,essais] ou [moyenne, taille] ou données, arg2=proportion ou moyenne population ou données, arg3 optionnel si données=sigma, arg4 alternative '!=' ou '>' ou '<', arg5 optionnel confiance alpha.
2 T-Test/Student law: arg1=[success,trial] or [mean,sample size] or data, arg2=proportion or data, arg3 optional if data=sigma, arg4 alternative '!=' or '>' or '<', arg5 optional alpha confidence level.
0 Lst,Real,[Real],Fnc,[Real]
-1 normalt
-2 chisquaret
-3 kolmogorovt
studentt([10,20],.5,.02,'!=',0.1)
studentt([0.48,20],0.5,0.1,'<')

# osculating_circle
1 Cercle osculateur à la courbe plane C au point M.
2 Osculating circle at point M to the curve C.
0 Curve,Point
-1 curvature
-2 evolute
osculating_circle(plot(x^2),point(1,1))
osculating_circle([5*cos(t),5*sin(t)],t,0)
osculating_circle([t,t^2],t)
osculating_circle([t,t^2],t,1)
osculating_circle([3*exp(t/2)*cos(t),3*exp(t/2)*sin(t)],t)
osculating_circle([3*exp(t/2)*cos(t),3*exp(t/2)*sin(t)],t,7)

# curvature
1 Courbure de la courbe C au point M.
2 Curvature of curve C at point M.
0 Curve,Point
-1 osculating_circle
-2 evolute
curvature(plot(x^2),point(1,1))
curvature([5*cos(t),5*sin(t)],t)
curvature([t,t^2],t)
curvature([t,t^2],t,1)
curvature([3*exp(t/2)*cos(t),3*exp(t/2)*sin(t)],t)
curvature([3*exp(t/2)*cos(t),3*exp(t/2)*sin(t)],t,7)
 trigcos(curvature([2*cos(t),2*sin(t),3*t],t))

# evolute
1 Courbe développée d'une courbe C.
2 Evolute of a curve C.
0 Curve
-1 curvature
-2 osculating_circle
evolute(plot(x^2))
evolute([t,t^2],t)
evolute([3*exp(t/2)*cos(t),3*exp(t/2)*sin(t)],t)

# wilcoxont
1 Test de Wilcoxon ou de Mann-Whitney pour 1 échantillon et une médiane ou 2 échantillons
2 Wilcoxon or Mann-Whitney test for one sample and a median or 2 samples
0 List,List || Real,[Func],[Real]
-1 wilcoxonp
-2 wilcoxons
-3 studentt
-4 normalt
wilcoxont([1, 3, 4, 5, 7, 8, 8, 12, 15, 17] , [2, 6, 10, 11, 13, 14, 15, 18, 19, 20])
wilcoxont([1, 3, 4, 5, 7, 8, 8, 12, 15, 17] , [2, 6, 10, 11, 13, 14, 15, 18, 19, 20],0.01)
wilcoxont([1, 3, 4, 5, 7, 8, 8, 12, 15, 17] , 10,'>')
wilcoxont([1, 3, 4, 5, 7, 8, 8, 12, 15, 17] , 10,'>',0.05)

# wilcoxonp
1 Polynôme donnant la distribution du test de Wilcoxon ou de Mann-Whitney pour 1 ou 2 échantillons
2 Distribution of the Wilcoxon or Mann-Whitney test for one or two samples
0 Intg,[Intg]
-1 wilcoxont
-2 wilcoxons
wilcoxonp(4)
wilcoxonp(7,5)

# wilcoxons
1 Statistique de Wilcoxon ou de Mann-Whitney pour 1 échantillon/une médiane ou 2 échantillons
2 Rank statistic of Wilcoxon or Mann-Whitney for 1 sample and one median or 2 samples
0 List,List || Real
-1 wilcoxont
-2 wilcoxonp
wilcoxons([1, 3, 4, 5, 7, 8, 8, 12, 15, 17] , [2, 6, 10, 11, 13, 14, 15, 18, 19, 20])
wilcoxons([1, 3, 4, 5, 7, 8, 8, 12, 15, 17] , 10)

# dayofweek
1 dayofweek(j,m,a) renvoie le jour de la date donnée (jour,mois,année) : 0 pour dimanche, 1 pour lundi ...6 pour samedi.
2 dayofweek(d,m,y) returns the day of the given date (day,month,year) : 0 for sunday, 1 for monday ...6 for saturday.
0 Int,Int,Int
dayofweek(21,4,2014)
dayofweek(15,10,1582)

# minimize maximize
1 Recherche du minimum ou maximum d'une fonction
2 Minimize a function
0 Expr,[Constr],Vars,[Options]
minimize(sin(x),[x=0..4])
minimize(x^4-x^2,x=-3..3,locus)
minimize(piecewise(x<=-2,x+6,x<=1,x^2,3/2-x/2),x=-3..2)
minimize(x^2-3x+y^2+3y+3,[x=2..4,y=-4..-2],point)
minimize(2x^2-y^2+6y,x^2+y^2<=16,[x,y])
minimize(sqrt(x^2+y^2)-z,[x^2+y^2<=16,x+y+z=10],[x,y,z])
minimize((1+x^2+3y+5x-4*x*y)/(1+x^2+y^2),x^2/4+y^2/3=9,[x,y])
minimize(cos(x)^2+cos(y)^2,x+y=pi/4,[x,y],locus)

# minimax
1 Approximation polynomiale de degré n d'une fonction continue bornée sur [a,b] par la méthode de Remez.
2 Implementation of Remez method for minimax polynomial approximation of degree n of a continuous bounded function on a..b.
0 Expr,Var=a..b,n,[Options]
minimax(x*exp(-x),x=0..10,12)
minimax(x*sin(x),x=0..10,15)
minimax(ln(2+x-sin(x)^2),x=0..2*pi,20)
minimax(cos(x^2-x+1),x=-2..2,17)
minimax(atan(x),x=-5..5,30)
minimax(tanh(sin(9x)),x=-1/2..1/2,15)
minimax(abs(x),x=-1..1,25)
minimax(abs(x)*sqrt(abs(x)),x=-2..2,15)
minimax(min(1/cosh(3*sin(x)),sin(9x/10)),x=-3..4,30)
minimax(when(x==0,0,exp(-1/x^2)),x=-1..1,25)

# tpsolve
1 resolution d'un probleme de transport par la methode MODI
2 solves a transportation problem using MODI method
0 supply,demand,cost_matrix
tpsolve([12,17,11],[10,10,10,10],[[500,750,300,450],[650,800,400,600],[400,700,500,550]])
tpsolve([7,10,8,8,9,6],[9,6,12,8,10],[[36,40,32,43,29],[28,27,29,40,38],[34,35,41,29,31],[41,42,35,27,36],[25,28,40,34,38],[31,30,43,38,40]])
tpsolve([95,70,165,165],[195,150,30,45,75],[[15,M,45,M,0],[12,40,M,M,0],[0,15,25,25,0],[M,0,M,12,0]])
tpsolve([1,1,1,1],[1,1,1,1],[[10,12,9,11],[5,10,7,8],[12,14,13,11],[8,15,11,9]])

# thiele
1 Approximation rationnelle d'une liste de points par la methode de Thiele
2 computes rational interpolation for the given list of points using Thiele's method with continued fractions
0 [Data || Data_x],[Data_y],v 
 data_x:=[-1,-0.75,-0.5,-0.25,0,0.25,0.5,0.75,1,1.25,1.5,1.75,2]:;data_y:=[0.0,2.83341735599,2.88770329586,2.75030303645,2.71828182846,2.66568510781,2.24894558809,1.21863761951,0.0,-0.555711613283,-0.377871362418,-0.107135851128,-0.0136782294833]:;thiele(data_x,data_y,x)

# lpsolve
1 Resoud un probleme d'optimisation lineaire de fonction objectif o sous contraintes optionnelles c
2 solves a (mixed integer/binary) LP problem in general form
0 Expr(o),[List(c)],[bounds],[options]
-1 nlpsolve
-2 fsolve
lpsolve(2x+y-z+4,[x<=1,y>=2,x+3y-z=2,2x-y+z<=8,-x+y<=5])
lpsolve(-4x-5y,[x+2y<=6,5x+4y<=20,0<=x,0<=y])
lpsolve(-7x+2y,[4x-12y<=20,-x+3y<=3],x=-5..5,y=0..inf,lp_maximize=true)
lpsolve(x-y-2z+3,[-3x-y+z<=3,2x-3y>=4z,x-z=y,x>=0,y<=0],lp_maximize)
lpsolve(-x-y,[y<=3x+1/2,y<=-5x+2],assume=lp_nonnegative)
lpsolve(x+y,[x<=8,-x+y<=4,-x+2y>=6,2x+y<=25,3x+y>=18,-x+2y>=6],assume=lp_nonnegative)
lpsolve(45.55x1+21.87x2,[1.64x1+2.67x2<=31.2,2.11x1+2.3x2>=13.9],assume=lp_nonnegative)
lpsolve(3x+4y,[x<=4,x+3y<=15,-x+2y>=5,x-y>=9,x+y=6],assume=lp_nonnegative,lp_maximize=true)
lpsolve(-6x+4y+z,[5x-10y<=20,2z-3y=6,-x+3y<=3],x=1..20,y=0..inf)
lpsolve(-5x-7y,[7x+y<=35,-x+3y<=6],assume=integer)
lpsolve(x+3y+3z,[x+3y+2z<=7,2x+2y+z<=11],assume=lp_nonnegative,lp_integervariables=[x,z],lp_maximize)
lpsolve(2x+5y,[3x-y=1,x-y<=5],assume=nonnegint)
lpsolve(x1+x2,[2x1+5x2<=16,6x1+5x2<=30],assume=nonnegint,lp_maximize)
lpsolve(8x1+11x2+6x3+4x4,[5x1+7x2+4x3+3x4<=14],assume=lp_binary,lp_maximize)
lpsolve(x1+x2,[1867x1+1913x2=3618894],assume=nonnegint,lp_verbose=true)

# nlpsolve
1 Optimisation non lineaire de objectif (expression non lineaire) sous contraintes d'egalite ou inegalite non lineaires par l'algorithme COBYLA
2 Solves a nonlinear programming problem of optimizing the objective obj under constraints constr (list of equations and/or inequations) and within bounds bd (sequence of x=a..b) with optional options (for example setting an initial point).
0 objective, [constr], [bd], [opts]
-1 lpsolve
-2 fsolve
-3 fMin
-4 fMax
nlpsolve((x1-10)^3+(x2-20)^3,[(x1-5)^2+(x2-5)^2>=100,(x2-5)^2+(x1-6)^2<=82.81],nlp_initialpoint=[x1=20.1,x2=5.84])
nlpsolve(sin(x1+x2)+(x1-x2)^2-1.5x1+2.5x2+1,x1=-1.5..4,x2=-3..3)
nlpsolve(ln(1+x1^2)-x2,[(1+x1^2)^2+x2^2=4])
nlpsolve(x1,[x2>=exp(x1),x3>=exp(x2)],maximize=true,x1=0..100,x2=0..100,x3=0..10,nlp_initialpoint=[x1=1,x2=1.05,x3=2.9])
nlpsolve(-x1*x2*x3,[72-x1-2x2-2x3>=0],x1=0..20,x2=0..11,x3=0..42)
nlpsolve(2-1/120*x1*x2*x3*x4*x5,[x1<=1,x2<=2,x3<=3,x4<=4,x5<=5],assume=nlp_nonnegative)
nlpsolve(sin(x)/x,x=1..30)
nlpsolve(x^3+2x*y-2y^2,x=-10..10,y=-10..10,nlp_initialpoint=[x=3,y=4],maximize) 
nlpsolve(w^3*(v-w)^2+(w-x-1)^2+(x-y-2)^2+(y-z-3)^2,[w+x+y+z<=5,3z+2v=3],assume=nlp_nonnegative)
nlpsolve(sin(x)*Psi(x),x=1..20,nlp_initialpoint=[x=16])

# implicitdiff
1 Derivee implicite
2 Implicit differentiation
0 constr,[depvars],y,diffvars
-1 diff
implicitdiff(x^2*y+y^2=1,y,x)
implicitdiff(R=P*V/T,P,T)
implicitdiff([x^2+y=z,x+y*z=1],[y(x),z(x)],y,x)
implicitdiff([x^2+y=z,x+y*z=1],[y(x),z(x)],[y,z],x)
implicitdiff(y=x^2/z,y,x)
implicitdiff(y=x^2/z,y,z)
implicitdiff(y^3+x^2=1,y,x)
implicitdiff(y^3+x^2=1,y,x,x)
implicitdiff(a*x^3*y-2y/z=z^2,y(x,z),x)
implicitdiff(a*x^3*y-2y/z=z^2,y(x,z),x,z)
implicitdiff([-2x*z+y^2=1,x^2-exp(x*z)=y],[y(x),z(x)],y,x)
implicitdiff([-2x*z+y^2=1,x^2-exp(x*z)=y],[y(x),z(x)],[y,z],x)
implicitdiff([a*sin(u*v)+b*cos(w*x)=c,u+v+w+x=z,u*v+w*x=z],[u(x,z),v(x,z),w(x,z)],u,z)
implicitdiff(x*y,-2x^3+15x^2*y+11y^3-24y=0,y(x),x$2)
implicitdiff((x-u)^2+(y-v)^2,[x^2/4+y^2/9=1,(u-3)^2+(v+5)^2=1],[v(u,x),y(u,x)],u,x)
implicitdiff(x*y*z,-2x^3+15x^2*y+11y^3-24y=0,[x,z,y],order=1)
implicitdiff(x*y*z,-2x^3+15x^2*y+11y^3-24y=0,[x,z,y],order=2,[1,-1,0])
 pd:=implicitdiff(x*y*z,-2x^3+15x^2*y+11y^3-24y=0,[x,z,y],order=4,[0,z,0]);pd[4,0,0]

# lp_assume lp_binary lp_binaryvariables lp_depthlimit lp_integer lp_integervariables lp_maximize lp_nonnegative lp_nonnegint lp_variables lp_nodelimit lp_integertolerance lp_method lp_simplex lp_interiorpoint lp_initialpoint lp_maxcuts lp_gaptolerance lp_nodeselect lp_varselect lp_firstfractional lp_lastfractional lp_mostfractional lp_pseudocost lp_depthfirst lp_breadthfirst lp_bestprojection lp_hybrid lp_iterationlimit lp_timelimit lp_verbose
1 Options de la commande lpsolve
2 Options for lpsolve command
0 Opt
-1 lpsolve

# periodic
1 Cree une expression periodique egale a Expr sur [a,b], periode b-a
2 Make a periodic expression equal to Expr on a..b, period b-a
0 Expr,Var,a,b
periodic(x^2,x,-1,1)

# extrema
1 Recherche des extremas d'une expression
2 Search extrema of an expression
extrema(-2*cos(x)-cos(x)^2,x)
extrema((x^3-1)^4/(2x^3+1)^4,x=0..inf)
extrema(x/2-2*sin(x/2),x=-12..12)
extrema(x-ln(abs(x)),x)
 assume(a>=0):;extrema(x^2+a*x,x)
extrema(x^7+3x^6+3x^5+x^4+2x^2-x,x)
extrema((x^2+x+1)/(x^4+1),x)
extrema(x^2+exp(-x),x)
extrema(exp(-x)*ln(x),x)
extrema(tan(x)*(x^3-5x^2+1),x=-0.5)
extrema(tan(x)*(x^3-5x^2+1),x=0.5)
extrema(exp(x^2-2x)*ln(x)*ln(1-x),x=0.5)
extrema(ln(2+x-sin(x)^2),x=0..2*pi)
extrema(x^3-2x*y+3y^4,[x,y])
extrema((2x^2-y)*(y-x^2),[x,y])  //Peano surface
extrema(5x^2+3y^2+x*z^2-z*y^2,[x,y,z])
extrema(3*atan(x)-2*ln(x^2+y^2+1),[x,y])
extrema(x*y,x+y=1,[x,y])
extrema(sqrt(x*y),x+y=2,[x,y])
extrema(x*y,x^3+y^3=16,[x,y])
extrema(x^2+y^2,x*y=1,[x=0..inf,y=0..inf])
extrema(ln(x*y^2),2x^2+3y^2=8,[x,y])
extrema(y^2+4y+2x-x^2,x+2y=2,[x,y])
 assume(a>0):;extrema(x/a^2+a*y^2,x+y=a,[x,y])
extrema(6x+3y+2z,4x^2+2y^2+z^2=70,[x,y,z])
extrema(x*y*z,x+y+z=1,[x,y,z])
extrema(x*y^2*z^2,x+y+z=5,[x,y,z])
extrema(4y-2z,[2x-y-z=2,x^2+y^2=1],[x,y,z])
extrema((x-3)^2+(y-1)^2+(z-1)^2,x^2+y^2+z^2=4,[x,y,z])
extrema(x+3y-z,2x^2+y^2=z,[x,y,z])
extrema(2x*y+2y*z+x*z,x*y*z=4,[x,y,z])
extrema(x+y+z,[x^2+y^2=1,2x+z=1],[x,y,z])
 assume(a>0):;extrema(x+y+z,[y^2-x^2=a,x+2z=1],[x,y,z])
extrema((x-u)^2+(y-v)^2,[x^2/4+y^2/9=1,(u-3)^2+(v+5)^2=1],[u,v,x,y])
extrema(x2^6+x1^3+4x1+4x2,x1^5+x2^4+x1+x2=0,[x1,x2])
extrema(x*y,-2x^3+15x^2*y+11y^3-24y=0,[x,y])
extrema(x2^4-x1^4-x2^8+x1^10,[x1,x2],order=1)
extrema(x2^4-x1^4-x2^8+x1^10,[x1,x2])
extrema(x2^6+x1^3+4x1+4x2,x1^5+x2^4+x1+x2=0,[x1,x2])
extrema(x2^6+x1^3+2x1^2-x2^2+4x1+4x2,x1^5+x2^4+x1+x2=0,[x1,x2])
extrema(3x^2-2x*y+y^2-8y,[x,y])
extrema(x^3+3x*y^2-15x-12y,[x,y])
extrema(4x*y-x^4-y^4,[x,y])
extrema(x*sin(y),[x,y])
extrema(x^4+y^4,[x,y])
extrema(x^3*y-x*y^3,[x,y])  
extrema(x^2+y^2+z^2,x^4+y^4+z^4=1,[x,y,z])
extrema(3x+3y+8z,[x^2+z^2=1,y^2+z^2=1],[x,y,z])
extrema(2x^2+y^2,x^4-x^2+y^2=5,[x,y])
extrema((3x^4-4x^3-12x^2+18)/(12*(1+4y^2)),[x,y])
extrema(x-y+z,[x^2+y^2+z^2=1,x+y+2z=1],[x,y,z])
extrema(ln(x)+2*ln(y)+3*ln(z)+4*ln(u)+5*ln(v),x+y+z+u+v=1,[x,y,z,u,v])
extrema(x*y*z,-2x^3+15x^2*y+11y^3-24y=0,[x,y,z])
extrema(x+y-exp(x)-exp(y)-exp(x+y),[x,y])
extrema(x^2*sin(y)-4*x,[x,y])    
extrema((1+y*sinh(x))/(1+y^2+tanh(x)^2),[x,y])
extrema((1+y*sinh(x))/(1+y^2+tanh(x)^2),y=x^2,[x,y])

# createwav
0 Lst(data),[opts]
2 Returns an audio clip from data, optionally setting channel count, bit depth, sample rate, duration and normalization level.
-1 readwav
-2 writewav
-3 playsnd
createwav(duration=3.5)
createwav(sin(2*pi*440*soundsec(2)),samplerate=48000)
createwav(sin(2*pi*440*soundsec(2)),bit_depth=8)
createwav(10*sin(2*pi*440*soundsec(2)),normalize=-3)
 t:=soundsec(3):;L,R:=sin(2*pi*440*t),sin(2*pi*445*t):;createwav([L,R])

# stereo2mono
0 Lst(clip)
2 Returns an audio clip with all channels in the input clip downmixed to a single one.
-1 channel_data
-2 mean
-3 createwav
stereo2mono(readwav("/some/file"))

# bit_depth
0 Lst(clip)
2 Returns the bit depth of an audio clip.
-1 channels
-2 channel_data
-3 duration
-4 samplerate
bit_depth(readwav("/some/file"))

# channels
0 Lst(clip)
2 Returns the number of channels in audio clip.
-1 bit_depth
-2 channel_data
-3 duration
-4 samplerate
channels(readwav("/some/file"))

# channel_data
0 Lst(clip),[Intg(chn) or matrix],[range=a..b]
2 Extracts the data from an audio clip (optionally specifying the channel and range).
-1 bit_depth
-2 channels
-3 duration
-4 samplerate
channel_data(readwav("/some/file"))
channel_data(readwav("/some/file"),matrix)
channel_data(readwav("/some/file"),2)
channel_data(readwav("/some/file"),matrix,range=1.0..2.5)

# duration
0 Lst(clip)
2 Returns the duration of an audio clip, in seconds.
-1 bit_depth
-2 channels
-3 channel_data
-4 samplerate
duration(readwav("/some/file"))

# samplerate
0 Lst(clip)
2 Returns the sampling rate of an audio clip, in Hertz.
-1 bit_depth
-2 channels
-3 channel_data
-4 duration
samplerate(readwav("/some/file"))

# resample
0 Lst(clip),[Intg(s),[Intg(q)]]
2 Returns a copy of the input audio clip resampled to the rate s (by default 44100), optionally with quality level q (from 0 to 4, by default 2).
-1 samplerate
-2 playsnd
-3 readwav
-4 writewav
resample(readwav("/some/file"),48000)
resample(readwav("/some/file"),48000,3)

# plotwav
0 Lst(clip),[range=a..b]
2 Plots the waveform of an audio clip (optionally at the specified range).
-1 plotspectrum
plotwav(readwav("/some/file"))
plotwav(readwav("/some/file"),range=1.0..2.5) // range in seconds
plotwav(readwav("/some/file"),range=[10000,22000]) // range in samples

# plotspectrum
0 Lst(clip),[range=a..b]
2 Plots the power spectrum of an audio clip (on the specified frequency range).
-1 plotwav
plotspectrum(readwav("/some/file"))
plotspectrum(readwav("/some/file"),range=100..1000)

# boxcar
2 Returns the value at x of the boxcar function corresponding to a and b.
0 Real(a),Real(b),Expr(x)
-1 rect
-2 Heaviside
boxcar(1,2,x)

# rect
2 Returns the value of the rectangle function at x.
0 Expr(x)
-1 boxcar
-2 tri
-3 Heaviside
rect(x/2)

# tri
2 Returns the value of the triangle function at x.
0 Expr(x)
-1 rect
-2 Heaviside
tri(x-1)

# sinc
2 Returns the value of the cardinal sine function at x.
0 Expr(x)
-1 sin
sinc(pi*x)

# fourier
2 Returns the Fourier transform F(s) of f(x).
0 Expr(f(x)),[Var(x),[Var(s)]]
-1 ifourier
-2 fourier_cn
-3 fft
fourier(x/(x^3-19x+30),x,s)
fourier((x^2+1)/(x^2-1),x,s)
fourier(3x^2+2x+1,x,s)
fourier(Dirac(x-1)+Dirac(x+1),x,s)
fourier(exp(-2*abs(x-1)),x,s)
fourier(atan(1/(2x^2)),x,s)
fourier(BesselJ(3,x),x,s)
fourier(sin(x)*sign(x),x,s)
fourier(log(abs(x)),x,s)
fourier(rect(x),x,s)
fourier(exp(-abs(x))*sinc(x),x,s)
fourier(1/sqrt(abs(x)),x,s)
fourier(1/cosh(2x),x,s)
fourier(Gamma(1+i*x/3),x,s)
fourier(atan(x/4)/x,x,s)
fourier(piecewise(x<=-1,exp(x+1),x<=1,1,exp(2-2x)),x,s)

# ifourier
2 Returns the inverse Fourier transform f(x) of F(s).
0 Expr(F(s)),[Var(s),[Var(x)]]
-1 fourier
-2 fourier_cn
-3 ifft
ifourier(2*pi*(Dirac(s)-sign(s)*sin(s)),s,x)
ifourier(-2/(s^2-1),s,x)
ifourier(pi/(exp(pi*s/4)+exp(-pi*s/4)),s,x)
ifourier(6*pi*exp(-exp(-3*s)-3*s),s,x)
ifourier(pi*ugamma(0,4*abs(s)),s,x)
ifourier(fourier(exp(-abs(x)),x,s)^2,s,x)
ifourier(sinc(s),s,x)

# addtable
2 Stores an unknown Fourier/Laplace transform pair (f,F).
0 fourier||laplace,f(x),F(s),Var(x),Var(s)
-1 fourier
-2 laplace
addtable(fourier,y(x),Y(s),x,s)

# cross_correlation
2 Returns the cross_correlation of two signals u and v.
0 cross_correlation(Lst(u),Lst(v))
-1 auto_correlation
-2 correlation
cross_correlation([1,2],[3,4,5])

# auto_correlation
1 Autocorrelation d'un signal (liste) avec lui-meme
2 Returns the cross-correlation of the given signal with itself.
0 Lst
-1 cross_correlation
-2 correlation
auto_correlation([1,-1,0,2,1])

# convolution
1 Convolution de 2 signaux (liste) ou fonctions causales u et v
2 Returns the convolution of two signals or causal functions u and v.
0 Lst(u),Lst(v)
-1 fft
-2 cross_correlation
convolution([1,2,3],[1,-1,1,-1])
convolution(25*exp(2*x),x*exp(-3*x),x)

# lowpass
2 Returns the result of applying a simple first-order lowpass RC filter with cutoff frequency c (the default samplerate is 44100) to the given signal s.
0 Lst(s),Real(c),[Intg(samplerate)]
-1 highpass
-2 moving_average
 f:=unapply(periodic(sign(x),x,-1/880,1/880),x):;s:=createwav(apply(f,soundsec(1))):;playsnd(lowpass(s,1000))

# highpass
2 Returns the result of applying a simple first-order highpass RC filter with cutoff frequency c (the default samplerate is 44100) to the given signal s.
0 Lst(s),Real(c),[Intg(samplerate)]
-1 lowpass
-2 moving_average
 f:=unapply(periodic(sign(x),x,-1/880,1/880),x):;s:=createwav(apply(f,soundsec(1))):;playsnd(highpass(s,5000))

# moving_average
2 Applies a moving average filter of length n to a signal sample A, and returns its result as an array of length nops(A)-n+1.
0 Lst(A),Intg(n)
-1 lowpass
 snd:=soundsec(2):;data:=0.5*threshold(3*sin(2*pi*220*snd),[-1.0,1.0])+randvector(length(snd),normald,0,0.05):;moving_average(data,25)

# threshold
2 Performs thresholding operations on a list of real or complex numbers.
0 Lst,Real(bound)[=Expr(repl)] or Lst[Real(lower)[=Expr(rl)],Real(upper)[=Expr(ru)]],[Fnc(compare)],[abs[=true or false]]
-1 max
-2 min
threshold([1,3,2,4,5,4,3,2,3,1],3,'>=')
threshold([-10,-5,0,5,10],7=a,abs=true)

# bartlett_hann_window
2 Applies the Bartlett-Hann windowing function to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(bartlett_hann_window(randvector(1000,0..1)))

# blackman_harris_window
2 Applies the Blackman-Harris windowing function to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Interval(n1..n2)]
-1 bartlett_hann_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(blackman_harris_window(randvector(1000,0..1)))

# blackman_window
2 Applies the Blackman windowing function with parameter a (by default a=0.16) to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Real(a)],[Interval(n1..n2)]
-1 blackman_harris_window
-2 bartlett_harris_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(blackman_window(randvector(1000,0..1)))

# bohman_window
2 Applies the Bohman windowing function to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bartlett_hann_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(bohman_window(randvector(1000,0..1)))

# cosine_window
2 Applies the cosine windowing function with parameter a>0 (by default a=1 for sine window) to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Real(a)],[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 bartlett_hann_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(cosine_window(randvector(1000,0..1),1.5))

# gaussian_window
2 Applies the Gaussian windowing function with parameter 0<a<=0.5 (by default a=0.1) to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Real(a)],[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 bartlett_hann_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(gaussian_window(randvector(1000,0..1),0.4))

# hamming_window
2 Applies the Hamming windowing function to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 bartlett_hann_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(hamming_window(randvector(1000,0..1)))

# hann_poisson_window
2 Applies the Hann-Poisson windowing function with parameter a (by default a=1) to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 bartlett_hann_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(hann_poisson_window(randvector(1000,0..1),2))

# hann_window
2 Applies the Hann windowing function to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 bartlett_hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(hann_window(randvector(1000,0..1)))

# parzen_window
2 Applies the Parzen windowing function to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 bartlett_hann_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(parzen_window(randvector(1000,0..1)))

# poisson_window
2 Applies the Poisson windowing function with parameter a>0 (by default a=1) to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Real(a)],[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 bartlett_hann_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(poisson_window(randvector(1000,0..1),0.5))

# riemann_window
2 Applies the Riemann windowing function to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 bartlett_hann_window
-12 triangle_window
-13 tukey_window
-14 welch_window
 scatterplot(riemann_window(randvector(1000,0..1)))

# triangle_window
2 Applies the triangular windowing function with parameter d in {-1,0,1} (by default L=0) to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Intg(d)],[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 bartlett_hann_window
-13 tukey_window
-14 welch_window
 scatterplot(triangle_window(randvector(1000,0..1),1))

# tukey_window
2 Applies the Tukey windowing function with parameter a in [0,1] (by default a=0.5) to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Real(a)],[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 bartlett_hann_window
-14 welch_window
 scatterplot(tukey_window(randvector(1000,0..1),0.4))

# welch_window
2 Applies the Welch windowing function to the given signal u (or to the elements with indices between n1 and n2) and returns the result in a new list.
0 Lst,[Interval(n1..n2)]
-1 blackman_harris_window
-2 blackman_window
-3 bohman_window
-4 cosine_window
-5 gaussian_window
-6 hamming_window
-7 hann_poisson_window
-8 hann_window
-9 parzen_window
-10 poisson_window
-11 riemann_window
-12 triangle_window
-13 tukey_window
-14 bartlett_hann_window
 scatterplot(welch_window(randvector(1000,0..1)))

# trigsimplify
2 Simplifies a trigonometric expression.
0 Expr
-1 simplify
trigsimplify(3*sin(x)-4*sin(x)^3)


# triginterp
1 Polynome d'interpolation trigonometrique des donnees contenues dans une liste
2 Returns a trigonometric polynomial interpolation (with respect to variable x) of the points with ordinate given in list y and the abscissa equally spaced between a and b.
0 List,Var=xmin..xmax
-1 lagrange
-2 thiele
triginterp([11,10,17,24,32,26,23,19],x=0..21)
triginterp([11,10,17,24,32,26,23,19],0,21,x)

# heapify
1 Ordonne partiellement une liste pour en faire un tas
2 Partial ordering of a list as a heap
0 List
-1 heappush
-2 heappop

# heappush
1 Ajoute un element dans un tas
2 Adds an object in a heap
0 List,Object
-1 heapify
-2 heappop

# heappop
1 Enleve et renvoie le noeud racine d'un tas 
2 Removes and returns the root node of a heap
0 List
-1 heapify
-2 heappush

# trail
0 Seq(V)
1 Renvoie une suite de sommets d'une suite V (commande inerte).
2 Returns a trail of vertices from V (inert command).
-1 graph
-2 digraph
trail(1,2,3,4,1)

# graph
0 [Lst(V)],[Set(E)],[Mtrx(A)],[options]
1 Cree un graphe oriente ou non avec poids ou non a partir d'une liste de sommets V, un ensemble d'aretes E, et/ou une matrice d'adjacence ou de poids. Tous les parametres sont optionnels.
2 Create an (un)directed (un)weighted graph from vertices V, edges E, and/or adjacency or weight matrix A. All parameters are optional.
-1 digraph
-2 trail
graph(5)
graph([a,b,c])
graph([1,2,3],%{[1,2],[2,3],[3,1]%})
graph(trail(1,2,3,4,1),directed=true)
graph([a,b,c],[[0,2,0],[2,0,3],[0,3,0]])
graph("petersen")
graph([[0,1,1,0],[1,0,0,1],[1,0,0,0],[0,1,0,0]])

# digraph
0 [Lst(V)],[Set(E)],[Mtrx(A)],[options]
1 Cree un graphe oriente avec ou sans poids depuis une liste de sommets V, un ensemble d'aretes E et/ou une matrice d'adjacence ou de poids A. Tous les parametres sont optionnels.
2 Create a directed (un)weighted graph from vertices V, edges E and/or adjacency or weight matrix A. All parameters are optional.
-1 graph
-2 trail
digraph(%{[1,2],[2,3],[3,4],[4,1]%})
digraph([a,b,c,d],%{[[a,b],1.0],[[a,c],2.3],[[b,d],3.1],[[c,d],4]%})

# export_graph
0 Graph(G),Str("path/to/graphname")
1 Exporte le graphe G vers le fichier "graphname.dot" du repertoire indique au format dot. Renvoie 1 en cas de succes, 0 en cas d'echec.
2 Writes G to the file 'graphname.dot' in directory 'path/to' in dot format, returns 1 on success and 0 on failure.
-1 import_graph
export_graph(complete_graph(5),"K5")

# import_graph
0 Str("path/to/graphname[.dot]")
1 Renvoie le graphe decrit par les instructions du fichier graphname.dot au format dot, ou "undef" en cas d'echec.
2 Returns the graph constructed from instructions in the file 'path/to/graphname.dot' (in dot format), or "undef" on failure.
import_graph("K5.dot")

# graph_vertices
0 Graph(G)
1 Renvoie la liste des sommets du graphe G.
2 Return the list of vertices in G.
-1 add_vertex
-2 graph
-3 neighbors
-4 permute_vertices
-5 relabel_vertices
graph_vertices(graph(%{[a,c],[b,c],[a,b]%}))

# edges
0 Graph(G),[weights]
1 Renvoie la liste des aretes d'un graphe G (avec les poids).
2 Return the list of edges in G [including weights].
-1 add_edge
-2 incident_edges
-3 set_edge_weight
-4 get_edge_weight
edges(complete_graph(4))

# has_edge
0 Graph(G),Edge(e)
1 Renvoie vrai si l'arete e=[i,j] est contenue dans le graphe non oriente G.
2 Returns true iff the edge e=[i,j] is contained in undirected graph G.
-1 edges
-2 has_arc
has_edge(graph(trail(1,2,3,4,1)),[2,4])

# has_arc
0 Graph(G),Edge(e)
2 Returns true iff the arc e=[i,j] is contained in digraph G or, if e={i,j} is a set, iff G has both edges [i,j] and [j,i].
-1 edges
-2 has_edge
has_arc(digraph(trail(1,2,3,4,1)),[4,2])
has_arc(digraph(trail(1,2,3,4,1)),%{4,2%})

# adjacency_matrix
0 Graph(G)
1 Renvoie la matrice d'adjacence du graphe G (lignes/colonnes numerotees par des sommets).
2 Returns the adjacency matrix of G (rows and columns are indexed by the vertices).
-1 neighbors
adjacency_matrix(graph(trail(1,2,3,4,2,5,1,3)))

# incidence_matrix
0 Graph(G)
2 Returns the incidence matrix of G whose rows are indexed by the vertices and columns by the edges (in order defined by the command 'edges').
-1 incident_edges
incidence_matrix(graph("tetrahedron"))

# weight_matrix
0 Graph(G)
1 Renvoie la matrice des poids du graphe G.
2 Returns the weight matrix of G.
-1 set_edge_weight
-2 get_edge_weights
-3 is_weighted
-4 make_weighted
-5 assign_edge_weights
weight_matrix(graph(%{[[1,2],2],[[2,3],1]%})

# graph_complement
0 Graph(G)
2 Return the graph with the same vertex set as G, but whose edge (arc) set consists of the edges (arcs) not present in G.
-1 edges
graph_complement(cycle_graph(5))

# subgraph
0 Graph(G),Lst(E)
1 Sous-graphe de G defini par les aretes de E.
2 Returns the subgraph of G defined by the edges in list E.
-1 induced_subgraph
-2 highlight_subgraph
subgraph(complete_graph(5),[[1,2],[2,3],[3,4],[4,1]])

# vertex_degree
0 Graph(G),Vrtx(v)
1 Degre du sommet v dans le graphe G (nombre d'aretes incidentes a v).
2 Returns the degree of the vertex v in G (i.e. the number of edges incident to v).
-1 degree_sequence
-2 is_regular
-3 maximum_degree
-4 minimum_degree
-5 vertex_in_degree
-6 vertex_out_degree
vertex_degree(digraph(trail(1,2,3,4,2)),2)

# vertex_in_degree
0 Graph(G),Vrtx(v)
1 Renvoie le nombre d'arcs du graphe G se terminant par le sommet v.
2 Returns the number of arcs in G entering the vertex v.
-1 degree_sequence
-2 is_regular
-3 maximum_degree
-4 minimum_degree
-5 vertex_degree
-6 vertex_out_degree
vertex_in_degree(digraph(trail(1,2,3,4,2)),2)

# vertex_out_degree
0 Graph(G),Vrtx(v)
1 Renvoie le nombre d'arcs du graphe G commencant par le sommet v.
2 Returns the number of arcs in G emanating from the vertex v.
-1 degree_sequence
-2 is_regular
-3 maximum_degree
-4 minimum_degree
-5 vertex_degree
-6 vertex_in_degree
vertex_out_degree(digraph(trail(1,2,3,4,2)),2)

# induced_subgraph
0 Graph(G),Lst(V)
1 Renvoie le sous-graphe de G de sommets dans la liste V.
2 Returns the subgraph of G induced by the vertices in list V.
-1 subgraph
induced_subgraph(cycle_graph(6),[1,2,6])

# maximal_independent_set
0 Graph(G)
1 Renvoie un ensemble maximal de sommets independants (non adjacents) du graphe G.
2 Returns a maximal set of mutually independent (non-adjacent) vertices in G.
-1 maximum_independent_set
maximal_independent_set(graph("petersen"))

# maximum_matching
0 Graph(G)
2 Returns the list of edges representing maximum matching in G.
-1 maximum_independent_set
 G:=graph("soccerball"); draw_graph(highlight_edges(G,maximum_matching(G)))

# make_directed
0 Graph(G),[Mrtx(A)]
1 Renvoie une copie orientee du graphe non oriente G.
2 Returns the copy of undirected graph G in which every edge is converted to a pair of arcs [and with weights specified by matrix A].
-1 is_directed
-2 make_weighted
-3 underlying_graph
make_directed(cycle_graph(4),[[0,0,0,1],[2,0,1,3],[0,1,0,4],[5,0,4,0]])

# underlying_graph
0 Graph(G)
2 Returns the graph obtained by stripping directions and weights from arcs (pairs of arcs connecting the same vertices are merged to a single edge).
-1 is_directed
-2 is_weighted
-3 make_directed
-4 make_weighted
underlying_graph(digraph(trail(1,2,3,4,1)))

# cycle_graph
0 Intg(n)||Lst(V)
1 Renvoie un graphe cyclique ayant n sommets (ou avec les sommets de la liste V).
2 Returns a cyclic graph with n vertices (or with vertices from list V).
-1 graph
-2 path_graph
cycle_graph(4)
cycle_graph(["one","two","three","four","five"])

# lcf_graph
0 Lst(J),[Intg(k)]
2 Returns the graph constructed from LCF notation J[^k] given the list of integers J [and a positive integer k, by default 1].
-1 graph
lcf_graph([-3,3],4)

# hypercube_graph
0 Intg(n)
1 Construit et renvoie le graphe hypercube en dimension n (avec 2^n sommets).
2 Constructs and returns the hypercube graph in dimension n (with 2^n vertices).
-1 graph
hypercube_graph(3)

# seidel_switch
0 Graph(G),Lst(V)
2 Returns a copy of G in which the edges between vertices in list V and vertices not in V are inverted (replaced with a set of edges from V to other vertices which is not present in G).
-1 neighbors
-2 graph_complement
seidel_switch(cycle_graph(5),[1,2])

# draw_graph
0 Graph(G),[opts]
2 Returns the graphic representation of G obtained by using various algorithms (which can optionally be fine tuned by appending a sequence of options after the first argument).
-1 highlight_edges
-2 highlight_subgraph
-3 highlight_trail
-4 highlight_vertex
-5 set_vertex_positions
-6 get_vertex_positions
draw_graph(graph("petersen"))
draw_graph(graph("petersen"),spring)
draw_graph(random_tree(30))
draw_graph(sierpinski_graph(5,3,at_triangle))
draw_graph(graph("soccerball"))

# sierpinski_graph
0 Intg(n),Intg(k),[triangle]
2 Returns Sierpiński (triangle) graph S(n,k) (resp. ST(n,k)).
-1 graph
sierpinski_graph(2,4)
sierpinski_graph(4,3)
sierpinski_graph(3,4)
sierpinski_graph(3,2)
sierpinski_graph(3,3,at_triangle)

# complete_graph
0 Intg(n)||Lst(V)||Seq(n1,n2,...,nk)
2 Returns a complete graph with vertices from list V or enumerated with first n integers or, when two or more positive integers n1,n2,...,nk are given, a complete k-partite graph with partition sizes n1,n2,...,nk.
-1 edges
complete_graph(4)
complete_graph(["one","two","three"])
complete_graph(2,3,4)

# petersen_graph
0 Intg(n),[Intg(k)]
2 Returns the generalized Petersen graph G(n,k), where n and k are positive integers (k defaults to 2).
-1 graph
petersen_graph(5,2)
petersen_graph(6,3)
petersen_graph(10,2)

# random_graph
0 Intg(n)||Lst(V),Real(p)||Intg(m)
2 Returns a random undirected unweighted graph with n vertices (list V of labels may me specified) where two vertices are connected with probability p or where m edges are created at random.
-1 random_bipartite_graph
-2 random_digraph
-3 random_planar_graph
-4 random_regular_graph
-5 random_sequence_graph
-6 random_tournament
-7 random_tree
random_graph(8,0.5)
random_graph(8,10)

# random_digraph
0 Intg(n)||Lst(V),Real(p)||Intg(m)
2 Returns a random directed unweighted graph with n vertices (list V of labels may me specified) where two vertices are connected with probability p or where m edges are created at random.
-1 random_bipartite_graph
-2 random_graph
-3 random_planar_graph
-4 random_regular_graph
-5 random_sequence_graph
-6 random_tournament
-7 random_tree
random_digraph(8,0.5)
random_digraph(8,10)

# random_bipartite_graph
0 Intg(n)||Lst(a,b),Real(p)||Intg(m)
2 Returns a random undirected unweighted bipartite graph with n vertices where each possible edge is present with probability p or where m edges are created at random. When the first argument is list [a,b] of integers, two groups of vertices with sizes a and b are created.
-1 random_digraph
-2 random_graph
-3 random_planar_graph
-4 random_regular_graph
-5 random_sequence_graph
-6 random_tournament
-7 random_tree
random_bipartite_graph(10,0.5)
random_bipartite_graph([2,3],1.0)

# random_tournament
0 Intg(n)||Lst(V)
2 Returns a random tournament graph with n vertices, which may be specified as list V of their labels.
-1 random_bipartite_graph
-2 random_digraph
-3 random_graph
-4 random_planar_graph
-5 random_regular_graph
-6 random_sequence_graph
-7 random_tree
random_tournament(5)

# random_regular_graph
0 Intg(n)||Lst(V),Intg(d),[connected]
2 Returns a random d-regular graph with n vertices, which may be specified as list V of their labels.
-1 random_bipartite_graph
-2 random_digraph
-3 random_graph
-4 random_planar_graph
-5 random_sequence_graph
-6 random_tournament
-7 random_tree
random_regular_graph(100,80,connected)

# random_sequence_graph
0 Lst(L)
2 Returns a random undirected graph with degree sequence L.
-1 random_bipartite_graph
-2 random_digraph
-3 random_graph
-4 random_planar_graph
-5 random_sequence_graph
-6 random_tournament
-7 random_tree
random_sequence_graph([1,3,3,2,1,2,2,2,3,3])

# random_tree
0 Intg(n)||Lst(V),[Intg(d)||root[=Vrtx(v)]]
2 Returns a random tree graph with n vertices, which may be specified as list V of their labels [with the upper bound d (positive integer) for the degree of graph or 'root' for rooted trees].
-1 random_bipartite_graph
-2 random_digraph
-3 random_graph
-4 random_planar_graph
-5 random_regular_graph
-6 random_sequence_graph
-7 random_tournament

# random_planar_graph
0 Intg(n)||Lst(V),Real(p),[Intg(c)]
2 Return random planar graph with n vertices, which can also be specified as a list V of their labels, obtained by trying to remove each edge of a random triangulated graph with probability 0<=p<1 [c is connectivity level : 0 - any, 1 - connected, 2 - biconnected, 3 - triconnected (by default, c=1)].
-1 random_bipartite_graph
-2 random_digraph
-3 random_graph
-4 random_regular_graph
-5 random_sequence_graph
-6 random_tournament
-7 random_tree

# assign_edge_weights
0 Graph(G),Seq(m,n)||Intrv(a..b)
2 Assigns random edge weights to the edges of G and returns a modified copy of G. If integers n and m such that n>=m are specified, weights are integers randomly chosen in [m,n]. If an interval a..b is specified, weights are uniformly distributed in the interval [a,b).
-1 set_edge_weight
-2 get_edge_weight
-3 weight_matrix
-4 random_digraph
-5 random_tournament
assign_edge_weights(digraph(trail(1,2,3,4,1)),1,9)
assign_edge_weights(digraph(trail(1,2,3,4,1)),0..1)

# articulation_points
0 Graph(G)
2 Returns the list of articulation points (cut vertices) of G.
-1 biconnected_components
-2 is_biconnected
-3 is_connected
-4 is_triconnected
articulation_points(path_graph(5))
articulation_points(cycle_graph(5))

# biconnected_components
0 Graph(G)
2 Returns the biconnected components of G as a list of lists of vertices.
-1 articulation_points
-2 is_biconnected
-3 is_connected
-4 trail
biconnected_components(graph(trail(1,2,3,4,2),trail(4,5,6,7,5)))

# add_arc
0 Graph(G),Edge(e)||Trail(T)||Lst(E)
2 Returns a modified copy of digraph G with added arc e (or trail T or list of arcs E).
-1 add_edge
-2 delete_arc
-3 digraph
-4 edges
-5 has_arc
-6 trail
add_arc(digraph(trail(1,2,3,4,5,1)),[[1,3],[2,4]])

# delete_arc
0 Graph(G),Edge(e)||Trail(T)||Lst(E)
2 Returns a modified copy of digraph G with arc e (or trail T or list of arcs E). removed.
-1 add_arc
-2 delete_edge
-3 digraph
-4 edges
-5 has_arc
-6 trail
delete_arc(digraph(trail(1,2,3,4,5,1)),[5,1])

# add_edge
0 Graph(G),Edge(e)||Trail(T)||Lst(E)
2 Returns a modified copy of undirected graph G with added edge e (or trail T or list of edges E).
-1 add_arc
-2 delete_edge
-3 edges
-4 graph
-5 has_edge
-6 trail
add_edge(graph(trail(1,2,3,4)),[4,1])

# delete_edge
0 Graph(G),Edge(e)||Trail(T)||Lst(E)
2 Returns a modified copy of undirected graph G with edge e (or trail T or list of edges E) removed.
-1 add_edge
-2 delete_arc
-3 edges
-4 graph
-5 has_edge
-6 trail
delete_edge(cycle_graph(4),[1,2])

# add_vertex
0 Graph(G),Vrtx(v)||Lst(V)
2 Returns a modified copy of G with added vertex v [or vertices from list V].
-1 add_arc
-2 add_edge
-3 delete_vertex
add_vertex(cycle_graph(5),["a","b"])

# delete_vertex
0 Graph(G),Vrtx(v)||Lst(V)
2 Returns a modified copy of G with vertex v (or vertices from V) removed.
-1 add_vertex
-2 induced_subgraph
delete_vertex(cycle_graph(5),[1,4])

# contract_edge
0 Graph(G),Edge(e)
2 Returns a modified copy of undirected graph G with edge e contracted (to contract more edges apply the foldl command).
-1 delete_edge
-2 delete_vertex
-3 foldl
contract_edge(complete_graph(4),[1,3])

# connected_components
0 Graph(G)
2 Returns a list of lists of vertices, each sublist representing a connected component of G.
-1 articulation_points
-2 is_biconnected
-3 is_strongly_connected
-4 strongly_connected_components
-5 underlying_graph
connected_components(graph_complement(cycle_graph(4)))

# departures
0 Graph(G),[Vrtx(v)]
2 Returns the list of vertices of digraph G which are connected by v with arcs such that tails are in v. If v is omitted, list of departures is computed for every vertex in G.
-1 out_degree
departures(digraph(%{[1,2],[1,3],[2,3]%}),1)

# arrivals
0 Graph(G),[Vrtx(v)]
2 Returns the list of vertices in digraph G which are connected by v with arcs such that heads are in v. If v is omitted, a list of arrivals is computed for every vertex in G.
-1 in_degree
arrivals(digraph(%{[1,2],[1,3],[2,3]%}),1)

# incident_edges
0 Graph(G),Vrtx(v)
2 Returns the list of all edges incident to the vertex v of G (or to the vertices in the list v).
-1 adjacency_matrix
-2 vertex_degree
-3 incidence_matrix
-4 neighbors
incident_edges(cycle_graph(8),[1,5,7])

# make_weighted
0 Graph(G),[Mrtx(M)]
2 Returns a copy of G with edge/arc weights set as specified by matrix M. If M is omitted, a suqare matrix of ones is used. If G is undirected, M is assumed to be symmetric.
-1 get_edge_weight
-2 is_weighted
-3 make_directed
-4 set_edge_weight
-5 underlying_graph
-6 weight_matrix
make_weighted(cycle_graph(3),[[0,2,3],[2,0,1],[3,1,0]])

# set_graph_attribute
0 Graph(G),Seq(tag1=value1,tag2=value2,..)
2 Stores the attributes where each tag is string, and returns the modified copy of G.
-1 discard_graph_attribute
-2 get_graph_attribute
-3 list_graph_attributes
set_graph_attribute(cycle_graph(3),"name"="cycle graph")

# get_graph_attribute
0 Graph(G),Seq(tag1=value1,tag2=value2,..)
2 Return the graph attributes tag1, tag2, ..., as a sequence of the corresponding values.
-1 discard_graph_attribute
-2 set_graph_attribute
-3 list_graph_attributes
get_graph_attribute(cycle_graph(3),"name")

# discard_graph_attribute
0 Graph(G),Seq(tag1=value1,tag2=value2,..)
2 Discards the graph attributes with tags tag1, tag2, ... and returns the modified copy of G.
-1 get_graph_attribute
-2 set_graph_attribute
-3 list_graph_attributes
discard_graph_attribute(cycle_graph(3),"name")

# set_vertex_attribute
0 Graph(G),Vrtx(v),Seq(tag1=value1,tag2=value2,..)
2 Stores the attributes to vertex v and returns the modified copy of G.
-1 discard_vertex_attribute
-2 get_vertex_attribute
-3 list_vertex_attributes
set_vertex_attribute(cycle_graph(3),1,"supply"=27)

# get_vertex_attribute
0 Graph(G),Vrtx(v),Seq(tag1=value1,tag2=value2,..)
2 Return the attributes tag1, tag2, ... assigned to vertex v in G as a sequence of the corresponding values.
-1 discard_vertex_attribute
-2 set_vertex_attribute
-3 list_vertex_attributes
get_vertex_attribute(cycle_graph(3),1,"supply")

# discard_vertex_attribute
0 Graph(G),Vrtx(v),Seq(tag1=value1,tag2=value2,..)
2 Discards the attributes with tags tag1, tag2, ... assigned to vertex v in G and returns the modified copy of G.
-1 get_vertex_attribute
-2 set_vertex_attribute
-3 list_vertex_attributes
discard_vertex_attribute(cycle_graph(3),1,"supply")

# set_edge_attribute
0 Graph(G),Edge(e),Seq(tag1=value1,tag2=value2,..)
2 Stores the attributes to edge e and returns the modified copy of G.
-1 discard_edge_attribute
-2 get_edge_attribute
-3 list_edge_attributes
set_edge_attribute(cycle_graph(3),[1,2],"cost"=12.4)

# get_edge_attribute
0 Graph(G),Edge(e),Seq(tag1=value1,tag2=value2,..)
2 Return the attributes tag1, tag2, ... assigned to edge e in G as a sequence of the corresponding values.
-1 discard_edge_attribute
-2 set_edge_attribute
-3 list_edge_attributes
get_edge_attribute(cycle_graph(3),[1,2],"cost")

# discard_edge_attribute
0 Graph(G),Edge(e),Seq(tag1=value1,tag2=value2,..)
2 Discards the attributes with tags tag1, tag2, ... assigned to edge e in G and returns the modified copy of G.
-1 get_edge_attribute
-2 set_edge_attribute
-3 list_edge_attributes
discard_edge_attribute(cycle_graph(3),[1,2],"cost")

# list_graph_attributes
0 Graph(G)
2 Returns the list of graph attributes of G in form tag=value.
-1 set_graph_attribute
-2 get_graph_attribute
-3 discard_graph_attribute

# list_vertex_attributes
0 Graph(G),Vrtx(v)
2 Returns the list of attributes assigned to vertex v of G in form tag=value.
-1 set_vertex_attribute
-2 get_vertex_attribute
-3 discard_vertex_attribute

# list_edge_attributes
0 Graph(G),Edge(e)
2 Returns the list of attributes assigned to edge e of G in form tag=value.
-1 set_edge_attribute
-2 get_edge_attribute
-3 discard_edge_attribute

# number_of_edges
0 Graph(G)
2 Returns the number of edges/arcs of G.
-1 edges
-2 number_of_vertices
number_of_edges(complete_graph(5))

# number_of_vertices
0 Graph(G)
2 Returns the number of vertices of G.
-1 graph_vertices
-2 number_of_edges
number_of_vertices(graph("petersen"))

# get_edge_weight
0 Graph(G),Edge(e)
2 Returns the weight of the edge e in the weighted graph G.
-1 is_weighted
-2 make_weighted
-3 set_edge_weight
-4 weight_matrix
get_edge_weight(graph(%{[[1,2],5],[[2,3],6]%}),[1,2])

# set_edge_weight
0 Graph(G),Edge(e),Real(w)
2 Sets weight of the edge e in the weighted graph G to w and returns the modified copy of G.
-1 is_weighted
-2 get_edge_weight
-3 make_weighted
-4 weight_matrix
set_edge_weight(graph(%{[1,2],[2,3]%}),[1,2],5)

# is_directed
0 Graph(G)
2 Returns true iff G is directed.
-1 is_weighted
-2 digraph
-3 make_directed
is_directed(digraph(3))

# neighbors
0 Graph(G),[Vrtx(v)]
2 Returns the list of vertices adjacent to vertex v of G. If v is omitted, a list of adjacency lists of all vertices in G is returned.
-1 adjacency_matrix
-2 vertex_degree
-3 in_degree
-3 out_degree
neighbors(digraph(trail(1,2,3,4,5,6,4,7,8,2)),4)

# minimum_degree
0 Graph(G)
2 Returns the smallest degree among the vertices of G.
-1 maximum_degree
-2 vertex_degree
minimum_degree(digraph(trail(1,2,3,4,5,6,4,7,8,2)))

# maximum_degree
0 Graph(G)
2 Returns the larges degree among the vertices of G.
-1 minimum_degree
-2 vertex_degree
maximum_degree(digraph(trail(1,2,3,4,5,6,4,7,8,2)))

# is_regular
0 Graph(G)
2 Returns true iff max and min degrees of G are equal (if G is directed then out- and in-degrees must be equal for each vertex of G).
-1 degree_sequence
-2 maximum_degree
-3 minimum_degree
-4 random_regular_graph
-5 vertex_degree
is_regular(complete_graph(5))

# isomorphic_copy
0 Graph(G),Permu(sigma)
2 Returns a copy of G with neighbors structure reordered according to sigma.
-1 graph_vertices
-2 permute_vertices
-3 relabel_vertices
isomorphic_copy(cycle_graph(5),randperm(5))

# permute_vertices
0 Graph(G),Lst(V)
2 Returns a copy of G with vertices reordered according to the order in the list V.
-1 graph_vertices
-2 isomorphic_copy
-3 relabel_vertices
permute_vertices(graph([a,b,c]),[a,c,b])

# relabel_vertices
0 Graph(G),Lst(L)
2 Returns a copy of G with vertex labels changed to those in the list L.
-1 graph_vertices
-2 isomorphic_copy
-3 permute_vertices
relabel_vertices(graph([a,b,c]),["first","second","third"])

# is_tree
0 Graph(G)
2 Returns true iff G is a tree.
-1 is_forest
-2 random_tree
-3 tree_height
is_tree(random_tree(15))
is_tree(path_graph(4))
is_tree(cycle_graph(5))

# is_forest
0 Graph(G)
2 Returns true iff G is a forest (disjoint union of trees).
-1 is_tree
is_forest(graph(trail(1,2,3,4),trail(5,2,6,7),trail(8,9,10)))

# is_tournament
0 Graph(G)
2 Returns true iff G is a tournament.
-1 has_edge
-2 random_tournament
is_tournament(digraph(%{[1,2],[2,3],[3,1]%}))

# tree_height
0 Graph(T),Vrtx(r)
2 Returns the height of the tree graph T with r as the root node.
-1 is_tree
-2 random_tree
tree_height(graph(%{[1,2],[2,3],[2,4],[4,5]%}),1)

# number_of_triangles
0 Graph(G)
2 Returns the number of 3-cliques if G is undirected resp. the number of directed cycles on 3 vertices if G is directed.
-1 is_clique
-2 maximal_clique
number_of_triangles(graph("tetrahedron"))

# is_connected
0 Graph(G)
2 Returns true iff G is connected.
-1 connected_components
-2 is_biconnected
-3 is_triconnected
is_connected(path_graph(5))
is_connected(cycle_graph(5))
is_connected(graph_complement(complete_graph(3,4)))

# is_biconnected
0 Graph(G)
2 Returns true iff G is biconnected.
-1 biconnected_components
-2 is_connected
-3 is_triconnected
is_biconnected(path_graph(5))
is_biconnected(cycle_graph(5))
is_biconnected(graph("petersen"))

# is_triconnected
0 Graph(G)
2 Returns true iff G is triconnected.
-1 is_connected
-2 is_biconnected
is_triconnected(graph("soccerball"))
is_triconnected(graph("petersen"))
is_triconnected(cycle_graph(5))

# is_weighted
0 Graph(G)
2 Returns true iff G is weighted.
-1 get_edge_weight
-2 make_weighted
-3 set_edge_weight
-4 weight_matrix
is_weighted(graph(%{[a,b],[b,c]%})
is_weighted(graph(%{[[a,b],2],[[b,c],3]%})

# is_planar
0 Graph(G)
2 Returns true iff G is planar.
-1 draw_graph
-2 random_planar
is_planar(complete_graph(4))
is_planar(complete_graph(5))

# complete_binary_tree
0 Intg(n)
2 Returns the complete binary tree with depth n.
-1 complete_kary_tree
-2 is_tree
-3 random_tree
complete_binary_tree(3)

# complete_kary_tree
0 Intg(n)
2 Returns the complete k-ary tree with depth n.
-1 complete_binary_tree
-2 is_tree
-3 random_tree
complete_kary_tree(3,3)

# prism_graph
0 Intg(n)
2 Returns the generalized Petersen graph GP(n,1).
-1 antiprism_graph
-2 web_graph
prism_graph(5)

# antiprism_graph
0 Intg(n)
2 Returns the antiprism graph of order n.
-1 prism_graph
antiprism_graph(5)

# star_graph
0 Intg(n)
2 Returns the complete bipartite graph complete_graph(1,n).
-1 complete_graph
-2 wheel_graph
star_graph(5)

# wheel_graph
0 Intg(n)
2 Returns a wheel graph with n+1 vertices.
-1 star_graph
-2 web_graph
wheel_graph(5)

# grid_graph
0 Intg(m),Intg(n),[triangle]
2 Returns a [triangular] grid graph on m*n vertices, where m,n>=2.
-1 torus_grid_graph
grid_graph(5,8)

# torus_grid_graph
0 Intg(m),Intg(n)
2 Returns a torus grid graph on m*n vertices, where m,n>=3.
-1 grid_graph
torus_grid_graph(6,12)

# web_graph
0 Intg(a),Intg(b)
2 Returns a web graph on a*b vertices, where a>=3 and b>=2.
-1 prism_graph
-2 wheel_graph
web_graph(5,3)

# cartesian_product
0 Seq(G1,G2,..)
2 Returns the Cartesian product of graphs G1, G2, ... with vertices labelled as "u:v:..." where u, v, ... are vertices from G1, G2, ..., respectively.
-1 tensor_product
cartesian_product(graph(trail(1,2,3,4,5,2)),star_graph(3))

# tensor_product
0 Seq(G1,G2,..)
2 Returns the tensor product of the input graphs G1, G2, ... with vertices labelled as "u:v:..." where u, v, ... are vertices from G1, G2, ..., respectively.
-1 cartesian_product
tensor_product(graph(trail(1,2,3,4,5,2)),star_graph(3))

# path_graph
0 Intg(n)||Lst(V)
2 Returns a path graph on n vertices [with labels from V].
-1 cycle_graph
-2 graph
-3 trail
path_graph(5)

# is_eulerian
0 Graph(G),[Var(T)]
2 Return true iff G is eulerian [and write the corresponding eulerian trail to T].
-1 path_graph
-2 trail
is_eulerian(complete_graph(4))
is_eulerian(complete_graph(5))
is_eulerian(graph(trail(1,2,3,1,4,3,5,4)),T)
is_eulerian(digraph(%{[1,4],[1,3],[2,1],[3,2],[4,5],[5,1]%}))

# kneser_graph
0 Intg(n),Intg(k)
2 Returns the Kneser graph K(n,k) with comb(n,k) vertices (n<=20).
-1 odd_graph
kneser_graph(5,2)

# odd_graph
0 Intg(n)
2 Returns the odd graph of order n as Kneser graph K(2n-1,n-1), where n<=8.
-1 kneser_graph
odd_graph(3)

# highlight_vertex
0 Graph(G),Vrtx(v)||Lst(V),[Color(c)||Lst(C)]
2 Change the color of vertex v resp. colors of vertices from V in G to c resp. C (green by default) and return the modified copy of G.
-1 highlight_edges
-2 highlight_subgraph
-3 highlight_trail
 draw_graph(highlight_vertex(cycle_graph(3),1))

# highlight_edges
0 Graph(G),Edge(e)||Lst(E),[Color(c)||Lst(C)]
2 Change color of edge e resp. colors of edges in E of the input graph V to c resp C (by default red) and return the modified copy of G.
-1 highlight_vertex
-2 highlight_subgraph
-3 highlight_trail
 draw_graph(highlight_edges(cycle_graph(3),[1,2]))

# highlight_trail
0 Graph(G),Trail(t)||Lst(T),[Color(c)||Lst(C)]
2 Change colors of edges in G which lie along the trail t resp. trails in T to c resp. C (by default red) and return the modified copy of G.
-1 highlight_edges
-2 highlight_subgraph
-3 highlight_vertex
 draw_graph(highlight_trail(cycle_graph(5),trail(1,2,3),green)

# highlight_subgraph
0 Graph(G),Graph(S)||Lst(S1,S2,..),Seq(c1,c2)
2 Change colors of edges and vertices from the sugbraph S or list of subgraphs S1, S2, ... of G to c1 and c2, respectively (red and green by default), and return the modified copy of G.
-1 highlight_edges
-2 highlight_vertex
-3 highlight_trail
 draw_graph(highlight_subgraph(cycle_graph(5),path_graph(3)))

# disjoint_union
0 Seq(G1,G2,...)
2 Returns the disjoint union of the graphs G1, G2, ... Vertices in the resulting graph are labelled with "k:v", where k is index of the corresponding k-th graph Gk and v is vertex in Gk.
-1 graph_join
-2 graph_union
is_connected(disjoint_union(cycle_graph(5),path_graph(4)))

# graph_union
0 Seq(G1,G2,...)
2 Returns the union of the graphs G1, G2, ... The set of vertices of the resulting graph is the union of the sets of vertices of the input graphs and the set of edges of the resulting graph is the union of sets of edges of the input graphs. If the input graphs are weighted, the weight of any common edge is the sum of the weights of that edge in G1, G2, ...
-1 disjoint_union
-2 graph_join
edges(graph_union(cycle_graph(4),path_graph(5)))

# graph_join
0 Graph(G),Graph(H)
2 Returns the graph obtained by connecting every vertex from G with every vertex from H. The vertex labels in the resulting graph are strings of form "1:u" and "2:v" where u and v are vertices from G and H, respectively.
-1 disjoint_union
-2 graph_union
edges(graph_join(cycle_graph(3),graph(2)))

# graph_equal
0 Graph(G1),Graph(G2)
2 Returns true iff the input graphs G1 and G2 are equal, that is when the sets of vertices and edges of G1 and G2, as well as the orderings of vertices in both graphs, mutually coincide. If the graphs are weighted (they must both be (un)weighted and (un)directed), weights given to the same edge in two graphs must be equal.
-1 edges
-2 graph_vertices
graph_equal(graph([1,2,3],%{[1,2],[2,3],[3,1]%}),graph(trail(1,2,3,1)))

# reverse_graph
0 Graph(G)
2 Returns the copy of G with the directions of all edges reversed.
-1 digraph
reverse_graph(digraph(%{[1,2],[1,3],[2,3]%}))

# interval_graph
0 Seq||Lst(a..b,c..d,...)
2 Returns the interval graph with respect to intervals a..b, c..d, ... on the real line. It has one vertex per interval and two vertices are connected iff the corresponding intervals intersect.
-1 graph
-2 kneser_graph
interval_graph([0..8,1..pi,exp(1)..20,7..18,11..14,17..24,23..25])

# subdivide_edges
0 Graph(G),Lst(E),[Intg(r)]
2 Inserts r (by default 1) new vertices to each edge/arc in G contained in the list E (which may be a single edge/arc) and returns the modified copy of G. New vertices are labelled with smallest available integers.
-1 edges
subdivide_edges(complete_graph(2,3),[[1,3],[1,4]],2)

# graph_power
0 Graph(G),Intg(k)
2 Returns the k-th power of G, where two vertices are connected iff there exists a path of length at most k in the original graph.
-1 adjacency matrix
-2 graph_diameter
-3 shortest_path
edges(graph_power(path_graph(5),3))

# vertex_distance
0 Graph(G),Vrtx(s),Vrtx(t)||Lst(T)
2 Returns the number of edges in the shortest path from vertex s to vertex t in G. If such path does not exist, returns +infinity. For vector T of vertices from G returns the list of distances from s to each vertex t in T.
-1 allpairs_distance
-2 graph_diameter
-3 dijkstra
-4 shortest_path
vertex_distance(graph("petersen"),1,4)
vertex_distance(graph("petersen"),1,[2,4])

# shortest_path
0 Graph(G),Vrtx(s),Vrtx(t)||Lst(T)
2 Returns the shortest path from vertex s to vertex t in G. If such path does not exist, returns an empty list. If vector T of vertices from G is given, the list of shortest paths from s to each t int T is returned.
-1 dijkstra
-2 vertex_distance
shortest_path(cycle_graph(6),1,5)

# allpairs_distance
0 Graph(G)
2 Returns a square matrix D of order equal to the number of vertices in G such that D(i,j) is the distance between i-th and j-th vertex of the (weighted) graph G.
-1 dijkstra
-2 graph_diameter
-3 vertex_distance
allpairs_distance(graph(%{[1,2],[1,3],[1,4],[1,5],[2,3],[3,4],[4,5],[5,2]%}))

# graph_diameter
0 Graph(G)
2 Returns the maximum distance between a pair of vertices in G or +infinity if G is disconnected.
-1 allpairs_distance
-2 dijkstra
-3 shortest_path
-4 vertex_distance
graph_diameter(graph("petersen"))

# dijkstra
0 Graph(G),Vrtx(v),[Vrtx(w)||Lst(W)]
2 Returns the cheapest weighted path from vertex v to w (or to vertices from W) in undirected graph G. Output is in form [[v1,v2,...,vk],d] (or list of these) where v1,v2,...,vk are vertices along each path and d is the weight of the path.
-1 allpairs_distance
-2 shortest_path
dijkstra(graph(%{[[1,2],1],[[2,3],3],[[3,4],7],[[4,5],3],[[5,6],3],[[1,6],3]%}),1,4)

# bellman_ford
0 Graph(G),Vrtx(s),Vrtx(t)||Lst(T)
2 Returns the length of the shortest path resp. paths from s to vertex t resp. vertices in T in weighted graph G.
-1 dijkstra
-2 shortest_path
bellman_ford(graph(%{[[1,2],-1],[[2,3],-3],[[3,4],-7],[[4,5],-3],[[5,6],-3],[[1,6],-3]%}),1,4)

# topologic_sort topological_sort
0 Graph(G)
2 Returns the list of vertices sorted according to the topological ordering in the directed acyclic graph G.
-1 digraph
-2 is_acyclic
topologic_sort(digraph(%{[c,a],[c,b],[c,d],[a,d],[b,d],[a,b]%}))

# is_acyclic
0 Graph(G)
2 Returns true iff digraph G has no topological ordering.
-1 topologic_sort
-2 topological_sort
is_acyclic(digraph(%{[c,a],[c,b],[c,d],[a,d],[b,d],[a,b]%}))

# is_clique
0 Graph(G)
2 Returns true iff undirected graph G is a clique (a complete graph).
-1 clique_number
-2 induced_subgraph
-3 maximum_clique
is_clique(complete_graph(3))

# maximum_clique
0 Graph(G)
2 Returns maximum clique of undirected graph G as a list of vertices.
-1 clique_number
-2 is_clique
-3 maximum_independent_set
maximum_clique(graph_complement(complete_graph(3,4)))

# clique_number
0 Graph(G)
2 Returns the clique number of G, which is equal to the size of a maximum clique in G.
-1 maximum_clique
clique_number(graph_complement(complete_graph(3,4)))

# clique_cover
0 Graph(G),[Intg(k)]
2 Returns a clique vertex cover of G [containing at most k cliques].
-1 clique_cover_number
-2 maximal_cliques
clique_cover(graph("petersen"))
clique_cover(cycle_graph(5))
clique_cover(graph_complement(complete_graph(3,4)))

# clique_cover_number
0 Graph(G)
2 Returns the clique cover number of G.
-1 clique_cover
-3 maximal_cliques
clique_cover_number(graph("petersen"))
clique_cover_number(cycle_graph(5))
clique_cover_number(graph_complement(complete_graph(3,4)))

# chromatic_number
0 Graph(G)
2 Returns the chromatic number of G.
chromatic_number(graph("petersen"))

# maximum_independent_set
0 Graph(G)
2 Returns the maximum independent vertex set of G.
-1 clique_number
-2 graph_complement
-3 independence_number
-4 maximum_clique
maximum_independent_set(complete_graph(3,4))

# independence_number
0 Graph(G)
2 Returns the independence number of G.
-1 clique_number
-2 graph_complement
-3 maximum_clique
-4 maximum_independent_set
independence_number(complete_graph(3,4))

# strongly_connected_components
0 Graph(G)
2 Returns the list of strongly connected components in digraph G.
-1 connected_components
-2 is_connected
-3 is_strongly_connected
strongly_connected_components(digraph([1,2,3],%{[1,2],[1,3],[2,3],[3,2]%}))

# is_strongly_connected
0 Graph(G)
2 Returns true iff digraph G is strongly connected.
-1 connected_components
-2 is_connected
-3 strongly_connected_components
is_strongly_connected(digraph([1,2,3],%{[1,2],[1,3],[2,3],[3,2]%}))

# degree_sequence
0 Graph(G)
2 Returns the list of degrees of vertices of G (arc directions are ignored).
-1 is_graphic_sequence
-2 is_regular
-2 sequence_graph
-3 vertex_degree
degree_sequence(graph(trail(1,2,3,4,2)))

# is_graphic_sequence
0 Lst(L)
2 Returns true iff there exists a graph with degree sequence equal to the list L.
-1 degree_sequence
-2 sequence_graph
is_graphic_sequence([3,2,4,2,3,4,5,7])

# sequence_graph
0 Lst(L)
2 Returns an undirected graph with the degree sequence equal to the list L.
-1 degree_sequence
-2 is_graphic_sequence
degree_sequence(sequence_graph([3,2,4,2,3,4,5,7]))

# girth
0 Graph(G)
2 Returns the length of the shortest cycle in the undirected unweighted graph G.
-1 odd_girth
girth(graph("petersen"))
girth(hypercube_graph(3))

# odd_girth
0 Graph(G)
2 Returns the length of the shortest odd cycle in the undirected unweighted graph G.
-1 girth
odd_girth(graph("petersen"))
odd_girth(hypercube_graph(3))

# is_arborescence
0 Graph(G)
2 Returns true iff the directed and unweighted graph G is an arborescence.
-1 is_acyclic
-2 is_forest
-3 is_tree
is_arborescence(digraph(%{[1,2],[1,3]%}))
is_arborescence(digraph(%{[1,2],[2,3],[3,1]%}))

# foldl
0 op,id,Seq(r1,r2,...)
2 Returns the composition of the binary operator or function op, with an identity or initial value id onto its arguments r1, r2, ..., associating from the left.
-1 apply
-2 foldr
-3 map
foldl(F,init,a,b,c)

# foldr
0 op,id,Seq(r1,r2,...)
2 Returns the composition of the binary operator or function op, with an identity or initial value id onto its arguments r1, r2, ..., associating from the right.
-1 apply
-2 foldl
-3 map
foldr(F,init,a,b,c)

# graph_spectrum
0 Graph(G)
2 Returns the graph spectrum of G as a list of lists with two elements, each containing an eigenvalue and its multiplicity.
-1 graph_charpoly
-2 seidel_spectrum
-3 is_integer_graph
graph_spectrum(cycle_graph(5))

# seidel_spectrum
0 Graph(G)
2 Returns the Seidel spectrum of G as a list of lists with two elements, each containing an eigenvalue and its multiplicity.
-1 graph_spectrum
seidel_spectrum(graph("clebsch"))

# graph_charpoly
0 Graph(G),[Var(x)]
2 Returns the value p(x) of the characteristic polynomial p of G. If x is omitted, a list of coefficients of p is returned.
-1 graph_spectrum
-2 charpoly
graph_charpoly(graph(%{[1,2],[2,3]%}))
graph_charpoly(graph("shrikhande"))

# is_integer_graph
0 Graph(G)
2 Returns true iff the spectrum of G consists only of integers.
-1 graph_spectrum
is_integer_graph(graph("levi"))

# spanning_tree
0 Graph(G),[Vrtx(r)]
2 Returns a spanning tree of undirected graph G [with the vertex r as the root node].
-1 number_of_spanning_trees
-2 minimal_spanning_tree
spanning_tree(graph("petersen"))
spanning_tree(graph("petersen"),5)

# number_of_spanning_trees
0 Graph(G)
2 Returns the number of spanning trees in undirected graph G.
-1 spanning_tree
number_of_spanning_trees(complete_graph(4))
number_of_spanning_trees(graph(trail(1,2,3,4,1,3)))

# minimal_spanning_tree
0 Graph(G)
2 Returns the minimal spanning tree of undirected graph G.
-1 spanning_tree
minimal_spanning_tree(graph([[0,1,0,4,0,0],[1,0,1,0,4,0],[0,1,0,3,0,1],[4,0,3,0,1,0],[0,4,0,1,0,4],[0,0,1,0,4,0]]))

# graph_rank
0 Graph(G),[Lst(E)]
2 Returns the graph rank of G. If optional set E of edges is given, rank of the spanning subgraph of G with edge set E is returned.
-1 connected_components
-2 number_of_vertices
graph_rank(graph(%{[1,2],[3,4],[4,5]%}))
graph_rank(graph(%{[1,2],[3,4],[4,5]%}),[[1,2],[3,4])

# lowest_common_ancestor
0 Graph(T),Vrtx(r),Seq(u,v)||Lst([u1,v1],[u2,v2],...)
2 Returns the lowest common ancestor of nodes u and v in the tree graph T with root r, or the list of lowest common ancestors of all pairs [uk,vk].
-1 is_tree
-2 tree_height
 T:=random_tree(30); lowest_common_ancestor(T,15,10,20)
 T:=random_tree(30); lowest_common_ancestor(T,15,[[10,20],[11,19]])

# connected
0 Opt
2 Option for the random_regular_graph command.
-1 directed
-2 weighted
-3 random_regular_graph

# spring
0 Opt
2 Option for the draw_graph command.
-1 planar
-2 tree
-3 draw_graph

# tree
0 Opt
2 Option for the draw_graph command.
-1 planar
-2 spring
-3 draw_graph

# planar
0 Opt
2 Option for the draw_graph command.
-1 spring
-2 tree
-3 draw_graph

# directed
0 Opt
2 Option for graph and digraph commands.
-1 weighted
-2 graph
-3 digraph

# weighted
0 Opt
2 Option for graph and digraph commands.
-1 directed
-2 graph
-3 digraph

# weights
0 Opt
2 Option for the edges command.
-1 edges

# bipartite
0 Opt
2 Option for the draw_graph command
-1 draw_graph

# st_ordering
0 Graph(G),Vrtx(s),Vrtx(t)
2 Returns ST numbering for the biconnected graph G with source s and sink (target) t.
-1 is_biconnected
st_ordering(graph("petersen"),1,2)

# greedy_color
0 Graph(G),[Permu(p)]
2 Returns the list of vertex colors (positive integers) obtained by coloring vertices one at a time [in the order given by permutation p], assigning to it the smallest available color.
-1 is_vertex_colorable
-2 chromatic_number
greedy_color(graph("petersen"))

# is_bipartite
0 Graph(G),[Var(P)]
2 Returns true iff G is bipartite graph [and assign to P the list of partitions represented as lists of vertices].
-1 random_bipartite_graph
-2 draw_graph
is_bipartite(graph("desargues"))

# plane_dual
0 Graph(G)||Lst(F)
2 Returns the plane dual of the biconnected planar graph G or constructed from the list of faces F.
-1 is_planar
plane_dual(hypercube_graph(3))

# is_vertex_colorable
0 Graph(G),Intg(k),[Var(col)]
2 Returns true iff the vertices of G can be colored by using at most k colors. If true is returned and an identifier col is given, the colors of the vertices are stored in it.
-1 greedy_color
-2 chromatic_number
is_vertex_colorable(graph("petersen"),2)
is_vertex_colorable(graph("petersen"),3,cols)

# set_vertex_positions
0 Graph(G),Lst(vp)
2 Sets the coordinates, given in the list vp, to the vertices of G and returns the modified copy of G.
-1 draw_graph
 G:=graph([1,2,3,4,5,6],%{[1,2],[1,4],[4,5],[2,5],[2,3],[3,6],[5,6]%}); G:=set_vertex_positions(G,[[0,0],[0.5,0],[1,0],[0,0.5],[0.5,0.5],[1,0.5]])

# clique_stats
0 Graph(G),[Intg(k)||Intrv(m..n)]
2 Returns the list of numbers of maximal cliques of size s in G for each s. If parameter k is given, the number of k-cliques is returned. If an interval m..n is given, only cliques with size between m and n (inclusive) are counted (m also may be +infinity).
-1 maximum_clique
-2 clique_cover
clique_stats(random_graph(50,0.5))
clique_stats(random_graph(50,0.5),5)
clique_stats(random_graph(50,0.5),3..5)

# minimal_vertex_coloring
0 Graph(G),[sto]
2 Computes minimal vertex coloring for G and returns the colors in the order of vertices. If optional parameter "sto" is given, the colors are assigned to vertices and the modified copy of G is returned.
-1 chromatic_number
-2 is_vertex_colorable
minimal_vertex_coloring(graph("petersen"))
 draw_graph(minimal_vertex_coloring(graph("petersen"),sto))

# bipartite_matching
0 Graph(G)
2 Returns the list of edges in a maximum matching of the undirected unweighted bipartite graph G.
-1 is_bipartite
-2 maximum_matching
bipartite_matching(graph("desargues"))

# line_graph
0 Graph(G)
2 Returns the line graph of undirected graph G.
-1 plane_dual
line_graph(hypercube_graph(3))

# transitive_closure
0 Graph(G),[weighted[=true||false]]
2 Returns the [weighted, by default false] transitive closure of G.
-1 allpairs_distance
-2 is_connected
-3 shortest_path
-4 vertex_distance
transitive_closure(digraph([1,2,3,4,5,6],%{[1,2],[2,3],[2,4],[4,5],[3,5]%}),weighted)

# is_isomorphic
0 Graph(G1),Graph(G2),[Var(I)]
2 Returns true if the input graphs G1 and G2 are isomorphic, else returns false. If an unassigned identifier 'I' is given, the isomorphism is stored to it in form of a list.
-1 isomorphic_copy
-2 permute_vertices
 G1:=graph("petersen"); G2:=kneser_graph(5,2); is_isomorphic(G1,G2,I)

# graph_automorphisms
0 Graph(G)
2 Returns the sequence of generators of Aut(G), the automorphism group of G. Each element is a permutation in form of list of disjoint cycles.
-1 cycles2permu
-2 isomorphic_copy
-3 permute_vertices
graph_automorphisms(graph("petersen"))

# canonical_labeling
0 Graph(G)
2 Returns the permutation representing the canonical labeling of G.
-1 isomorphic_copy
-2 relabel_vertices
canonical_labeling(graph("petersen"))

# minimal_edge_coloring
0 Graph(G),[sto]
2 Finds the minimal edge coloring of G and returns the sequence n,L where n is the class of G (1 for D colors and 2 for D+1 colors) and L is the list of colors of edges of G as returned by the edges command, or a copy of G with colored edges if the option 'sto' is specified.
-1 chromatic_index
-2 minimal_vertex_coloring
-3 edges
minimal_edge_coloring(graph("petersen"))
 G:=minimal_edge_coloring(graph("dodecahedron"),sto); draw_graph(G)

# chromatic_index
0 Graph(G),[Lst(cols)]
2 Returns the number of colors in the minimal edge coloring of G. If an unassigned identifier cols is given, the coloring is stored to it.
-1 minimal_edge_coloring
-2 chromatic_number
chromatic_index(graph("petersen"))
chromatic_index(graph("dodecahedron"),colors)

# trail2edges
0 Trail(T)
2 Converts a trail T to the list of its edges.
-1 subgraph
-2 trail
trail2edges(trail(1,2,3,4,1,3))
trail2edges([1,2,3,4,1,3])

# traveling_salesman
0 Graph(G),[Mtrx(M)],[opts]
2 Returns a Hamiltonian cycle in an unweighted graph G or solves traveling salesman problem if G is weighted (matrix M can be used for edge weights), returning a sequence containing the minimal cost and the corresponding Hamiltonian cycle.
-1 is_hamiltonian
traveling_salesman(hypercube_graph(5))
traveling_salesman(digraph(%{[[1,2],1],[[1,3],2],[[2,3],2],[[2,4],3],[[3,2],3],[[3,4],2],[[4,1],1]%}))
 M:=randmatrix(4,4,99); traveling_salesman(graph("tetrahedron"),M)
 G:=set_vertex_positions(complete_graph(42),[randvector(2,1000)$(k=1..42)]); traveling_salesman(G,vertex_distance)
 G:=set_vertex_positions(complete_graph(120),[randvector(2,1000)$(k=1..120)]); c,T:=traveling_salesman(G,vertex_distance,approx)

# is_hamiltonian
0 Graph(G),[Var(hc)]
2 Returns true if G is a Hamiltonian graph (and stores the Hamiltonian circuit in hc if unassigned identifier is given), else returns false.
-1 traveling_salesman
is_hamiltonian(graph("petersen"))
is_hamiltonian(hypercube_graph(5),C)
is_hamiltonian(digraph(%{[1,2],[1,3],[2,3],[2,4],[3,2],[3,4],[4,1]%}))

# is_network
0 Graph(G),[Vrtx(s),Vrtx(t)]
2 Returns true if G is a network with the source s and sink t, else returns false. If s,t are not given, the output is a sequence of two sets of vertices: sources and sinks.
-1 random_network
-2 maxflow
is_network(digraph(trail(1,2,3,4,5,6,4,7)))
is_network(digraph(trail(1,2,3,4,5,6,4,7)),1,7)
is_network(digraph(trail(1,2,3,4,5,6,4,1)))

# random_network
0 Intg(a),Intg(b),[Real(p)],[opts]
2 Returns a random network with b grid frames of size a*a in which every edge appears with the probability p (by default 0.5).
-1 is_network
-2 maxflow
random_network(3,3)
random_network(3,3,acyclic)
random_network(3,4,0.75)

# maxflow
0 Graph(G),Vrtx(s),Vrtx(t)
2 Returns the optimal value for the max flow problem for network G with the source s and sink t along with an optimal flow (as a matrix).
-1 minimum_cut
maxflow(digraph(%{[[1,2],2],[[2,3],4],[[3,4],3],[[1,5],3],[[5,2],1],[[5,4],2]%}),1,4)

# minimum_cut
0 Graph(G),Vrtx(s),Vrtx(t)
2 Returns the list of edges forming a minimum cut in a directed graph G with the source s and sink t.
-1 maxflow
minimum_cut(digraph(%{[[1,2],2],[[2,3],4],[[3,4],3],[[1,5],3],[[5,2],1],[[5,4],2]%}),1,4)

# is_cut_set
0 Graph(G),Lst(E)
2 Returns true if removing edges in the list E from G increases the number of connected components of G, else returns false.
-1 connected_components
-2 delete_edge
is_cut_set(graph(trail(1,2,3,4,5,6,4,1,3)),[[1,4],[3,4]])

# acyclic
0 Opt
2 Option for the random_network command.
-1 random_network

# is_strongly_regular
0 Graph(G),[Var(srg)]
2 Returns true iff G is strongly regular and optionally outputs srg=[k,l,m] where k is the vertex degree and l resp. m is the number of common neighbors for adjacent resp. non-adjacent vertices.
-1 is_regular
-2 adjacency_matrix
-3 seidel_spectrum
is_strongly_regular(graph("clebsch"))
is_strongly_regular(graph("shrikhande"),s); s

# laplacian_matrix
0 Graph(G),[normal]
2 Returns the Laplacian matrix L=D-A of undirected graph G where D resp. A is the degree matrix resp. the adjacency matrix of G.
-1 adjacency_matrix
-2 degree_sequence
-3 number_of_spanning_trees
laplacian_matrix(graph(trail(1,2,3,4,5,2)))
laplacian_matrix(graph(trail(1,2,3,4,5,2)),normal)

# tutte_polynomial
0 Graph(G),[Var(x),Var(y)]
2 Returns the Tutte polynomial [or its value at point (x,y)] of undirected graph G. If G is weighted, all weights must be positive integers and are interpreted as edge multiplicities.
-1 chromatic_polynomial
-2 flow_polynomial
-3 reliability_polynomial
-4 delete_edge
-5 contract_edge
tutte_polynomial(graph("tetrahedron"))
tutte_polynomial(graph("tetrahedron"),1,1)

# flow_polynomial
0 Graph(G),[Var(x)]
2 Returns the flow polynomial [or its value at point x] of undirected unweighted graph G.
-1 chromatic_polynomial
-2 reliability_polynomial
-3 tutte_polynomial
flow_polynomial(graph("tetrahedron"))
flow_polynomial(graph("tetrahedron"),5)

# chromatic_polynomial
0 Graph(G),[Var(t)]
2 Returns the chromatic polynomial [or its value at point t] of undirected unweighted graph G.
-1 flow_polynomial
-2 reliability_polynomial
-3 tutte_polynomial
chromatic_polynomial(graph("petersen"))
chromatic_polynomial(graph("petersen"),3)

# reliability_polynomial
0 Graph(G),[Var(p)]
2 Returns the reliability polynomial [or its value at point p] of undirected graph G. If G is weighted, all weights must be positive integers and are interpreted as edge multiplicities.
-1 chromatic_polynomial
-2 flow_polynomial
-3 tutte_polynomial
reliability_polynomial(graph("petersen"))
reliability_polynomial(graph("petersen"),0.5)

# mycielski
0 Graph(G)
2 Returns the Mycielskian of undirected graph G.
-1 chromatic_number
-2 number_of_triangles
mycielski(graph("petersen"))
 is_isomorphic(mycielski(mycielski(path_graph(2))),graph("grotzsch"))

# edge_connectivity
0 graph(G)
2 Returns the largest integer k for which G is k-edge connected, meaning that G remains connected after fewer than k edges are removed.
-1 is_two_edge_connected
-2 is_edge_cut
-3 vertex_connectivity
edge_connectivity(graph("petersen"))
edge_connectivity(graph("clebsch"))
edge_connectivity(complete_graph(5))

# vertex_connectivity
0 Graph(G)
2 Returns the largest integer k such that undirected connected graph G remains connected when fewer than k vertices are removed.
-1 edge_connectivity
-2 is_connected
vertex_connectivity(graph("petersen"))
vertex_connectivity(graph("clebsch"))
vertex_connectivity(complete_graph(5))

# is_two_edge_connected
0 Graph(G)
2 Returns true iff undirected graph G is two-edge-connected (has no bridges).
-1 two_edge_connected_components
-2 edge_connectivity
is_two_edge_connected(cycle_graph(4))
is_two_edge_connected(path_graph(4))

# two_edge_connected_components
0 Graph(G)
2 Returns the list of two-edge-connected components of undirected graph G, each of them represented by the list of its vertices.
-1 is_two_edge_connected
-2 connected_components
two_edge_connected_components(graph(trail(1,2,3,4,5,3,1),trail(5,6,7,8,6)))

# clustering_coefficient
0 Graph(G),[Vrtx(v)]
2 Returns the average clustering coefficient of undirected graph G, or the local clustering coefficient of the vertex v in G.
-1 network_transitivity
-2 number_of_triangles
clustering_coefficient(graph(%{[1,2],[2,3],[2,4],[3,4],[4,1]%}))
clustering_coefficient(graph(%{[1,2],[2,3],[2,4],[3,4],[4,1]%}),2)

# network_transitivity
0 Graph(G)
2 Returns the transitivity (also called triangle density or global clustering coefficient) of G.
-1 clustering_coefficient
-2 number_of_triangles
network_transitivity(graph(%{[1,2],[2,3],[2,4],[3,4],[4,1]%}))

# kernel_density kde
0 Lst(L),[options]
2 Estimates the probability density function from which the (presumably independent) samples in list L are drawn.
-1 random_variable
-2 sample
kernel_density([1,2,3,2],bandwidth=1/4,exact)
 X:=randvar(gammad,mean=5,stddev=2):;kernel_density(sample(X,500),bins=50)
 Y:=randvar(normal,mean=5,stddev=1.5):;plot(kernel_density(sample(Y,1000),bins=50,piecewise),x=0..10)

# bandwidth
0 Opt
2 Option for the kernel_density command.
-1 kernel_density
-2 bins

# bins
0 Opt
2 Option for the kernel_density command.
-1 kernel_density
-2 bandwidth

# fitdistr
0 Lst(L),Fnc(D)
2 Returns the distribution of type D which fits most closely to the i.i.d. samples in the list L.
-1 normald
-2 poisson
-3 exponentiald
-4 geometric
-5 gammad
-6 betad
-7 cauchyd
-8 weibulld
-9 sample
-10 randvector
-11 randvar
fitdistr(randvector(1000,weibulld,1/2,1),weibull)
 X:=randvar(normal,stddev=9.5):;Y:=randvar(normal,stddev=1.5):;S:=sample(eval(X/Y,0),1000):;Z:=fitdistr(S,cauchy)
 X:=randvar(normal,mean=5,variance=2):;S:=sample(exp(X),1000):;fitdistr(log(S),normal)

# bvpsolve
0 Expr(f(x,y,y')),Lst(x=a..b,y),Lst(y(a),y(b),[y'(1)]),[options]
2 Returns an approximation of the function y (and optionally of y') on the interval a..b.
-1 odesolve
bvpsolve((32+2x^3-y*diff(y(x),x))/8,[x=1..3,y],[17,43/3],20)
bvpsolve((x^2*diff(y(x),x)^2-9y^2+4x^6)/x^5,[x=1..2,y],[0,ln(256),1],10,output=spline)

# convex
0 Expr(f),Lst(x,y,..)
2 Returns a list of conditions under which f(x,y,..) is convex.
-1 hessian
convex(-2x+y+x^2-2x*y+y^2,[x,y])
convex(3*exp(x)+5x^4-ln(x),x)
convex(x+y-exp(x)-exp(x+y),[x,y])
convex(x^2+y^2+3z^2-x*y+2x*z+y*z,[x,y,z])
convex(x1^3+2x1^2+2*x1*x2+x2^2/2-8x1-2x2-8,[x1,x2])
convex(x1^2+2x2^2+a*x3^2-2x1*x2+2x1*x3-6x2*x3,[x1,x2,x3])
convex(exp(x1)+exp(x2)+x1*x2,[x1,x2])
convex(sqrt((1+cos(x)^2)/sin(x)),x)
convex(sqrt((1+(u')^2)/(2*g*u)),u(t))

# kovacicsols
0 Expr||Lst(eq),[Var(x),[Var(y)]]
1 Resolution d'une equation differentielle lineaire homogene du second ordre a coefficient fraction rationnelle en la variable x
2 Solves a linear homogeneous second-order ODE eq for y(x) with rational coefficients in variable x.
-1 desolve
kovacicsols(y''=y*(1/x-3/16/x^2))
kovacicsols(y''-y*27/(36*(x-1)^2),x,y)
kovacicsols(x''+3*(t^2-t+1)/(16*(t-1)^2*t^2)*x,t,x)
kovacicsols(y''+y'=6y/x^2)
kovacicsols(y''+(19-x^2)*y=0,x,y)
kovacicsols((1+x^2)^2*y''+3y=0,x,y)
kovacicsols([48t*(t+1)*(5t-4),8*(25t+16)*(t-2),-(5t+68)],t)

# euler_lagrange
0 Expr(f),[(Var(x),[Var||Lst(y)]) || y(x) || Lst(y(x))]
1 Renvoie les equations d'Euler-Lagrange pour la fonctionnelle F=int(f,x=a..b)
2 Returns the (system of) Euler-Lagrange equation(s) for the functional F=int(f,x=a..b).
-1 dsolve
-2 bvpsolve
-3 convex
euler_lagrange(x^2*y'^2+y^2)
euler_lagrange(sqrt(x'^2+y'^2),[x(t),y(t)])
 assume(y>=0):; euler_lagrange(sqrt((1+y'^2)/y),t,y)

# icomp
0 Intg(n),Intg(k),[zeros=true||false]
2 Returns the list of compositions of n into k parts.
-1 sum
icomp(4,2)
icomp(6,3,zeros=false)

# jacobi_equation
0 Expr(f),Var(x),Var(y),Expr(y0),Var(h),Real(a)
2 Returns the Jacobi equation for stationary function y0(x) in a problem of minimizing the functional int(f(x,y,y'),x=a..b).
-1 conjugate_equation
-2 euler_lagrange
jacobi_equation(-1/2*y'(t)^2+y(t)^2/2,t,y,sin(t),h,0)

# conjugate_equation
0 Expr(y0),Lst(P),Lst(V),Var(x),Real(a)
2 Returns the expression which is zero for a point x1 conjugate to x (a is the left or the right bound for x) with respect to the function y0 depending on two parameters in P with values in V.
-1 jacobi_equation
-2 euler_lagrange
conjugate_equation(A*sin(t)+B*cos(t),[A,B],[1,0],t,0)

# tonnetz
0 Intg(a),Intg(b),Intg(c),[Intg(d)]
2 Returns the graph corresponding to the [a,b,c] resp. [a,b,c,d] tone network (tonnetz) used in neo-Riemannian music theory.
-1 is_regular
-2 clique_stats
tonnetz(3,4,5)
tonnetz(2,3,3,4)

# truncate_graph
0 Graph(G)
2 Returns the graph obtained by truncating the biconnected planar graph G.
-1 is_biconnected
-2 is_planar
-3 plane_dual
truncate_graph(graph("tetrahedron"))

# condensation
0 Graph(G)
2 Returns the graph obtained by contracting strongly connected components of the digraph G to single vertices.
-1 strongly_connected_components
condensation(digraph(%{[1,2],[1,3],[3,1],[1,4],[2,3],[4,3],[4,5],[5,3],[5,6],[7,6],[8,6],[8,7]%}))

# find_cycles
0 Graph(G,[length=k||l..u])
2 Returns the list of elementary cycles of the digraph G. If option "length" is specified, only cycles of length k resp. of length between l and u are returned.
-1 is_acyclic
find_cycles(digraph(%{[1,2],[1,3],[3,1],[1,4],[2,3],[4,3],[4,5],[5,3],[5,6],[7,6],[8,6],[8,7]%}))
find_cycles(digraph(%{[1,2],[1,3],[3,1],[1,4],[2,3],[4,3],[4,5],[5,3],[5,6],[7,6],[8,6],[8,7]%}),length=3)
find_cycles(digraph(%{[1,2],[1,3],[3,1],[1,4],[2,3],[4,3],[4,5],[5,3],[5,6],[7,6],[8,6],[8,7]%}),length=3..4)

# kspaths
0 Graph(G),Vrtx(s),Vrtx(t),Intg(k)
2 Returns a list of k shortest paths from s to t in the (weighted) (di)graph G.
-1 dijkstra
-2 shortest_path
kspaths(digraph(%{[["C","D"],3],[["C","E"],2],[["D","F"],4],[["E","D"],1],[["E","F"],2],[["E","G"],3],[["F","G"],2],[["F","H"],1],[["G","H"],2]%}),"C","H",5)
kspaths(graph("soccerball"),3,33,4)
