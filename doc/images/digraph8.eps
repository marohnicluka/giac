%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.48.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 268 208
%%HiResBoundingBox: 0 0 268 208
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font f-0-0
%!FontType1-1.0: f-0-0
12 dict begin
/FontInfo 10 dict dup begin
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /f-0-0 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -15 520 709] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89DCAEC6987A783181E687D6392CB3DF
C3438E7470F1F146C26E8A037D8C48E8083FB6F6821EB240E875A113E6AC2EF5
D76C5BF98ECA03951E3459ED7389057A10F36E770E4F593E3BA4554FAEED2308
F8A68EDE890DB8A16B4F4C291E3CC8175D72DBB20E9FEA968CA6CE0A3D2C1E09
0D2F00FF18039031B73010D2681773401A679895B61F2109B723443627B0C39C
139C7A5A2D46AF1757AC0831CC8F78F9B8A647D3307E176AA8DB152F7F273A23
23E8854C1E48D8F34A044678260D2C839237D5F3906094AFC3227CC7871D2832
C466CC0D729E9F630ACEC8BC1DEDDE22CB81272866347C8BA874C5ABC36B3600
5AA1D6CB6D3504127BDD08A647900BCD73B2311939EBD28604F23AF6F1E9ABF4
D84A0971154F508AF8D4FE712A308F0EA4E26B9DF6A9C1954A8E54B0FAB4C0D7
D3179B89AB9C4BAB471FFDA51E8686D706EE43517EF3F4EC0AFBAF65693295DC
EF6D031C81679FDFFE2CD11A2B8FB710066D463372753D02F663E04A89F43626
393EE0BDC2A382776A3192A1DB6A6B12326EA41D2630643E0F67E22937FE3CB8
70442B04B496FAAAD2532B8F1F41E8372AA6664C84B165DEE99D918FAB91A144
7AAC033B0D25DE91C2EFD92C87516DEA08773CD2C2C82DB705B8C5C1E5DEA602
155ED5AAB4230B910BAD5740C4074AE652FE8A04A792E0AA5847F8E5F0E2146E
F3F9B8FFDCC05EB46C588423002D5776D7A607F6312EF26B9B546CD326F4D717
BC00E1A16CE313F302E5FE4CB831B64999F88D2A4B41EC7CFDC33199C1D16FA9
2506BE24F6B7DE0AD1C4B701004956CE91A1AA9D4845EAF0C001EBF9456158C4
DC5EC9C48CE77AD477BF7F4B4AA6E073BE0455E5FAC97BA5E7CA857A0E642D2E
6D697B1BDC2227ED0585EBA2ED25D3BE2D2FAFB04350A5D79BA7AA8F040C26F1
44545853450A888AA599896D72EBD73F9F95218E806B0A0BFEE8DD1E22B0AE0A
73A4CE681C6E080FDD2C5724E3BF7F240FDA46AEE9FD3896AF32C5451C1D91FD
6DEBF564DF41529E4C21066327DBDC39C4D285F4C15195DD32AA1DF3482C9126
3F59149B1380585B410E3197C4D252D50CCA9DD2DEB23F96EE0869FE5FF5A504
BF2423E4E66B012C1475AFF5CEC1AC472C2FEBC277543D03784F45AA5889DB36
0EF003913944CDAE85AB7732DA2E4A28028B73907DB9249EEB737C83F2F2E81C
8074D6D81193A2E11D415ED6B464545EEDAE5EC3612D162A81518A9172D10C12
E0C0B8701E8726A21DEF14039770286698174B7E13E2C89775CB080DBA2EA707
994A42FE17EECE46406B89593B97A5EBC4E1714E226DF41369C2CFD4F8917723
FB57D35D2F6654D0F62F3EB5797CC63EC41F0C51E3E3982721CB72E15C34A890
5364D4A0B2D0448DD553DC4C8DEDBF99A80787A0F0B2D8A19FDF456A69A9CAC5
A22033AC04F1D2F941BD9F67AF56B9BDAF03DABDC4E2BE22B5C1B2CA2F5C3DBA
53671515B08DAED0809FF11E09797FE85C1C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F9_0 /f-0-0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 268 208 re
W
q
q
[1 0 0 1 -152 -38] cm
q
[1 0 0 1 0 0] cm
0 0 571 288 re
W
q
[0.1 0 0 0.1 0 0] cm
q
5 5 5700 2860 re
W
20 w
/DeviceRGB {} CS
[0 0 1] SC
1640 2350 m
1640 1560 l
S
/DeviceRGB {} cs
[0 0 1] sc
1640 1560 m
1700 1670 l
1580 1670 l
f
1640 1560 m
1640 510 l
S
1640 510 m
1950 1220 l
S
1950 1220 m
1860 1150 l
1970 1100 l
f
1950 1220 m
2450 2350 l
S
1640 510 m
3360 1810 l
S
3360 1810 m
3240 1790 l
3310 1690 l
f
3360 1810 m
4080 2350 l
S
2450 2350 m
2450 980 l
S
2450 980 m
2510 1090 l
2390 1090 l
f
2450 980 m
2450 510 l
S
2450 2350 m
3280 1420 l
S
3280 1420 m
3250 1540 l
3160 1460 l
f
3280 1420 m
4080 510 l
S
2450 510 m
2680 1030 l
S
2680 1030 m
2590 960 l
2700 910 l
f
2680 1030 m
3270 2350 l
S
3270 2350 m
2220 1160 l
S
2220 1160 m
2330 1200 l
2240 1280 l
f
2220 1160 m
1640 510 l
S
4080 2350 m
3790 1700 l
S
3790 1700 m
3890 1780 l
3780 1820 l
f
3790 1700 m
3270 510 l
S
3270 510 m
3040 1030 l
S
3040 1030 m
3020 910 l
3130 960 l
f
3040 1030 m
2450 2350 l
S
4080 510 m
3230 1150 l
S
3230 1150 m
3270 1040 l
3340 1140 l
f
3230 1150 m
1640 2350 l
S
10 w
/DeviceRGB {} CS
[1 1 0] SC
1640 2350 m
1650 2350 l
S
20 w
1650 2355 m
1650 2346.72 1643.28 2340 1635 2340 c
1626.72 2340 1620 2346.72 1620 2355 c
1620 2363.28 1626.72 2370 1635 2370 c
1643.28 2370 1650 2363.28 1650 2355 c
S
30 w
1660 2355 m
1660 2341.21 1648.79 2330 1635 2330 c
1621.21 2330 1610 2341.21 1610 2355 c
1610 2368.79 1621.21 2380 1635 2380 c
1648.79 2380 1660 2368.79 1660 2355 c
S
40 w
1670 2355 m
1670 2335.66 1654.34 2320 1635 2320 c
1615.66 2320 1600 2335.66 1600 2355 c
1600 2374.34 1615.66 2390 1635 2390 c
1654.34 2390 1670 2374.34 1670 2355 c
S
10 w
1640 510 m
1650 510 l
S
20 w
1650 515 m
1650 506.719 1643.28 500 1635 500 c
1626.72 500 1620 506.719 1620 515 c
1620 523.281 1626.72 530 1635 530 c
1643.28 530 1650 523.281 1650 515 c
S
30 w
1660 515 m
1660 501.211 1648.79 490 1635 490 c
1621.21 490 1610 501.211 1610 515 c
1610 528.789 1621.21 540 1635 540 c
1648.79 540 1660 528.789 1660 515 c
S
40 w
1670 515 m
1670 495.66 1654.34 480 1635 480 c
1615.66 480 1600 495.66 1600 515 c
1600 534.34 1615.66 550 1635 550 c
1654.34 550 1670 534.34 1670 515 c
S
10 w
2450 2350 m
2460 2350 l
S
20 w
2460 2355 m
2460 2346.72 2453.28 2340 2445 2340 c
2436.72 2340 2430 2346.72 2430 2355 c
2430 2363.28 2436.72 2370 2445 2370 c
2453.28 2370 2460 2363.28 2460 2355 c
S
30 w
2470 2355 m
2470 2341.21 2458.79 2330 2445 2330 c
2431.21 2330 2420 2341.21 2420 2355 c
2420 2368.79 2431.21 2380 2445 2380 c
2458.79 2380 2470 2368.79 2470 2355 c
S
40 w
2480 2355 m
2480 2335.66 2464.34 2320 2445 2320 c
2425.66 2320 2410 2335.66 2410 2355 c
2410 2374.34 2425.66 2390 2445 2390 c
2464.34 2390 2480 2374.34 2480 2355 c
S
10 w
2450 510 m
2460 510 l
S
20 w
2460 515 m
2460 506.719 2453.28 500 2445 500 c
2436.72 500 2430 506.719 2430 515 c
2430 523.281 2436.72 530 2445 530 c
2453.28 530 2460 523.281 2460 515 c
S
30 w
2470 515 m
2470 501.211 2458.79 490 2445 490 c
2431.21 490 2420 501.211 2420 515 c
2420 528.789 2431.21 540 2445 540 c
2458.79 540 2470 528.789 2470 515 c
S
40 w
2480 515 m
2480 495.66 2464.34 480 2445 480 c
2425.66 480 2410 495.66 2410 515 c
2410 534.34 2425.66 550 2445 550 c
2464.34 550 2480 534.34 2480 515 c
S
10 w
3270 2350 m
3280 2350 l
S
20 w
3280 2355 m
3280 2346.72 3273.28 2340 3265 2340 c
3256.72 2340 3250 2346.72 3250 2355 c
3250 2363.28 3256.72 2370 3265 2370 c
3273.28 2370 3280 2363.28 3280 2355 c
S
30 w
3290 2355 m
3290 2341.21 3278.79 2330 3265 2330 c
3251.21 2330 3240 2341.21 3240 2355 c
3240 2368.79 3251.21 2380 3265 2380 c
3278.79 2380 3290 2368.79 3290 2355 c
S
40 w
3300 2355 m
3300 2335.66 3284.34 2320 3265 2320 c
3245.66 2320 3230 2335.66 3230 2355 c
3230 2374.34 3245.66 2390 3265 2390 c
3284.34 2390 3300 2374.34 3300 2355 c
S
10 w
4080 2350 m
4090 2350 l
S
20 w
4090 2355 m
4090 2346.72 4083.28 2340 4075 2340 c
4066.72 2340 4060 2346.72 4060 2355 c
4060 2363.28 4066.72 2370 4075 2370 c
4083.28 2370 4090 2363.28 4090 2355 c
S
30 w
4100 2355 m
4100 2341.21 4088.79 2330 4075 2330 c
4061.21 2330 4050 2341.21 4050 2355 c
4050 2368.79 4061.21 2380 4075 2380 c
4088.79 2380 4100 2368.79 4100 2355 c
S
40 w
4110 2355 m
4110 2335.66 4094.34 2320 4075 2320 c
4055.66 2320 4040 2335.66 4040 2355 c
4040 2374.34 4055.66 2390 4075 2390 c
4094.34 2390 4110 2374.34 4110 2355 c
S
10 w
3270 510 m
3280 510 l
S
20 w
3280 515 m
3280 506.719 3273.28 500 3265 500 c
3256.72 500 3250 506.719 3250 515 c
3250 523.281 3256.72 530 3265 530 c
3273.28 530 3280 523.281 3280 515 c
S
30 w
3290 515 m
3290 501.211 3278.79 490 3265 490 c
3251.21 490 3240 501.211 3240 515 c
3240 528.789 3251.21 540 3265 540 c
3278.79 540 3290 528.789 3290 515 c
S
40 w
3300 515 m
3300 495.66 3284.34 480 3265 480 c
3245.66 480 3230 495.66 3230 515 c
3230 534.34 3245.66 550 3265 550 c
3284.34 550 3300 534.34 3300 515 c
S
10 w
4080 510 m
4090 510 l
S
20 w
4090 515 m
4090 506.719 4083.28 500 4075 500 c
4066.72 500 4060 506.719 4060 515 c
4060 523.281 4066.72 530 4075 530 c
4083.28 530 4090 523.281 4090 515 c
S
30 w
4100 515 m
4100 501.211 4088.79 490 4075 490 c
4061.21 490 4050 501.211 4050 515 c
4050 528.789 4061.21 540 4075 540 c
4088.79 540 4100 528.789 4100 515 c
S
40 w
4110 515 m
4110 495.66 4094.34 480 4075 480 c
4055.66 480 4040 495.66 4040 515 c
4040 534.34 4055.66 550 4075 550 c
4094.34 550 4110 534.34 4110 515 c
S
10 w
/DeviceGray {} CS
[0] SC
1640 2350 m
1650 2350 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 152 234] Tm
0 0 Td
/F9_0 16 Tf
(1)
[8.896
0] Tj
Q
1640 510 m
1650 510 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 152 39] Tm
0 0 Td
/F9_0 16 Tf
(2)
[8.896
0] Tj
Q
2450 2350 m
2460 2350 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 233 234] Tm
0 0 Td
/F9_0 16 Tf
(3)
[8.896
0] Tj
Q
2450 510 m
2460 510 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 233 39] Tm
0 0 Td
/F9_0 16 Tf
(4)
[8.896
0] Tj
Q
3270 2350 m
3280 2350 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 330 234] Tm
0 0 Td
/F9_0 16 Tf
(5)
[8.896
0] Tj
Q
4080 2350 m
4090 2350 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 411 234] Tm
0 0 Td
/F9_0 16 Tf
(6)
[8.896
0] Tj
Q
3270 510 m
3280 510 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 330 39] Tm
0 0 Td
/F9_0 16 Tf
(7)
[8.896
0] Tj
Q
4080 510 m
4090 510 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 411 39] Tm
0 0 Td
/F9_0 16 Tf
(8)
[8.896
0] Tj
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font f-0-0
%%EOF
