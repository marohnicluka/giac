%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.48.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 400 159
%%HiResBoundingBox: 0 0 400 159
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font f-0-0
%!FontType1-1.0: f-0-0
12 dict begin
/FontInfo 10 dict dup begin
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /f-0-0 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -18 709 747] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89DCAEC6987A783181E687D6392CB3DF
C3438E7470F1F9EBA57432049ABDE6FC8724B2CB7B80D03FC0519B4412E8609B
97D93147224981A751D78A993514CFB3EB99ED61559911613B1A53A80E4CD2F6
968103849553662C58F0E929EC10788853175E9AF8B9AAB8888A53B7387DD06C
B8314B0070C91DB94C718A3A0688BE44B6E89F50290CF85B5A4065BAD8BE4F93
F2AF6761970FB2996627306485D530EDA72861039C9F3C15678F6A8043EEAAE4
5BD4993D98B18BCFDDFD7541A9C9A4875DEF1CA0014ABFFB085B3249D2B78411
05D9D6AAA7A0BFC2D696DB4206D6FED590B9BB7795F1FD944EAC303E71276453
44BA6969C608C3B689AAE26E72C7BBB590073C84085E778CC8780929164A17B1
6C11663A384636B807D3675AC559187CF95874CE73B085F39CA33FDF69FF0B1D
F9F501F86588964234CA200BFC76BB089982CACC395BCCF26D9590A6D829B8E4
E26DD6E4F83C722787F8D5F13F26240EE1765624C9DBA7D397238E6C0A5DA9DE
350C30A55235E34926CA4DFFFF1E77723E0FC6C1506C2E24D92B789EAAB7FA07
9F4C99F0BAB0C34760E6D78D1EE8B004E57E6F0C0F1BB4574DA86634BA5C072B
F91DD4B0CCCFFAC107EB7C21D42824BBBC7A1A6287C8106AF6842B311488934A
A6F56B454C6AB8E7A76C9938431245FE506C17714549CFA2DB79C0113A55CAEB
77C3C9BE57558444881D0CDF2E440EFEA10CC2768B0FCBD0425433440831C801
1AB0EEAB8CADEF60BC43A26DAE0CC848A9C2B73B12D56692361F00607CA9C6BA
556D0178D1F99C926CA63A76586ACAC939BCDE635DD815EFC6D4AB2F9DE01462
E3BE0DE3304FDA9347E5EA053A4FC1E9FB2250C48A0C9637357AAD8636673A4A
42745C04FF1ED1B0A3ECBF2EEA46C3CD9F9A25DBF1D2A3405F28B82A83DA0923
4780F849FBBF580159B2C5A4F91D2AA96F2D21C50D8F84AA235ED3B1524E05C0
BE4543F16E2DE7F48773D21407688EFEC64BB3214239A12E3FA8A0DF8AD0B262
583A144805D06C5734AABAC02D0FBB5C395DE2545BD06B048A4067CD24834562
AF7B24AC8C9638BC84925864BD00BF4ED76B3D21B88AF7A270E63CF98AD4D094
579724D4D70839398757863406778E57D291ED2721F9BBDBD93FE839DF2A418A
399975FCCB3591D04F9D3ECF9479FB0E46901B4B1B5322DA9B729C6C8D4A9FE7
F00620F40632BC6FBDECC2190332610232728EAC1D42A3F5E80B75F3BB35929E
754B5F83994498E3C01F15066F875855DBF90E75C1E6CA624D2A0EC1130C1AEF
34E111C506A25B68FBE7D3C96AA90B7EC5E81E0839E60EA5DD651E8858E70EBC
4D25912085947961952648E1E754EA3FD07C0B6CE60139216F3DE7772525515E
67553630337C738774F49B1E2B574DF9CB57333087396B8C1B38E0EFC0338AF7
42C9E986D4471B7CA0EB444E55F9FE9632AA40B0967CAFF71EA5DAAD2FA674A1
0E6C5097EC50DC172521430B54D9C603836CD613444DCBBB44A9C2159A761E63
AED72D6E2CF606BE27A12B34CD16B0D129C01C396861E7A0E544E9C0B3CA26CD
F56A03
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F9_0 /f-0-0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 400 159 re
W
q
q
[1 0 0 1 -86 -33] cm
q
[1 0 0 1 0 0] cm
0 0 571 229 re
W
q
[0.1 0 0 0.1 0 0] cm
q
5 5 5700 2270 re
W
20 w
/DeviceRGB {} CS
[0 0 1] SC
990 1130 m
1410 1420 l
S
/DeviceRGB {} cs
[0 0 1] sc
1410 1420 m
1290 1410 l
1360 1310 l
f
1410 1420 m
1960 1810 l
S
990 1130 m
1570 1000 l
S
1570 1000 m
1480 1080 l
1460 970 l
f
1570 1000 m
2340 820 l
S
1960 1810 m
2560 1650 l
S
2560 1650 m
2480 1740 l
2450 1620 l
f
2560 1650 m
3360 1450 l
S
2340 820 m
2180 1240 l
S
2180 1240 m
2170 1150 l
2260 1180 l
f
2180 1240 m
1960 1810 l
S
2340 820 m
2780 1090 l
S
2780 1090 m
2660 1090 l
2720 980 l
f
2780 1090 m
3360 1450 l
S
2340 820 m
2940 670 l
S
2940 670 m
2860 750 l
2830 640 l
f
2940 670 m
3740 460 l
S
3360 1450 m
3530 1020 l
S
3530 1020 m
3540 1120 l
3450 1090 l
f
3530 1020 m
3740 460 l
S
3360 1450 m
3940 1310 l
S
3940 1310 m
3850 1390 l
3830 1280 l
f
3940 1310 m
4720 1130 l
S
3740 460 m
4160 750 l
S
4160 750 m
4040 740 l
4110 640 l
f
4160 750 m
4720 1130 l
S
40 w
/DeviceRGB {} CS
[1 1 0] SC
1020 1135 m
1020 1115.66 1004.34 1100 985 1100 c
965.66 1100 950 1115.66 950 1135 c
950 1154.34 965.66 1170 985 1170 c
1004.34 1170 1020 1154.34 1020 1135 c
S
1990 1815 m
1990 1795.66 1974.34 1780 1955 1780 c
1935.66 1780 1920 1795.66 1920 1815 c
1920 1834.34 1935.66 1850 1955 1850 c
1974.34 1850 1990 1834.34 1990 1815 c
S
2370 825 m
2370 805.66 2354.34 790 2335 790 c
2315.66 790 2300 805.66 2300 825 c
2300 844.34 2315.66 860 2335 860 c
2354.34 860 2370 844.34 2370 825 c
S
3390 1455 m
3390 1435.66 3374.34 1420 3355 1420 c
3335.66 1420 3320 1435.66 3320 1455 c
3320 1474.34 3335.66 1490 3355 1490 c
3374.34 1490 3390 1474.34 3390 1455 c
S
3770 465 m
3770 445.66 3754.34 430 3735 430 c
3715.66 430 3700 445.66 3700 465 c
3700 484.34 3715.66 500 3735 500 c
3754.34 500 3770 484.34 3770 465 c
S
4750 1135 m
4750 1115.66 4734.34 1100 4715 1100 c
4695.66 1100 4680 1115.66 4680 1135 c
4680 1154.34 4695.66 1170 4715 1170 c
4734.34 1170 4750 1154.34 4750 1135 c
S
10 w
/DeviceRGB {} CS
[0 0 1] SC
1410 1420 m
1420 1420 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 129 141] Tm
0 0 Td
/F9_0 16 Tf
(3)
[8.896
0] Tj
Q
1570 1000 m
1580 1000 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 145 88] Tm
0 0 Td
/F9_0 16 Tf
(2)
[8.896
0] Tj
Q
2560 1650 m
2570 1650 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 259 164] Tm
0 0 Td
/F9_0 16 Tf
(4)
[8.896
0] Tj
Q
2180 1240 m
2190 1240 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 221 123] Tm
0 0 Td
/F9_0 16 Tf
(1)
[8.896
0] Tj
Q
2780 1090 m
2790 1090 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 266 108] Tm
0 0 Td
/F9_0 16 Tf
(2)
[8.896
0] Tj
Q
2940 670 m
2950 670 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 297 66] Tm
0 0 Td
/F9_0 16 Tf
(3)
[8.896
0] Tj
Q
3530 1020 m
3540 1020 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 356 101] Tm
0 0 Td
/F9_0 16 Tf
(2)
[8.896
0] Tj
Q
3940 1310 m
3950 1310 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 397 130] Tm
0 0 Td
/F9_0 16 Tf
(1)
[8.896
0] Tj
Q
4160 750 m
4170 750 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 404 74] Tm
0 0 Td
/F9_0 16 Tf
(2)
[8.896
0] Tj
Q
/DeviceGray {} CS
[0] SC
990 1130 m
1000 1130 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 86 101] Tm
0 0 Td
/F9_0 16 Tf
(C)
[11.552
0] Tj
Q
1960 1810 m
1970 1810 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 182 180] Tm
0 0 Td
/F9_0 16 Tf
(D)
[11.552
0] Tj
Q
2340 820 m
2350 820 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 222 70] Tm
0 0 Td
/F9_0 16 Tf
(E)
[10.672
0] Tj
Q
3360 1450 m
3370 1450 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 339 144] Tm
0 0 Td
/F9_0 16 Tf
(F)
[9.776
0] Tj
Q
3740 460 m
3750 460 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 377 34] Tm
0 0 Td
/F9_0 16 Tf
(G)
[12.448
0] Tj
Q
4720 1130 m
4730 1130 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 475 112] Tm
0 0 Td
/F9_0 16 Tf
(H)
[11.552
0] Tj
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font f-0-0
%%EOF
