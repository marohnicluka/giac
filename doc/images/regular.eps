%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.48.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 375 208
%%HiResBoundingBox: 0 0 375 208
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font f-0-0
%!FontType1-1.0: f-0-0
12 dict begin
/FontInfo 10 dict dup begin
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /f-0-0 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -15 520 709] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89DCAEC6987A783181E687D6392CB3DF
C3438E7470F1F9EBA57432049ABDE6FC8724B2CB7B80D03FC0519B4412E8609B
97D93147224981A751D78A993514CFB3EB99ED616C201CC785CC2072FDA487B5
4E43C39E925625CCAEB5C13047C19EBD8762BAB673AFE38280F8C31560BDA020
39756DA93FB1E36EE8D1D6A18869C4572D406BBD8A9CEFC2784A882D400A07D2
40723F551DF2289A4F8B1C6AC926964317D8B929963270AAADB238E7EA9387C3
10CF6CE560626C5CEB1A5EA87EE85E860A2EF45F51274DC22C807A86F68AF952
DFB3A1C661D752354581B4685AF3DEC8373B5F19B6487C30D3360703935666C2
35026AB51898AD7396E97324A1F4E705C06F7631A230E51FAF06568F2E5242D6
3B97550D8E9692CDB1523A7AC3009BBBAB5C1AE84891D67B6C373EB946B2DC13
A6227457DF0C67DA16083D375F31C22FF85DDEA26FE5F2FA3685DF8F16C7DC84
14C3E28227CA636569D275E279CBABA890195912D60B06F6E31EF51EEA9A826B
8FCC150A01E2BAD9DEADD52A58F5E6A3752AD523633F011B1CA32A2069123FDB
D5EC00CE7504C6E355C1A59F89E59E424994F368462C45AC9985E8D69F389F69
11DD0A663407B44F6336F47D0ED007AA3223A83BD1A9B33DA5FC34B0D2BC5862
EF6E42A71C62DF5276D769C266D62FD8D00B22BEDB6614B3679159BD914C4F50
75F8C38CA80F7143249B7D4C0000C85AA84E8ECA27AFE2B61241E8119B07869E
6F926A69EEBCACAAEE076B84A53AEE20913B796C6F7F4200F1BC2F74C02CB030
EF4F5A1EF49F3474910AD5C7C403D0F9D00212146FD045BF114B8705BBFD7A23
9658C2E3E1B4887BBF303FF177BADC25FFCCD1B23FAFBCC452B993796BA014DF
74C88085E20C91548DF53F1E1724F8DFAFA24EC8679E013623B00F489F0CBB2A
C3F12A19388ED2D8F6D5449D0D91640C30152126C14A56366B8BD901FEA82CB2
0440AFF940BAF51FFB4154B6CC41DDE80B508FD3D9F49F8FE11B2A26BA36095B
1DAF797A6D814CF9DA22AA28A01A98170741DFABB9469B6CE19D80F711F612D3
84D36622CE9A50FC94DDE5EF8A06CF4FD6B067B0ADB6793FFED93164017B7F7D
8CE20B63F1EE3C7EBD23CFC6DD9FA2C4D3088F20343DE53FF5B38F851D6E3AAB
F6C18A1E4A53D4452BA1EF886731005CD64ABCA00D77811F0D376431DD520B0A
71B4DC3C89032EC0807A360C7A925209610A885DF1690A612762C8CBAF53B892
09D5B1E65182097A22A39883CAC4641669B571E554DDE8239FD193B45CA39390
E07860C0DE6B4909C1D1D7BC0F6C9C22830C47253B8ED2DABCD967860F942943
79466DAE9BF8F7191A9EFC5A15C886C8016D12133308AAE93C581F1071299315
A63FB436245242E43423A40B8C23A3237C7081273B601805F82DFFFEF1D3B35C
79E58FFAA4B19744DEEC914379D078193F0341B9E1FCB3D62ED1AD5DCD21DFF6
F082988CF89A9EC14FFBC483AFF738043555B402AA742B8BCE7CCD054BD56A29
E8E1328F1D5991EEFBEDB63BE2891C463F4170FB3872EE822298D11251101C3C
ABAFF871CD200A2ECF4D916E81C30FCBDB73EB5148CD1A888A3B7B48255E77D0
12950C778C5D178E06C558DF6E08E5C92CE290DCCEC4FF041FC3532B45AA0E24
F9143AC2F4F08DD592D336EA34C5D32FA56AA64DBD75466FF2F5C074FC316589
F6EEDC808BA6E2DC7DF704A87B8D86A43110EF66676CCECBC30A3256A7B4193A
72CFFD8BA73D244F789ECECE189D1E81A29A3E56204DC99E8D9F69DDCFFDC343
2A8363B4BECC7A712E97B433221F51BA2F18F2C640B9F5A2FBA78D49C9BCF830
ECDC6FDE56E00FF8959A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F9_0 /f-0-0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 375 208 re
W
q
q
[1 0 0 1 -97 -38] cm
q
[1 0 0 1 0 0] cm
0 0 571 288 re
W
q
[0.1 0 0 0.1 0 0] cm
q
5 5 5700 2860 re
W
20 w
/DeviceRGB {} CS
[0 0 1] SC
4110 1620 m
3320 2040 l
S
4110 1620 m
3660 1080 l
S
4110 1620 m
4630 1040 l
S
4630 1040 m
4090 540 l
S
4630 1040 m
4310 1020 l
S
1140 1700 m
1090 1320 l
S
1140 1700 m
1480 950 l
S
1140 1700 m
1530 2350 l
S
4090 540 m
4310 1020 l
S
4090 540 m
3190 510 l
S
1090 1320 m
1360 610 l
S
1090 1320 m
1570 1980 l
S
4310 1020 m
3800 1560 l
S
2130 510 m
1360 610 l
S
2130 510 m
3190 510 l
S
2130 510 m
1480 950 l
S
3660 1080 m
3800 1560 l
S
3660 1080 m
3190 510 l
S
3320 2040 m
3800 1560 l
S
3320 2040 m
2290 2280 l
S
1360 610 m
1480 950 l
S
2290 2280 m
1570 1980 l
S
2290 2280 m
1530 2350 l
S
1570 1980 m
1530 2350 l
S
10 w
/DeviceRGB {} CS
[1 1 0] SC
4110 1620 m
4120 1620 l
S
20 w
4120 1625 m
4120 1616.72 4113.28 1610 4105 1610 c
4096.72 1610 4090 1616.72 4090 1625 c
4090 1633.28 4096.72 1640 4105 1640 c
4113.28 1640 4120 1633.28 4120 1625 c
S
30 w
4130 1625 m
4130 1611.21 4118.79 1600 4105 1600 c
4091.21 1600 4080 1611.21 4080 1625 c
4080 1638.79 4091.21 1650 4105 1650 c
4118.79 1650 4130 1638.79 4130 1625 c
S
40 w
4140 1625 m
4140 1605.66 4124.34 1590 4105 1590 c
4085.66 1590 4070 1605.66 4070 1625 c
4070 1644.34 4085.66 1660 4105 1660 c
4124.34 1660 4140 1644.34 4140 1625 c
S
10 w
4630 1040 m
4640 1040 l
S
20 w
4640 1045 m
4640 1036.72 4633.28 1030 4625 1030 c
4616.72 1030 4610 1036.72 4610 1045 c
4610 1053.28 4616.72 1060 4625 1060 c
4633.28 1060 4640 1053.28 4640 1045 c
S
30 w
4650 1045 m
4650 1031.21 4638.79 1020 4625 1020 c
4611.21 1020 4600 1031.21 4600 1045 c
4600 1058.79 4611.21 1070 4625 1070 c
4638.79 1070 4650 1058.79 4650 1045 c
S
40 w
4660 1045 m
4660 1025.66 4644.34 1010 4625 1010 c
4605.66 1010 4590 1025.66 4590 1045 c
4590 1064.34 4605.66 1080 4625 1080 c
4644.34 1080 4660 1064.34 4660 1045 c
S
10 w
1140 1700 m
1150 1700 l
S
20 w
1150 1705 m
1150 1696.72 1143.28 1690 1135 1690 c
1126.72 1690 1120 1696.72 1120 1705 c
1120 1713.28 1126.72 1720 1135 1720 c
1143.28 1720 1150 1713.28 1150 1705 c
S
30 w
1160 1705 m
1160 1691.21 1148.79 1680 1135 1680 c
1121.21 1680 1110 1691.21 1110 1705 c
1110 1718.79 1121.21 1730 1135 1730 c
1148.79 1730 1160 1718.79 1160 1705 c
S
40 w
1170 1705 m
1170 1685.66 1154.34 1670 1135 1670 c
1115.66 1670 1100 1685.66 1100 1705 c
1100 1724.34 1115.66 1740 1135 1740 c
1154.34 1740 1170 1724.34 1170 1705 c
S
10 w
4090 540 m
4100 540 l
S
20 w
4100 545 m
4100 536.719 4093.28 530 4085 530 c
4076.72 530 4070 536.719 4070 545 c
4070 553.281 4076.72 560 4085 560 c
4093.28 560 4100 553.281 4100 545 c
S
30 w
4110 545 m
4110 531.211 4098.79 520 4085 520 c
4071.21 520 4060 531.211 4060 545 c
4060 558.789 4071.21 570 4085 570 c
4098.79 570 4110 558.789 4110 545 c
S
40 w
4120 545 m
4120 525.66 4104.34 510 4085 510 c
4065.66 510 4050 525.66 4050 545 c
4050 564.34 4065.66 580 4085 580 c
4104.34 580 4120 564.34 4120 545 c
S
10 w
1090 1320 m
1100 1320 l
S
20 w
1100 1325 m
1100 1316.72 1093.28 1310 1085 1310 c
1076.72 1310 1070 1316.72 1070 1325 c
1070 1333.28 1076.72 1340 1085 1340 c
1093.28 1340 1100 1333.28 1100 1325 c
S
30 w
1110 1325 m
1110 1311.21 1098.79 1300 1085 1300 c
1071.21 1300 1060 1311.21 1060 1325 c
1060 1338.79 1071.21 1350 1085 1350 c
1098.79 1350 1110 1338.79 1110 1325 c
S
40 w
1120 1325 m
1120 1305.66 1104.34 1290 1085 1290 c
1065.66 1290 1050 1305.66 1050 1325 c
1050 1344.34 1065.66 1360 1085 1360 c
1104.34 1360 1120 1344.34 1120 1325 c
S
10 w
4310 1020 m
4320 1020 l
S
20 w
4320 1025 m
4320 1016.72 4313.28 1010 4305 1010 c
4296.72 1010 4290 1016.72 4290 1025 c
4290 1033.28 4296.72 1040 4305 1040 c
4313.28 1040 4320 1033.28 4320 1025 c
S
30 w
4330 1025 m
4330 1011.21 4318.79 1000 4305 1000 c
4291.21 1000 4280 1011.21 4280 1025 c
4280 1038.79 4291.21 1050 4305 1050 c
4318.79 1050 4330 1038.79 4330 1025 c
S
40 w
4340 1025 m
4340 1005.66 4324.34 990 4305 990 c
4285.66 990 4270 1005.66 4270 1025 c
4270 1044.34 4285.66 1060 4305 1060 c
4324.34 1060 4340 1044.34 4340 1025 c
S
10 w
2130 510 m
2140 510 l
S
20 w
2140 515 m
2140 506.719 2133.28 500 2125 500 c
2116.72 500 2110 506.719 2110 515 c
2110 523.281 2116.72 530 2125 530 c
2133.28 530 2140 523.281 2140 515 c
S
30 w
2150 515 m
2150 501.211 2138.79 490 2125 490 c
2111.21 490 2100 501.211 2100 515 c
2100 528.789 2111.21 540 2125 540 c
2138.79 540 2150 528.789 2150 515 c
S
40 w
2160 515 m
2160 495.66 2144.34 480 2125 480 c
2105.66 480 2090 495.66 2090 515 c
2090 534.34 2105.66 550 2125 550 c
2144.34 550 2160 534.34 2160 515 c
S
10 w
3660 1080 m
3670 1080 l
S
20 w
3670 1085 m
3670 1076.72 3663.28 1070 3655 1070 c
3646.72 1070 3640 1076.72 3640 1085 c
3640 1093.28 3646.72 1100 3655 1100 c
3663.28 1100 3670 1093.28 3670 1085 c
S
30 w
3680 1085 m
3680 1071.21 3668.79 1060 3655 1060 c
3641.21 1060 3630 1071.21 3630 1085 c
3630 1098.79 3641.21 1110 3655 1110 c
3668.79 1110 3680 1098.79 3680 1085 c
S
40 w
3690 1085 m
3690 1065.66 3674.34 1050 3655 1050 c
3635.66 1050 3620 1065.66 3620 1085 c
3620 1104.34 3635.66 1120 3655 1120 c
3674.34 1120 3690 1104.34 3690 1085 c
S
10 w
3190 510 m
3200 510 l
S
20 w
3200 515 m
3200 506.719 3193.28 500 3185 500 c
3176.72 500 3170 506.719 3170 515 c
3170 523.281 3176.72 530 3185 530 c
3193.28 530 3200 523.281 3200 515 c
S
30 w
3210 515 m
3210 501.211 3198.79 490 3185 490 c
3171.21 490 3160 501.211 3160 515 c
3160 528.789 3171.21 540 3185 540 c
3198.79 540 3210 528.789 3210 515 c
S
40 w
3220 515 m
3220 495.66 3204.34 480 3185 480 c
3165.66 480 3150 495.66 3150 515 c
3150 534.34 3165.66 550 3185 550 c
3204.34 550 3220 534.34 3220 515 c
S
10 w
3320 2040 m
3330 2040 l
S
20 w
3330 2045 m
3330 2036.72 3323.28 2030 3315 2030 c
3306.72 2030 3300 2036.72 3300 2045 c
3300 2053.28 3306.72 2060 3315 2060 c
3323.28 2060 3330 2053.28 3330 2045 c
S
30 w
3340 2045 m
3340 2031.21 3328.79 2020 3315 2020 c
3301.21 2020 3290 2031.21 3290 2045 c
3290 2058.79 3301.21 2070 3315 2070 c
3328.79 2070 3340 2058.79 3340 2045 c
S
40 w
3350 2045 m
3350 2025.66 3334.34 2010 3315 2010 c
3295.66 2010 3280 2025.66 3280 2045 c
3280 2064.34 3295.66 2080 3315 2080 c
3334.34 2080 3350 2064.34 3350 2045 c
S
10 w
1360 610 m
1370 610 l
S
20 w
1370 615 m
1370 606.719 1363.28 600 1355 600 c
1346.72 600 1340 606.719 1340 615 c
1340 623.281 1346.72 630 1355 630 c
1363.28 630 1370 623.281 1370 615 c
S
30 w
1380 615 m
1380 601.211 1368.79 590 1355 590 c
1341.21 590 1330 601.211 1330 615 c
1330 628.789 1341.21 640 1355 640 c
1368.79 640 1380 628.789 1380 615 c
S
40 w
1390 615 m
1390 595.66 1374.34 580 1355 580 c
1335.66 580 1320 595.66 1320 615 c
1320 634.34 1335.66 650 1355 650 c
1374.34 650 1390 634.34 1390 615 c
S
10 w
2290 2280 m
2300 2280 l
S
20 w
2300 2285 m
2300 2276.72 2293.28 2270 2285 2270 c
2276.72 2270 2270 2276.72 2270 2285 c
2270 2293.28 2276.72 2300 2285 2300 c
2293.28 2300 2300 2293.28 2300 2285 c
S
30 w
2310 2285 m
2310 2271.21 2298.79 2260 2285 2260 c
2271.21 2260 2260 2271.21 2260 2285 c
2260 2298.79 2271.21 2310 2285 2310 c
2298.79 2310 2310 2298.79 2310 2285 c
S
40 w
2320 2285 m
2320 2265.66 2304.34 2250 2285 2250 c
2265.66 2250 2250 2265.66 2250 2285 c
2250 2304.34 2265.66 2320 2285 2320 c
2304.34 2320 2320 2304.34 2320 2285 c
S
10 w
1480 950 m
1490 950 l
S
20 w
1490 955 m
1490 946.719 1483.28 940 1475 940 c
1466.72 940 1460 946.719 1460 955 c
1460 963.281 1466.72 970 1475 970 c
1483.28 970 1490 963.281 1490 955 c
S
30 w
1500 955 m
1500 941.211 1488.79 930 1475 930 c
1461.21 930 1450 941.211 1450 955 c
1450 968.789 1461.21 980 1475 980 c
1488.79 980 1500 968.789 1500 955 c
S
40 w
1510 955 m
1510 935.66 1494.34 920 1475 920 c
1455.66 920 1440 935.66 1440 955 c
1440 974.34 1455.66 990 1475 990 c
1494.34 990 1510 974.34 1510 955 c
S
10 w
1570 1980 m
1580 1980 l
S
20 w
1580 1985 m
1580 1976.72 1573.28 1970 1565 1970 c
1556.72 1970 1550 1976.72 1550 1985 c
1550 1993.28 1556.72 2000 1565 2000 c
1573.28 2000 1580 1993.28 1580 1985 c
S
30 w
1590 1985 m
1590 1971.21 1578.79 1960 1565 1960 c
1551.21 1960 1540 1971.21 1540 1985 c
1540 1998.79 1551.21 2010 1565 2010 c
1578.79 2010 1590 1998.79 1590 1985 c
S
40 w
1600 1985 m
1600 1965.66 1584.34 1950 1565 1950 c
1545.66 1950 1530 1965.66 1530 1985 c
1530 2004.34 1545.66 2020 1565 2020 c
1584.34 2020 1600 2004.34 1600 1985 c
S
10 w
3800 1560 m
3810 1560 l
S
20 w
3810 1565 m
3810 1556.72 3803.28 1550 3795 1550 c
3786.72 1550 3780 1556.72 3780 1565 c
3780 1573.28 3786.72 1580 3795 1580 c
3803.28 1580 3810 1573.28 3810 1565 c
S
30 w
3820 1565 m
3820 1551.21 3808.79 1540 3795 1540 c
3781.21 1540 3770 1551.21 3770 1565 c
3770 1578.79 3781.21 1590 3795 1590 c
3808.79 1590 3820 1578.79 3820 1565 c
S
40 w
3830 1565 m
3830 1545.66 3814.34 1530 3795 1530 c
3775.66 1530 3760 1545.66 3760 1565 c
3760 1584.34 3775.66 1600 3795 1600 c
3814.34 1600 3830 1584.34 3830 1565 c
S
10 w
1530 2350 m
1540 2350 l
S
20 w
1540 2355 m
1540 2346.72 1533.28 2340 1525 2340 c
1516.72 2340 1510 2346.72 1510 2355 c
1510 2363.28 1516.72 2370 1525 2370 c
1533.28 2370 1540 2363.28 1540 2355 c
S
30 w
1550 2355 m
1550 2341.21 1538.79 2330 1525 2330 c
1511.21 2330 1500 2341.21 1500 2355 c
1500 2368.79 1511.21 2380 1525 2380 c
1538.79 2380 1550 2368.79 1550 2355 c
S
40 w
1560 2355 m
1560 2335.66 1544.34 2320 1525 2320 c
1505.66 2320 1490 2335.66 1490 2355 c
1490 2374.34 1505.66 2390 1525 2390 c
1544.34 2390 1560 2374.34 1560 2355 c
S
10 w
/DeviceGray {} CS
[0] SC
4110 1620 m
4120 1620 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 414 161] Tm
0 0 Td
/F9_0 16 Tf
(0)
[8.896
0] Tj
Q
4630 1040 m
4640 1040 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 466 92] Tm
0 0 Td
/F9_0 16 Tf
(1)
[8.896
0] Tj
Q
1140 1700 m
1150 1700 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 102 169] Tm
0 0 Td
/F9_0 16 Tf
(2)
[8.896
0] Tj
Q
4090 540 m
4100 540 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 412 42] Tm
0 0 Td
/F9_0 16 Tf
(3)
[8.896
0] Tj
Q
1090 1320 m
1100 1320 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 97 120] Tm
0 0 Td
/F9_0 16 Tf
(4)
[8.896
0] Tj
Q
4310 1020 m
4320 1020 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 434 90] Tm
0 0 Td
/F9_0 16 Tf
(5)
[8.896
0] Tj
Q
2130 510 m
2140 510 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 201 39] Tm
0 0 Td
/F9_0 16 Tf
(6)
[8.896
0] Tj
Q
3660 1080 m
3670 1080 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 369 96] Tm
0 0 Td
/F9_0 16 Tf
(7)
[8.896
0] Tj
Q
3190 510 m
3200 510 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 322 39] Tm
0 0 Td
/F9_0 16 Tf
(8)
[8.896
0] Tj
Q
3320 2040 m
3330 2040 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 335 203] Tm
0 0 Td
/F9_0 16 Tf
(9)
[8.896
0] Tj
Q
1360 610 m
1370 610 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 115 49] Tm
0 0 Td
/F9_0 16 Tf
(10)
[8.896
0
8.896
0] Tj
Q
2290 2280 m
2300 2280 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 232 227] Tm
0 0 Td
/F9_0 16 Tf
(11)
[8.896
0
8.896
0] Tj
Q
1480 950 m
1490 950 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 151 94] Tm
0 0 Td
/F9_0 16 Tf
(12)
[8.896
0
8.896
0] Tj
Q
1570 1980 m
1580 1980 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 160 186] Tm
0 0 Td
/F9_0 16 Tf
(13)
[8.896
0
8.896
0] Tj
Q
3800 1560 m
3810 1560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 383 155] Tm
0 0 Td
/F9_0 16 Tf
(14)
[8.896
0
8.896
0] Tj
Q
1530 2350 m
1540 2350 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 132 234] Tm
0 0 Td
/F9_0 16 Tf
(15)
[8.896
0
8.896
0] Tj
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font f-0-0
%%EOF
